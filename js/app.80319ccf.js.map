{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils/perlin.js","webpack:///./src/App.vue?7ca6","webpack:///./src/components/mycanvas/MyCanvas.vue?b2c8","webpack:///./src/components/mycanvas/vert.glsl","webpack:///./src/components/mycanvas/frag.glsl","webpack:///./src/components/mycanvas/perlin.glsl","webpack:///./src/components/mycanvas/hsl2rgb.glsl","webpack:///./src/components/mycanvas/common.glsl","webpack:///./src/utils/webGl.js","webpack:///./src/utils/webAudio.js","webpack:///src/components/mycanvas/MyCanvas.vue","webpack:///./src/components/mycanvas/MyCanvas.vue?c97f","webpack:///./src/components/mycanvas/MyCanvas.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/components/mycanvas/MyCanvas.vue?74fe"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","global","noise","Grad","x","y","z","this","dot2","dot3","grad3","perm","Array","gradP","seed","Math","floor","v","F2","sqrt","G2","F3","G3","fade","lerp","a","b","simplex2","xin","yin","n0","n1","n2","i1","j1","x0","y0","x1","y1","x2","y2","gi0","gi1","gi2","t0","t1","t2","simplex3","zin","n3","k1","i2","j2","k2","k","z0","z1","z2","x3","y3","z3","gi3","t3","perlin2","X","Y","n00","n01","n10","n11","u","perlin3","Z","n000","n001","n010","n011","n100","n101","n110","n111","w","_vm","_h","$createElement","_c","_self","attrs","staticRenderFns","canvasWidth","canvasHeight","_v","on","pickFile","enableMic","enableVr","ref","staticStyle","enableMusic","initShaderProgram","gl","vsSource","fsSource","vertexShader","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","alert","getProgramInfoLog","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","createState","cleanDrawback","drawCallback","updateCallback","time","delta","vrInitialized","vrSession","vrSpace","animation","vrSupported","map","tick","now","log","loopVr","state","render","frame","session","requestAnimationFrame","pose","getViewerPose","layer","renderState","baseLayer","framebuffer","views","view","viewport","getViewport","transform","inverse","matrix","projectionMatrix","onSessionEnded","event","onSessionStarted","addEventListener","updateRenderState","XRWebGLLayer","requestReferenceSpace","then","space","console","WebXRPolyfill","navigator","xr","isSessionSupported","supported","requestSession","loop","width","canvas","height","getProgramInfo","program","attribLocations","vertexPosition","getAttribLocation","vertexNormal","textureCoordinates","uniformLocations","getUniformLocation","viewMatrix","modelMatrix","orthoMatrix","sampler","enableLight","drawMode","drawVariant","lightDirection","cameraPosition","canvasSize","audioSampler","createArrayBuffers","vertices","normals","texture_coordinates","indices","image","indices_count","vertex_buffer","createBuffer","normal_buffer","index_buffer","texture_coordinates_buffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","Uint16Array","ic","vb","nb","tb","ib","im","createBillboard","getCylinderMesh","definitionA","definitionH","h","sin","PI","cos","getMesh","mesh","geometry","attributes","position","array","normal","uv","index","material","loadImage","getModel","gltf","group","scene","children","enableAttribs","programInfo","enableVertexAttribArray","disableAttribs","disableVertexAttribArray","drawMesh","image0","image1","vertexAttribPointer","FLOAT","uniform1i","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","TEXTURE1","drawElements","UNSIGNED_SHORT","vrInit","isPowerOf2","generateMipmap","texParameteri","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","CLAMP_TO_EDGE","TEXTURE_MIN_FILTER","LINEAR","bindAudioTexture","texture","TEXTURE2","loadAudio","level","internalFormat","RGB","border","srcFormat","srcType","UNSIGNED_BYTE","texImage2D","TEXTURE_MAG_FILTER","createTexture","RGBA","pixel","Uint8Array","loadTexture","url","Image","that","onload","src","getBillboardMatrix","cameraPos","cameraUp","to","glm","subtract","look","normalize","right","cross","up2","fromValues","createFramebuffer","maskTexture","maskRenderBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","maskFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","e","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","error","toString","deleteFramebuffer","obj","deleteTexture","deleteRenderbuffer","getFramebufferTexture","getFramebufferAttachmentParameter","READ_FRAMEBUFFER","FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","initializeArray","clamp","val","min","max","myNoise3d","myNoise3dx","il","pe","re","updateAudioArray","analyser","len","dataArray","freqArray","getByteTimeDomainData","getByteFrequencyData","ratio","component","components","WebGl","Vue","config","productionTip","App","$mount"],"mappings":"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","file":"js/app.80319ccf.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */\n\n(function(global){\n  var module = global.noise = {};\n\n  function Grad(x, y, z) {\n    this.x = x; this.y = y; this.z = z;\n  }\n  \n  Grad.prototype.dot2 = function(x, y) {\n    return this.x*x + this.y*y;\n  };\n\n  Grad.prototype.dot3 = function(x, y, z) {\n    return this.x*x + this.y*y + this.z*z;\n  };\n\n  var grad3 = [new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),\n               new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),\n               new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)];\n\n  var p = [151,160,137,91,90,15,\n  131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,\n  190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,\n  88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,\n  77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,\n  102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,\n  135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,\n  5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,\n  223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,\n  129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,\n  251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,\n  49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,\n  138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];\n  // To remove the need for index wrapping, double the permutation table length\n  var perm = new Array(512);\n  var gradP = new Array(512);\n\n  // This isn't a very good seeding function, but it works ok. It supports 2^16\n  // different seed values. Write something better if you need more seeds.\n  module.seed = function(seed) {\n    if(seed > 0 && seed < 1) {\n      // Scale the seed out\n      seed *= 65536;\n    }\n\n    seed = Math.floor(seed);\n    if(seed < 256) {\n      seed |= seed << 8;\n    }\n\n    for(var i = 0; i < 256; i++) {\n      var v;\n      if (i & 1) {\n        v = p[i] ^ (seed & 255);\n      } else {\n        v = p[i] ^ ((seed>>8) & 255);\n      }\n\n      perm[i] = perm[i + 256] = v;\n      gradP[i] = gradP[i + 256] = grad3[v % 12];\n    }\n  };\n\n  module.seed(0);\n\n  /*\n  for(var i=0; i<256; i++) {\n    perm[i] = perm[i + 256] = p[i];\n    gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\n  }*/\n\n  // Skewing and unskewing factors for 2, 3, and 4 dimensions\n  var F2 = 0.5*(Math.sqrt(3)-1);\n  var G2 = (3-Math.sqrt(3))/6;\n\n  var F3 = 1/3;\n  var G3 = 1/6;\n\n  // 2D simplex noise\n  module.simplex2 = function(xin, yin) {\n    var n0, n1, n2; // Noise contributions from the three corners\n    // Skew the input space to determine which simplex cell we're in\n    var s = (xin+yin)*F2; // Hairy factor for 2D\n    var i = Math.floor(xin+s);\n    var j = Math.floor(yin+s);\n    var t = (i+j)*G2;\n    var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\n    var y0 = yin-j+t;\n    // For the 2D case, the simplex shape is an equilateral triangle.\n    // Determine which simplex we are in.\n    var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n    if(x0>y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n      i1=1; j1=0;\n    } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n      i1=0; j1=1;\n    }\n    // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n    // c = (3-sqrt(3))/6\n    var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n    var y1 = y0 - j1 + G2;\n    var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n    var y2 = y0 - 1 + 2 * G2;\n    // Work out the hashed gradient indices of the three simplex corners\n    i &= 255;\n    j &= 255;\n    var gi0 = gradP[i+perm[j]];\n    var gi1 = gradP[i+i1+perm[j+j1]];\n    var gi2 = gradP[i+1+perm[j+1]];\n    // Calculate the contribution from the three corners\n    var t0 = 0.5 - x0*x0-y0*y0;\n    if(t0<0) {\n      n0 = 0;\n    } else {\n      t0 *= t0;\n      n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient\n    }\n    var t1 = 0.5 - x1*x1-y1*y1;\n    if(t1<0) {\n      n1 = 0;\n    } else {\n      t1 *= t1;\n      n1 = t1 * t1 * gi1.dot2(x1, y1);\n    }\n    var t2 = 0.5 - x2*x2-y2*y2;\n    if(t2<0) {\n      n2 = 0;\n    } else {\n      t2 *= t2;\n      n2 = t2 * t2 * gi2.dot2(x2, y2);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 70 * (n0 + n1 + n2);\n  };\n\n  // 3D simplex noise\n  module.simplex3 = function(xin, yin, zin) {\n    var n0, n1, n2, n3; // Noise contributions from the four corners\n\n    // Skew the input space to determine which simplex cell we're in\n    var s = (xin+yin+zin)*F3; // Hairy factor for 2D\n    var i = Math.floor(xin+s);\n    var j = Math.floor(yin+s);\n    var k = Math.floor(zin+s);\n\n    var t = (i+j+k)*G3;\n    var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\n    var y0 = yin-j+t;\n    var z0 = zin-k+t;\n\n    // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n    // Determine which simplex we are in.\n    var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n    var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n    if(x0 >= y0) {\n      if(y0 >= z0)      { i1=1; j1=0; k1=0; i2=1; j2=1; k2=0; }\n      else if(x0 >= z0) { i1=1; j1=0; k1=0; i2=1; j2=0; k2=1; }\n      else              { i1=0; j1=0; k1=1; i2=1; j2=0; k2=1; }\n    } else {\n      if(y0 < z0)      { i1=0; j1=0; k1=1; i2=0; j2=1; k2=1; }\n      else if(x0 < z0) { i1=0; j1=1; k1=0; i2=0; j2=1; k2=1; }\n      else             { i1=0; j1=1; k1=0; i2=1; j2=1; k2=0; }\n    }\n    // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n    // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n    // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n    // c = 1/6.\n    var x1 = x0 - i1 + G3; // Offsets for second corner\n    var y1 = y0 - j1 + G3;\n    var z1 = z0 - k1 + G3;\n\n    var x2 = x0 - i2 + 2 * G3; // Offsets for third corner\n    var y2 = y0 - j2 + 2 * G3;\n    var z2 = z0 - k2 + 2 * G3;\n\n    var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\n    var y3 = y0 - 1 + 3 * G3;\n    var z3 = z0 - 1 + 3 * G3;\n\n    // Work out the hashed gradient indices of the four simplex corners\n    i &= 255;\n    j &= 255;\n    k &= 255;\n    var gi0 = gradP[i+   perm[j+   perm[k   ]]];\n    var gi1 = gradP[i+i1+perm[j+j1+perm[k+k1]]];\n    var gi2 = gradP[i+i2+perm[j+j2+perm[k+k2]]];\n    var gi3 = gradP[i+ 1+perm[j+ 1+perm[k+ 1]]];\n\n    // Calculate the contribution from the four corners\n    var t0 = 0.6 - x0*x0 - y0*y0 - z0*z0;\n    if(t0<0) {\n      n0 = 0;\n    } else {\n      t0 *= t0;\n      n0 = t0 * t0 * gi0.dot3(x0, y0, z0);  // (x,y) of grad3 used for 2D gradient\n    }\n    var t1 = 0.6 - x1*x1 - y1*y1 - z1*z1;\n    if(t1<0) {\n      n1 = 0;\n    } else {\n      t1 *= t1;\n      n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\n    }\n    var t2 = 0.6 - x2*x2 - y2*y2 - z2*z2;\n    if(t2<0) {\n      n2 = 0;\n    } else {\n      t2 *= t2;\n      n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\n    }\n    var t3 = 0.6 - x3*x3 - y3*y3 - z3*z3;\n    if(t3<0) {\n      n3 = 0;\n    } else {\n      t3 *= t3;\n      n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 32 * (n0 + n1 + n2 + n3);\n\n  };\n\n  // ##### Perlin noise stuff\n\n  function fade(t) {\n    return t*t*t*(t*(t*6-15)+10);\n  }\n\n  function lerp(a, b, t) {\n    return (1-t)*a + t*b;\n  }\n\n  // 2D Perlin Noise\n  module.perlin2 = function(x, y) {\n    // Find unit grid cell containing point\n    var X = Math.floor(x), Y = Math.floor(y);\n    // Get relative xy coordinates of point within that cell\n    x = x - X; y = y - Y;\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255; Y = Y & 255;\n\n    // Calculate noise contributions from each of the four corners\n    var n00 = gradP[X+perm[Y]].dot2(x, y);\n    var n01 = gradP[X+perm[Y+1]].dot2(x, y-1);\n    var n10 = gradP[X+1+perm[Y]].dot2(x-1, y);\n    var n11 = gradP[X+1+perm[Y+1]].dot2(x-1, y-1);\n\n    // Compute the fade curve value for x\n    var u = fade(x);\n\n    // Interpolate the four results\n    return lerp(\n        lerp(n00, n10, u),\n        lerp(n01, n11, u),\n       fade(y));\n  };\n\n  // 3D Perlin Noise\n  module.perlin3 = function(x, y, z) {\n    // Find unit grid cell containing point\n    var X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);\n    // Get relative xyz coordinates of point within that cell\n    x = x - X; y = y - Y; z = z - Z;\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255; Y = Y & 255; Z = Z & 255;\n\n    // Calculate noise contributions from each of the eight corners\n    var n000 = gradP[X+  perm[Y+  perm[Z  ]]].dot3(x,   y,     z);\n    var n001 = gradP[X+  perm[Y+  perm[Z+1]]].dot3(x,   y,   z-1);\n    var n010 = gradP[X+  perm[Y+1+perm[Z  ]]].dot3(x,   y-1,   z);\n    var n011 = gradP[X+  perm[Y+1+perm[Z+1]]].dot3(x,   y-1, z-1);\n    var n100 = gradP[X+1+perm[Y+  perm[Z  ]]].dot3(x-1,   y,   z);\n    var n101 = gradP[X+1+perm[Y+  perm[Z+1]]].dot3(x-1,   y, z-1);\n    var n110 = gradP[X+1+perm[Y+1+perm[Z  ]]].dot3(x-1, y-1,   z);\n    var n111 = gradP[X+1+perm[Y+1+perm[Z+1]]].dot3(x-1, y-1, z-1);\n\n    // Compute the fade curve value for x, y, z\n    var u = fade(x);\n    var v = fade(y);\n    var w = fade(z);\n\n    // Interpolate\n    return lerp(\n        lerp(\n          lerp(n000, n100, u),\n          lerp(n001, n101, u), w),\n        lerp(\n          lerp(n010, n110, u),\n          lerp(n011, n111, u), w),\n       v);\n  };\n\n})(this);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('WebGl')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{attrs:{\"width\":_vm.canvasWidth,\"height\":_vm.canvasHeight,\"id\":\"glcanvas\"}}),_c('table',[_c('tr',[_c('td',[_vm._v(\"Step 1:\")]),_c('td',[_c('button',{on:{\"click\":_vm.pickFile}},[_vm._v(\"File\")]),_vm._v(\" or \"),_c('button',{on:{\"click\":_vm.enableMic}},[_vm._v(\"Mic\")])])]),_c('tr',[_c('td',[_vm._v(\"Step 2:\")]),_c('td',[_c('button',{on:{\"click\":_vm.enableVr}},[_vm._v(\"Enter VR\")])])])]),_c('input',{ref:\"file\",staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"file\",\"type\":\"file\",\"name\":\"file\",\"accept\":\"audio/*\"},on:{\"change\":_vm.enableMusic}})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nin vec4 aVertexPosition;\\nin vec4 aVertexNormal;\\nin vec2 aTextureCoordinates;\\n\\nuniform int uDrawMode;\\nuniform float uDrawVariant;\\nuniform sampler2D uAudioSampler;\\n\\nuniform mat4 uViewMatrix;\\nuniform mat4 uOrthoMatrix;\\nuniform mat4 uProjectionMatrix;\\nuniform mat4 uModelMatrix;\\nuniform vec3 uLightDirection;\\nuniform float uTime;\\n\\nout vec4 vColor;\\nout vec3 vNormal;\\nout vec3 vLightDirection;\\nout vec2 vTextureCoordinates;\\nout vec4 vPosition;\\n\\n//#COMMON\\n//#PERLIN\\n//#HSL2RGB\\n\\nvoid main(void) {\\n    vec2 tTextureCoordinates = aTextureCoordinates;\\n\\n    vPosition = uModelMatrix*aVertexPosition;\\n\\n    if(uDrawMode == DRAW_MODE_2D || uDrawMode == DRAW_MODE_2D_MIX) {\\n        gl_Position = uOrthoMatrix * vPosition;\\n        vTextureCoordinates = tTextureCoordinates;\\n        return;\\n    }\\n    else {\\n        mat4 viewProjectionMatrix = uProjectionMatrix * uViewMatrix;\\n        float saturation = 4.0;\\n\\n        if (uDrawMode == DRAW_MODE_CYLINDER) {\\n            float cx = aTextureCoordinates.x;\\n            float cy = cos(aTextureCoordinates.y*PI);\\n            float angle = abs(atan(vPosition.z, vPosition.x))/PI;\\n            vec4 audio = texture(uAudioSampler, vec2(angle, 0.0));\\n\\n            float time = uTime+audio.x*2.0;\\n\\n            // COLOR\\n            float colorVelocity = 0.5;// color changes quicker\\n            float colorFrequency = 0.2;// color is wider\\n            vec3 noiseColor = vec3(\\n                noise(vec4(cx*colorFrequency, cy, time*colorVelocity, uDrawVariant)),\\n                noise(vec4(uDrawVariant, cx*colorFrequency, cy, colorVelocity*time))*saturation,\\n                1.0\\n            );\\n            vColor.xyz = hsv2rgb(noiseColor);\\n            vColor.w = 1.0;\\n\\n            // TEXTURE\\n            float textureNoiseVelocity = 0.2;\\n            float textureNoiseFrequency = 0.5;\\n            vec2 noiseTexture = vec2(\\n                noise(vec4(cx, cy, uTime*textureNoiseVelocity, uDrawVariant)*textureNoiseFrequency),\\n                noise(vec4(uDrawVariant, cx, cy, uTime*textureNoiseVelocity)*textureNoiseFrequency)\\n            );\\n\\n            vec2 textureVelocity = vec2(-1.0, 0.5);\\n            float textureRotation = 0.5;\\n            float textureWaveSize = 0.4;\\n\\n            vec2 dTextureCoordinates = uTime*textureVelocity + noiseTexture*textureWaveSize;\\n            dTextureCoordinates.y=textureRotation*sin(dTextureCoordinates.y);\\n            tTextureCoordinates += dTextureCoordinates;\\n\\n            // POSITION\\n            float displacementAmplitude = 16.0;\\n            float displacementFrequency = 0.05;\\n            float displacementVelocity = 0.05;\\n            vec4 displacement = displacementAmplitude * vec4(\\n                noise(vec4(uDrawVariant, vPosition.y*displacementFrequency, 0.0, time*displacementVelocity)),\\n                0.0,\\n                noise(vec4(uDrawVariant, 0.0, vPosition.y*displacementFrequency, time*displacementVelocity)),\\n                0.0\\n            );\\n            vPosition += displacement;\\n        } else if (uDrawMode == DRAW_MODE_EDGES) {\\n            float cx = aTextureCoordinates.x;\\n            float cy = cos(aTextureCoordinates.y*PI);\\n            vec4 audio = texture(uAudioSampler, vec2(cx, 0.0));\\n\\n            float time = uTime+audio.x*4.0;\\n\\n\\n            // COLOR\\n            float colorVelocity = 0.2;// color changes quicker\\n            float colorFrequency = 0.1;// color is wider\\n            vec3 noiseColor = vec3(\\n                noise(1.0*vec4(cx*colorFrequency, cy, time*colorVelocity, uDrawVariant)),\\n                1.0,\\n                1.0\\n            );\\n\\n            vColor.xyz = hsv2rgb(noiseColor);\\n            vColor.w = 1.0;\\n        } else if (uDrawMode == DRAW_MODE_SKY) {\\n            float cx = 0.0;\\n            float cy = cos(aTextureCoordinates.y*PI);\\n            vec4 audio = texture(uAudioSampler, vec2(cy, 0.0));\\n\\n            float time = uTime+audio.x;\\n\\n            // COLOR\\n            float colorVelocity = 0.5;// color changes quicker\\n            float colorFrequency = 1.0;// color is wider\\n            vec3 noiseColor = vec3(\\n                noise(1.0*vec4(cx*colorFrequency, cy, time*colorVelocity, uDrawVariant)),\\n                noise(1.0*vec4(uDrawVariant, cx*colorFrequency, cy, colorVelocity*time))*saturation,\\n                1.0\\n            );\\n            vColor.xyz = hsv2rgb(noiseColor);\\n            vColor.w = 1.0;\\n        } else if (uDrawMode == DRAW_MODE_BILLBOARD) {\\n            float cx = aTextureCoordinates.x;\\n            float cy = aTextureCoordinates.y;\\n            float time = uTime;\\n\\n            // COLOR\\n            float colorVelocity = 0.2;// color changes quicker\\n            float colorFrequency = 0.1;// color is wider\\n            vec3 noiseColor = vec3(\\n            noise(vec4(cx*colorFrequency, cy, time*colorVelocity, uDrawVariant)),\\n            1.0,\\n            1.0\\n            );\\n            vColor.xyz = hsv2rgb(noiseColor);\\n            vColor.w = 1.0;\\n        } else if (uDrawMode == DRAW_MODE_MANDALA) {\\n            vec4 audio = texture(uAudioSampler, vec2(0.0, 0.0));\\n            float cx = aTextureCoordinates.x;\\n            float cy = aTextureCoordinates.y;\\n            float time = uTime+audio.x*4.0;\\n\\n            // COLOR\\n            float colorVelocity = 0.2;// color changes quicker\\n            float colorFrequency = 32.0;// color is wider\\n            vec3 noiseColor = vec3(\\n                noise(vec4(cx*colorFrequency, cy*colorFrequency, time*colorVelocity, uDrawVariant)),\\n                1.0,\\n                1.0\\n            );\\n            vColor.xyz = hsv2rgb(noiseColor);\\n            vColor.w = 1.0;\\n        } else if (uDrawMode == DRAW_MODE_TORUS) {\\n            float angle = abs(atan(vPosition.z, vPosition.x))/PI;\\n            vec4 audio = texture(uAudioSampler, vec2(angle, 0.0));\\n            float cx = 0.0;\\n            float cy = angle;\\n            float time = uTime+audio.x;\\n\\n            // COLOR\\n            float colorVelocity = 0.2;// color changes quicker\\n            float colorFrequency = 100.0;// color is wider\\n            vec3 noiseColor = vec3(\\n                noise(vec4(cx*colorFrequency, cy, time*colorVelocity, uDrawVariant)),\\n                1.0,\\n                1.0\\n            );\\n            vColor.xyz = hsv2rgb(noiseColor);\\n            vColor.w = 0.5;\\n\\n            // POSITION\\n            float displacementAmplitude = 8.0;\\n            float displacementFrequency = 0.1;\\n            float displacementVelocity = 2.0;\\n            vec4 displacement = displacementAmplitude * vec4(\\n                0.0,\\n                (audio.x+audio.z*0.5)-1.0,\\n                0.0,\\n                0.0\\n            );\\n            vPosition += displacement;\\n        }\\n\\n        mat3 vNormalMatrix = transpose(inverse(mat3(uModelMatrix)));\\n        vNormal = normalize(vNormalMatrix * aVertexNormal.xyz);\\n        gl_Position = viewProjectionMatrix * vPosition;\\n        vTextureCoordinates = tTextureCoordinates;\\n    }\\n}\";","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nuniform int uDrawMode;\\nuniform sampler2D uSampler[2];\\nuniform sampler2D uAudioSampler;\\n\\nuniform bool uEnableLight;\\nuniform float uTime;\\nuniform vec3 uLightDirection;\\nuniform vec3 uCameraPosition;\\nuniform vec2 uCanvasSize;\\n\\nin vec3 vNormal;\\nin vec2 vTextureCoordinates;\\nin vec4 vColor;\\nin vec4 vPosition;\\n\\nout vec4 fragColor;\\n\\n//#COMMON\\n//#PERLIN\\n//#HSL2RGB\\n\\nvoid main(void) {\\n    vec4 color = vec4(1.0, 1.0, 1.0, 1.0);\\n    vec2 textureCoordinates = vTextureCoordinates;\\n\\n\\n    if (uDrawMode == DRAW_MODE_2D || uDrawMode == DRAW_MODE_2D_MIX) {\\n        textureCoordinates.y = 1.0 - vTextureCoordinates.y;\\n    }\\n\\n    if (uDrawMode == 1){\\n        float n = noise(vec4(textureCoordinates, 0.0, uTime*0.1));\\n        vec2 p = 2.0*textureCoordinates - vec2(1.0, 1.0);\\n        float pd = clamp(length(p), 0.0, 1.0);\\n        float pr = 1.0 - pd*pd*pd;\\n\\n        float pc = clamp(pr*n+pr*0.25, 0.0, 1.0);\\n        color = vec4(1.0, pc*2.0, 0.0, pc);\\n    } else if (uDrawMode == DRAW_MODE_CYLINDER) {\\n        vec4 c = texture(uSampler[0], textureCoordinates);\\n        color = c*vColor;\\n    } else if (uDrawMode == DRAW_MODE_2D_MIX) {\\n        vec4 maskColor = texture(uSampler[1], textureCoordinates);\\n        if (maskColor.w > 0.0) {\\n            vec4 sum = vec4(0.0);\\n            vec2 delta = 1.0/uCanvasSize;\\n            int count = 0;\\n            int size = 3;\\n            for (int i=-size; i <= size; ++i) {\\n                for (int j=-size; j <= size; ++j) {\\n                    sum += texture(uSampler[0], textureCoordinates+delta*vec2(i, j));\\n                    ++count;\\n                }\\n            }\\n            color = (sum / float(count)) + maskColor * 0.5+0.1;\\n            color.w = 1.0;\\n        } else {\\n            color.w = 0.0;\\n        }\\n        fragColor = color;\\n        return;\\n    } else if (uDrawMode == DRAW_MODE_2D) {\\n        color = texture(uSampler[0], textureCoordinates);\\n        fragColor = color;\\n        return;\\n    } else if (uDrawMode == DRAW_MODE_TORUS) {\\n        color = vColor;\\n    } else {\\n        color = texture(uSampler[0], textureCoordinates);\\n    }\\n\\n\\n    vec3 normal = normalize(vNormal);\\n    if (uEnableLight) {\\n        float dotFactor = dot(normal, -uLightDirection);\\n        fragColor = color*vec4(dotFactor, dotFactor, dotFactor, 1.0);\\n    } else {\\n        fragColor = color;\\n    }\\n\\n    if (uDrawMode == DRAW_MODE_MASK) {\\n        vec3 vertexToCam = normalize(vPosition.xyz-uCameraPosition);\\n        float edgeDot = abs(dot(vertexToCam, normal));\\n        if (edgeDot < 0.3) {\\n            fragColor *= 0.0;\\n        }\\n    }\\n\\n    if (uDrawMode == DRAW_MODE_EDGES) {\\n\\n        vec3 vertexToCam = normalize(vPosition.xyz-uCameraPosition);\\n        float edgeDot = abs(dot(vertexToCam, normal));\\n        if (edgeDot < 0.3) {\\n            fragColor = vColor;\\n        } else {\\n            fragColor = vec4(0.0, 0.0, 0.0, 0.01);\\n        }\\n    }\\n    if (uDrawMode == DRAW_MODE_SKY) {\\n        float gradient = 150.0;\\n        fragColor.xyz *= vColor.xyz;\\n    }\\n\\n    if (uDrawMode == DRAW_MODE_BILLBOARD) {\\n        fragColor.xyz *= vColor.xyz;\\n    }\\n\\n    if (uDrawMode == DRAW_MODE_MANDALA) {\\n        fragColor.xyz *= vColor.xyz;\\n    }\\n}\";","export default \"//\\tClassic Perlin 3D Noise\\n//\\tby Stefan Gustavson\\n//\\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\\nvec4 fade(vec4 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\\n#define PI 3.1415926535897932384626433832795\\n\\n\\n\\nfloat cnoise(vec4 P){\\n  vec4 Pi0 = floor(P); // Integer part for indexing\\n  vec4 Pi1 = Pi0 + 1.0; // Integer part + 1\\n  Pi0 = mod(Pi0, 289.0);\\n  Pi1 = mod(Pi1, 289.0);\\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = vec4(Pi0.zzzz);\\n  vec4 iz1 = vec4(Pi1.zzzz);\\n  vec4 iw0 = vec4(Pi0.wwww);\\n  vec4 iw1 = vec4(Pi1.wwww);\\n\\n  vec4 ixy = permute(permute(ix) + iy);\\n  vec4 ixy0 = permute(ixy + iz0);\\n  vec4 ixy1 = permute(ixy + iz1);\\n  vec4 ixy00 = permute(ixy0 + iw0);\\n  vec4 ixy01 = permute(ixy0 + iw1);\\n  vec4 ixy10 = permute(ixy1 + iw0);\\n  vec4 ixy11 = permute(ixy1 + iw1);\\n\\n  vec4 gx00 = ixy00 / 7.0;\\n  vec4 gy00 = floor(gx00) / 7.0;\\n  vec4 gz00 = floor(gy00) / 6.0;\\n  gx00 = fract(gx00) - 0.5;\\n  gy00 = fract(gy00) - 0.5;\\n  gz00 = fract(gz00) - 0.5;\\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\\n  vec4 sw00 = step(gw00, vec4(0.0));\\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\\n\\n  vec4 gx01 = ixy01 / 7.0;\\n  vec4 gy01 = floor(gx01) / 7.0;\\n  vec4 gz01 = floor(gy01) / 6.0;\\n  gx01 = fract(gx01) - 0.5;\\n  gy01 = fract(gy01) - 0.5;\\n  gz01 = fract(gz01) - 0.5;\\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\\n  vec4 sw01 = step(gw01, vec4(0.0));\\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\\n\\n  vec4 gx10 = ixy10 / 7.0;\\n  vec4 gy10 = floor(gx10) / 7.0;\\n  vec4 gz10 = floor(gy10) / 6.0;\\n  gx10 = fract(gx10) - 0.5;\\n  gy10 = fract(gy10) - 0.5;\\n  gz10 = fract(gz10) - 0.5;\\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\\n  vec4 sw10 = step(gw10, vec4(0.0));\\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\\n\\n  vec4 gx11 = ixy11 / 7.0;\\n  vec4 gy11 = floor(gx11) / 7.0;\\n  vec4 gz11 = floor(gy11) / 6.0;\\n  gx11 = fract(gx11) - 0.5;\\n  gy11 = fract(gy11) - 0.5;\\n  gz11 = fract(gz11) - 0.5;\\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\\n  vec4 sw11 = step(gw11, vec4(0.0));\\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\\n\\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\\n\\n  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\\n  g0000 *= norm00.x;\\n  g0100 *= norm00.y;\\n  g1000 *= norm00.z;\\n  g1100 *= norm00.w;\\n\\n  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\\n  g0001 *= norm01.x;\\n  g0101 *= norm01.y;\\n  g1001 *= norm01.z;\\n  g1101 *= norm01.w;\\n\\n  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\\n  g0010 *= norm10.x;\\n  g0110 *= norm10.y;\\n  g1010 *= norm10.z;\\n  g1110 *= norm10.w;\\n\\n  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\\n  g0011 *= norm11.x;\\n  g0111 *= norm11.y;\\n  g1011 *= norm11.z;\\n  g1111 *= norm11.w;\\n\\n  float n0000 = dot(g0000, Pf0);\\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\\n  float n1111 = dot(g1111, Pf1);\\n\\n  vec4 fade_xyzw = fade(Pf0);\\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\\n  return 2.2 * n_xyzw;\\n}\\n\\nfloat noise(vec4 p){\\n    return  cnoise(p)\\n            //+0.5*cnoise(p)\\n            //+0.25*cnoise(p*2.0)\\n           // +0.125*cnoise(p*4.0)\\n           // +0.0625*cnoise(p*8.0)\\n            //+0.03125*cnoise(p*16.0)\\n            //+0.015625*cnoise(p*32.0)\\n            //+0.0078125*cnoise(p*64.0)\\n            ;\\n}\";","export default \"float hue2rgb(float f1, float f2, float hue) {\\n    if (hue < 0.0)\\n    hue += 1.0;\\n    else if (hue > 1.0)\\n    hue -= 1.0;\\n    float res;\\n    if ((6.0 * hue) < 1.0)\\n    res = f1 + (f2 - f1) * 6.0 * hue;\\n    else if ((2.0 * hue) < 1.0)\\n    res = f2;\\n    else if ((3.0 * hue) < 2.0)\\n    res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\\n    else\\n    res = f1;\\n    return res;\\n}\\n\\nvec3 hsl2rgb(vec3 hsl) {\\n    vec3 rgb;\\n\\n    if (hsl.y == 0.0) {\\n        rgb = vec3(hsl.z); // Luminance\\n    } else {\\n        float f2;\\n\\n        if (hsl.z < 0.5)\\n        f2 = hsl.z * (1.0 + hsl.y);\\n        else\\n        f2 = hsl.z + hsl.y - hsl.y * hsl.z;\\n\\n        float f1 = 2.0 * hsl.z - f2;\\n\\n        rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));\\n        rgb.g = hue2rgb(f1, f2, hsl.x);\\n        rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));\\n    }\\n    return rgb;\\n}\\n\\nvec3 hsl2rgb(float h, float s, float l) {\\n    return hsl2rgb(vec3(h, s, l));\\n}\\n\\nvec3 hsv2rgb(vec3 c)\\n{\\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\nvec3 hsv2rgb(float h, float s, float l) {\\n    return hsv2rgb(vec3(h, s, l));\\n}\";","export default \"#define DRAW_MODE_2D_MIX -3\\n#define DRAW_MODE_2D -2\\n#define DRAW_MODE_MASK -1\\n#define DRAW_MODE_DEFAULT 0\\n#define DRAW_MODE_CYLINDER 2\\n#define DRAW_MODE_EDGES 3\\n#define DRAW_MODE_SKY 4\\n#define DRAW_MODE_BILLBOARD 5\\n#define DRAW_MODE_TORUS 6\\n#define DRAW_MODE_MANDALA 7\";","// eslint-disable-next-line no-unused-vars\nimport WebXRPolyfill from \"webxr-polyfill\";\nimport * as glm from \"gl-matrix\";\n\nexport default {\n\n    initShaderProgram: function(gl, vsSource, fsSource) {\n        const vertexShader = this.loadShader(gl, gl.VERTEX_SHADER, vsSource);\n        const fragmentShader = this.loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n\n        const shaderProgram = gl.createProgram();\n        gl.attachShader(shaderProgram, vertexShader);\n        gl.attachShader(shaderProgram, fragmentShader);\n        gl.linkProgram(shaderProgram);\n\n        if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n            alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\n            return null;\n        }\n\n        return shaderProgram;\n    },\n    loadShader: function(gl, type, source) {\n        const shader = gl.createShader(type);\n\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\n            gl.deleteShader(shader);\n            return null;\n        }\n\n        return shader;\n    },\n    createState: function(cleanDrawback, drawCallback, updateCallback) {\n        return  {\n            time: 0,\n            delta: 0,\n            vrInitialized: false,\n            vrSession: null,\n            vrSpace: null,\n            animation: null,\n            cleanDrawback: cleanDrawback,\n            drawCallback: drawCallback,\n            updateCallback: updateCallback,\n            vrSupported: false,\n            map: {},\n            tick: function(now){\n                now *= 0.001;  // convert to seconds\n                this.delta = now - this.time;\n                this.time = now;\n            },\n            log: '',\n        };\n    },\n    loopVr: function(gl, state) {\n        function render(now, frame) {\n            let session = frame.session;\n            if(state.vrInitialized) {\n                state.animation = session.requestAnimationFrame(render);\n            }\n\n            let pose = null;\n            if (state.vrSpace && frame) {\n                pose = frame.getViewerPose(state.vrSpace);\n            }\n\n            state.tick(now);\n            state.updateCallback(gl, state);\n\n            if (pose) {\n                let layer = session ? session.renderState.baseLayer : null;\n                state.cleanDrawback(gl, layer.framebuffer);\n\n                for (let i in pose.views) {\n                    let view = pose.views[i];\n                    let viewport = layer.getViewport(view);\n                    state.drawCallback(gl, viewport, state, view.transform.inverse.matrix, view.projectionMatrix, layer.framebuffer, i);\n                }\n            }\n        }\n\n        // eslint-disable-next-line no-unused-vars\n        function onSessionEnded(event) {\n\n        }\n\n        function onSessionStarted(session) {\n            session.addEventListener('end', onSessionEnded);\n            session.updateRenderState({\n                // eslint-disable-next-line no-undef\n                baseLayer: new XRWebGLLayer(session, gl)\n            });\n            session.requestReferenceSpace('local').then(space => {\n                state.vrSession = session;\n                console.log(space);\n                // state.vrSpace =  space.getOffsetReferenceSpace(new XRRigidTransform(glm.vec3.fromValues(0,-1.60,0), glm.quat.create()) );\n                state.vrSpace =  space;\n                state.animation = session.requestAnimationFrame(render);\n            });\n            console.log(session);\n            return session;\n        }\n\n        if(!state.vrInitialized) {\n            state.vrInitialized = true;\n            new WebXRPolyfill();\n            if (navigator.xr) {\n                navigator.xr.isSessionSupported('immersive-vr').then((supported) => {\n                    state.vrSupported = supported;\n                    navigator.xr.requestSession('immersive-vr').then(onSessionStarted);\n                });\n            }\n        }\n    },\n    loop: function(gl, state) {\n\n        function render(now) {\n            if(!state.vrInitialized) {\n                state.animation = requestAnimationFrame(render);\n            }\n\n            state.tick(now);\n            state.updateCallback(gl, state);\n            state.cleanDrawback(gl, null)\n            let viewport = {\n                width: gl.canvas.width,\n                height: gl.canvas.height,\n                x: 0,\n                y: 0,\n            }\n            //console.log(viewport);\n            if(viewport.width && viewport.height) {\n                state.drawCallback(gl, viewport, state, null, null, null, 0);\n            }\n\n        }\n        state.animation = requestAnimationFrame(render);\n    },\n    getProgramInfo: function(gl, shaderProgram){\n        return {\n            program: shaderProgram,\n                time: 0,\n            attribLocations: {\n                vertexPosition: gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\n                vertexNormal: gl.getAttribLocation(shaderProgram, 'aVertexNormal'),\n                textureCoordinates: gl.getAttribLocation(shaderProgram, 'aTextureCoordinates'),\n            },\n            uniformLocations: {\n                projectionMatrix: gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\n                viewMatrix: gl.getUniformLocation(shaderProgram, 'uViewMatrix'),\n                modelMatrix: gl.getUniformLocation(shaderProgram, 'uModelMatrix'),\n                orthoMatrix: gl.getUniformLocation(shaderProgram, 'uOrthoMatrix'),\n                sampler: [\n                    gl.getUniformLocation(shaderProgram, 'uSampler[0]'),\n                    gl.getUniformLocation(shaderProgram, 'uSampler[1]'),\n                ],\n                enableLight: gl.getUniformLocation(shaderProgram, 'uEnableLight'),\n                drawMode: gl.getUniformLocation(shaderProgram, 'uDrawMode'),\n                drawVariant: gl.getUniformLocation(shaderProgram, 'uDrawVariant'),\n                time: gl.getUniformLocation(shaderProgram, 'uTime'),\n                lightDirection: gl.getUniformLocation(shaderProgram, 'uLightDirection'),\n                cameraPosition: gl.getUniformLocation(shaderProgram, 'uCameraPosition'),\n                canvasSize: gl.getUniformLocation(shaderProgram, 'uCanvasSize'),\n                audioSampler: gl.getUniformLocation(shaderProgram, 'uAudioSampler'),\n            },\n        };\n    },\n    createArrayBuffers: function(gl, vertices, normals, texture_coordinates, indices, image){\n        let indices_count = indices.length;\n\n        let vertex_buffer = gl.createBuffer();\n        let normal_buffer = gl.createBuffer();\n        let index_buffer = gl.createBuffer();\n        let texture_coordinates_buffer = gl.createBuffer();\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertex_buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, normal_buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(normals), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, texture_coordinates_buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(texture_coordinates), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, index_buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\n        return  {\n            ic: indices_count,\n            vb: vertex_buffer,\n            nb: normal_buffer,\n            tb: texture_coordinates_buffer,\n            ib: index_buffer,\n            im: image\n        };\n    },\n    createBillboard: function(gl) {\n        let vertices = [1, -1, 0, 1, 1, 0, -1, 1, 0, -1, -1, 0];\n        let normals = [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1];\n        let texture_coordinates = [1, 1, 1, 0, 0, 0, 0, 1];\n        let indices = [0, 1, 2, 0, 2, 3];\n        return this.createArrayBuffers(gl, vertices, normals, texture_coordinates, indices, null);\n    },\n    getCylinderMesh: function(gl, image) {\n        let vertices = [];\n        let normals = [];\n        let texture_coordinates = [];\n        let indices = [];\n\n        const height = 128;\n        const definitionA = 16;\n\n        // eslint-disable-next-line no-unused-vars\n        const definitionH = 0.5;\n\n        for(let h=0; h <= height; ++h){\n            for(let a=0; a <= definitionA; ++a){\n                let x = Math.sin((2*Math.PI*a/definitionA) );\n                let y = h*definitionH;\n                let z = Math.cos((2*Math.PI*a/definitionA) );\n                vertices.push(x);\n                vertices.push(y);\n                vertices.push(z);\n                normals.push(x);\n                normals.push(0);\n                normals.push(z);\n                texture_coordinates.push(y);\n                texture_coordinates.push(2.0*a/definitionA);\n            }\n        }\n        for(let h=0; h < height; ++h){\n            for(let a=0; a < definitionA; ++a){\n                indices.push((h+0)*(definitionA+1)+(a+0));\n                indices.push((h+0)*(definitionA+1)+(a+1));\n                indices.push((h+1)*(definitionA+1)+(a+1));\n\n                indices.push((h+0)*(definitionA+1)+(a+0));\n                indices.push((h+1)*(definitionA+1)+(a+1));\n                indices.push((h+1)*(definitionA+1)+(a+0));\n            }\n        }\n        return this.createArrayBuffers(gl, vertices, normals, texture_coordinates, indices, image);\n    },\n    getMesh: function(gl, mesh) {\n        let geometry = mesh.geometry;\n        if(!geometry || !geometry.attributes) {\n            return null;\n        }\n\n        let vertices = geometry.attributes.position.array;\n        let normals =  geometry.attributes.normal.array;\n        let texture_coordinates =  geometry.attributes.uv.array;\n        let indices = geometry.index.array;\n        let image = mesh.material.map.image;\n\n        return this.createArrayBuffers(gl, vertices, normals, texture_coordinates, indices, this.loadImage(gl, image) );\n    },\n    getModel(gl, gltf){\n        let group = [];\n        for (let c of gltf.scene.children) {\n            let m = this.getMesh(gl, c);\n            if (m != null) {\n                group.push(m);\n            }\n        }\n        return group;\n    },\n    enableAttribs: function(gl, programInfo){\n        gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition);\n        gl.enableVertexAttribArray(programInfo.attribLocations.vertexNormal);\n        gl.enableVertexAttribArray(programInfo.attribLocations.textureCoordinates);\n    },\n    disableAttribs: function(gl, programInfo){\n        gl.disableVertexAttribArray(programInfo.attribLocations.vertexPosition);\n        gl.disableVertexAttribArray(programInfo.attribLocations.vertexNormal);\n        gl.disableVertexAttribArray(programInfo.attribLocations.textureCoordinates);\n    },\n    drawMesh: function(gl, programInfo, mesh, mode,image0, image1) {\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, mesh.vb);\n        gl.vertexAttribPointer(programInfo.attribLocations.vertexPosition, 3, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, mesh.nb);\n        gl.vertexAttribPointer(programInfo.attribLocations.vertexNormal, 3, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, mesh.tb);\n        gl.vertexAttribPointer(programInfo.attribLocations.textureCoordinates, 2, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, mesh.ib);\n\n        if(!image0) {\n            image0 = mesh.im;\n        }\n        if(!image0) {\n            image0 = 0;\n        }\n        if(!image1) {\n            image1 = image0;\n        }\n\n        if(image0) {\n            gl.uniform1i(programInfo.uniformLocations.sampler[0], 0);\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, image0);\n        }\n        if(image1) {\n            gl.uniform1i(programInfo.uniformLocations.sampler[1], 1);\n            gl.activeTexture(gl.TEXTURE1);\n            gl.bindTexture(gl.TEXTURE_2D, image1);\n        }\n\n        gl.drawElements(mode, mesh.ic, gl.UNSIGNED_SHORT, 0);\n    },\n    enableVr: function(state) {\n        state.vrInit = true;\n    },\n    isPowerOf2: function(value) {\n        return (value & (value - 1)) === 0;\n    },\n    generateMipmap: function(gl, image) {\n        if (this.isPowerOf2(image.width) && this.isPowerOf2(image.height)) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n        } else {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        }\n    },\n    bindAudioTexture: function(gl, programInfo, texture){\n        gl.uniform1i(programInfo.uniformLocations.audioSampler, 2);\n        gl.activeTexture(gl.TEXTURE2);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n    },\n    loadAudio(gl, texture, width, data) {\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        const level = 0;\n        const internalFormat = gl.RGB;\n        const height = 1;\n        const border = 0;\n        const srcFormat = gl.RGB;\n        const srcType = gl.UNSIGNED_BYTE;\n        gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, data);\n\n        //gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        //gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n    },\n    loadImage: function(gl, image){\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        const level = 0;\n        const internalFormat = gl.RGBA;\n        const width = 1;\n        const height = 1;\n        const border = 0;\n        const srcFormat = gl.RGBA;\n        const srcType = gl.UNSIGNED_BYTE;\n        const pixel = new Uint8Array([0, 0, 0, 255]);  // opaque blue\n        gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n        this.generateMipmap(gl, image);\n        return texture;\n    },\n    loadTexture: function(gl, url) {\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        const level = 0;\n        const internalFormat = gl.RGBA;\n        const width = 1;\n        const height = 1;\n        const border = 0;\n        const srcFormat = gl.RGBA;\n        const srcType = gl.UNSIGNED_BYTE;\n        const pixel = new Uint8Array([0, 0, 0, 255]);  // opaque blue\n        gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n        const image = new Image();\n        let that = this;\n\n        image.onload = function() {\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n            that.generateMipmap(gl, image);\n        };\n        image.src = url;\n\n        return texture;\n    },\n\n    getBillboardMatrix: function(position, cameraPos, cameraUp) {\n        let to = glm.vec3.subtract(glm.vec3.create(), cameraPos, position);\n        let look = glm.vec3.normalize(to, to);\n        let right = glm.vec3.cross(glm.vec3.create(), cameraUp, look);\n        let up2 = glm.vec3.cross(glm.vec3.create(), look, right);\n\n        return glm.mat4.fromValues(\n            right[0],right[1],right[2],0,\n            up2[0],up2[1],up2[2],0,\n            look[0],look[1],look[2],0,\n            position[0],position[1],position[2],1\n        );\n    },\n    createFramebuffer: function (gl, width, height) {\n        // texture\n        let maskTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, maskTexture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n        // render\n        let maskRenderBuffer = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, maskRenderBuffer);\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n\n        // frame\n        let maskFramebuffer = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, maskFramebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, maskTexture, 0);\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, maskRenderBuffer);\n\n        let e = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if(gl.FRAMEBUFFER_COMPLETE !== e) {\n            console.error(\"ERROR\", e.toString());\n        }\n        // Unbind the buffer object\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        return {\n            texture: maskTexture,\n            render: maskRenderBuffer,\n            frame: maskFramebuffer,\n            width: width,\n            height: height\n        };\n    },\n    deleteFramebuffer: function (gl, obj) {\n        if (obj.frame) gl.deleteFramebuffer(obj.frame);\n        if (obj.texture) gl.deleteTexture(obj.texture);\n        if (obj.render) gl.deleteRenderbuffer(obj.render);\n    },\n    getFramebufferTexture: function(gl) {\n        return gl.getFramebufferAttachmentParameter(gl.READ_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME);\n    },\n}","export default {\n\n    initializeArray: function (array) {\n        for (let i = 0; i < array.length; ++i) {\n            array[i] = 0;\n        }\n    },\n\n    clamp: function (val, min, max) {\n        return val < min ? min : val > max ? max : val;\n    },\n\n    myNoise3d: function (noise, x, y, z, l) {\n        var v = noise.simplex3(x / l, y / l, z / l);\n        return 0.5 * (v + 1);\n    },\n\n    myNoise3dx: function (noise, x, y, z, l) {\n        var il = l;\n        var pe = 0.5;\n        var re = 0;\n        for (var i = 0; i < 7; ++i) {\n            re += pe * this.myNoise3d(noise, x, y, z, il);\n            il *= 0.5;\n            pe *= 0.5;\n        }\n        return re;\n    },\n\n\n    updateAudioArray: function (analyser, len, dataArray, freqArray, noise, time) {\n        const array = new Uint8Array(len * 3);\n\n        if (analyser) {\n            analyser.getByteTimeDomainData(dataArray);\n            analyser.getByteFrequencyData(freqArray);\n        }\n        let ratio = 1.0 /len;\n        for (let i = 0; i < len; ++i) {\n            array[i * 3 + 0] = dataArray[i];\n            array[i * 3 + 1] = freqArray[i];\n            array[i * 3 + 2] = this.myNoise3dx(noise, time, i*ratio , 0.0, 0.1) * 255;\n        }\n        //console.log(array);\n        return array;\n    },\n\n}","<template>\n    <div>\n        <canvas v-bind:width=\"canvasWidth\" v-bind:height=\"canvasHeight\" id=\"glcanvas\"></canvas>\n\n        <table>\n            <tr>\n                <td>Step 1:</td>\n                <td>\n                    <button v-on:click=\"pickFile\" >File</button>\n                    or\n                    <button v-on:click=\"enableMic\">Mic</button>\n                </td>\n            </tr>\n            <tr>\n                <td>Step 2:</td>\n                <td>\n                    <button v-on:click=\"enableVr\" >Enter VR</button>\n                </td>\n            </tr>\n        </table>\n        <input id=\"file\" ref=\"file\" style=\"display: none\" v-on:change=\"enableMusic\" type=\"file\" name=\"file\" accept=\"audio/*\">\n    </div>\n</template>\n\n<script>\n    /* eslint-disable no-unused-vars */\n    const DRAW_MODE_2D_MIX = -3\n    const DRAW_MODE_2D = -2\n    const DRAW_MODE_MASK = -1\n    const DRAW_MODE_DEFAULT = 0\n    const DRAW_MODE_CYLINDER = 2\n    const DRAW_MODE_EDGES = 3\n    const DRAW_MODE_SKY = 4\n    const DRAW_MODE_BILLBOARD = 5\n    const DRAW_MODE_TORUS = 6\n    const DRAW_MODE_MANDALA = 7\n    /* eslint-enable no-unused-vars */\n\n\n    import vertexShader from 'raw-loader!./vert.glsl';\n    import fragmentShader from 'raw-loader!./frag.glsl';\n    import perlinShader from 'raw-loader!./perlin.glsl';\n    import hsl2rgbShader from 'raw-loader!./hsl2rgb.glsl';\n    import commonShader from 'raw-loader!./common.glsl';\n\n    import webGl from '../../utils/webGl'\n    import webAudio from '../../utils/webAudio';\n    import perlin from '../../utils/perlin';\n\n    import * as glm from 'gl-matrix'\n    import GLTFLoader from 'three-gltf-loader';\n    export default {\n        name: \"WebGl\",\n\n        data() {\n            return {\n                canvasWidth: 512,\n                canvasHeight: 512,\n                state: null,\n                gl: null,\n                source: null,\n                isPlaying: false,\n                audioContext: null,\n                analyser: null,\n                freqArray: null,\n                dataArray: null,\n                audioArray: null,\n                timeDisplacement: 0,\n            }\n        },\n        methods: {\n            enableVr() {\n                webGl.loopVr(this.gl, this.state);\n            },\n            enableMic() {\n                function handleSound(stream) {\n                    this.audioContext = new AudioContext();\n                    this.analyser = this.audioContext.createAnalyser();\n                    this.freqArray = new Uint8Array(this.analyser.frequencyBinCount);\n                    this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n                    console.log(this);\n                    webAudio.initializeArray(this.freqArray);\n                    webAudio.initializeArray(this.dataArray);\n                    this.source = this.audioContext.createMediaStreamSource(stream);\n                    this.source.connect(this.analyser);\n                    this.isPlaying = true;\n                }\n                if(!this.audioContext) {\n                    navigator.getUserMedia = (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);\n                    navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(handleSound.bind(this));\n                }\n            },\n            pickFile(){\n                this.$refs.file.click();\n            },\n            enableMusic(event){\n                this.audioContext = new AudioContext();\n                this.analyser = this.audioContext.createAnalyser();\n                this.freqArray = new Uint8Array(this.analyser.frequencyBinCount);\n                this.dataArray = new Uint8Array(this.analyser.frequencyBinCount);\n                console.log(this);\n                webAudio.initializeArray(this.freqArray);\n                webAudio.initializeArray(this.dataArray);\n\n                let file = event.target.files[0];\n                if (file) {\n                    var reader = new FileReader();\n                    reader.readAsArrayBuffer(file);\n                    reader.onload = function(e) {\n                        let data = e.target.result;\n                        this.audioContext.decodeAudioData(data, function(buffer) {\n                            console.log(this);\n                            this.source = this.audioContext.createBufferSource();\n                            this.source.buffer = buffer;\n                            this.source.loop = true;\n                            this.source.start(0);\n                            this.source.connect(this.analyser);\n                            this.analyser.connect(this.audioContext.destination);\n                        }.bind(this));\n                    }.bind(this);\n                }\n\n            }\n        },\n        mounted() {\n            const canvas = document.querySelector('#glcanvas');\n            const gl = canvas.getContext('webgl2', {xrCompatible: true});\n            this.gl = gl;\n            canvas.addEventListener(\"contextmenu\", (event) => {\n                event.preventDefault();\n            });\n\n            let fShader = fragmentShader\n                .replace(\"//#PERLIN\", perlinShader)\n                .replace(\"//#COMMON\", commonShader)\n                .replace(\"//#HSL2RGB\", hsl2rgbShader);\n            let vShader = vertexShader\n                .replace(\"//#PERLIN\", perlinShader)\n                .replace(\"//#COMMON\", commonShader)\n                .replace(\"//#HSL2RGB\", hsl2rgbShader);\n\n\n            const shaderProgram = webGl.initShaderProgram(gl, vShader, fShader);\n            gl.useProgram(shaderProgram);\n            const programInfo = webGl.getProgramInfo(gl, shaderProgram);\n\n            let lightDirection = glm.vec3.fromValues(-1.0, -1.0, -1.0);\n            glm.vec3.normalize(lightDirection, lightDirection);\n\n            let orthoMatrix = glm.mat4.ortho(glm.mat4.create(), -1, 1, -1, 1, -1.0, 1.0);\n            gl.uniformMatrix4fv(programInfo.uniformLocations.orthoMatrix, false, orthoMatrix);\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n\n            let mandalaModel = null;\n            let statueModel = null;\n            let spaceModel = null;\n            let torusModel = null;\n\n            let patternTexture = webGl.loadTexture(gl, \"models/pattern.png\");\n            let cylinderMesh = webGl.getCylinderMesh(gl, patternTexture);\n            let flareTexture = webGl.loadTexture(gl, \"models/flare.png\");\n            let billboardMesh = webGl.createBillboard(gl);\n            let audioTexture = gl.createTexture();\n\n\n\n            perlin.noise.seed(Math.random());\n\n            const loader = new GLTFLoader();\n            loader.load(\"models/ganesha.gltf\", gltf => {\n                statueModel = webGl.getModel(gl, gltf);\n            });\n            loader.load(\"models/space.gltf\", gltf => {\n                spaceModel = webGl.getModel(gl, gltf);\n            });\n            loader.load(\"models/mandala.gltf\", gltf => {\n                mandalaModel = webGl.getModel(gl, gltf);\n            });\n            loader.load(\"models/torus.gltf\", gltf => {\n                torusModel = webGl.getModel(gl, gltf);\n            });\n\n            // eslint-disable-next-line no-unused-vars\n            function update(gl, state) {\n                if(this.audioContext) {\n                    const len = this.dataArray.length;\n                    this.audioArray = webAudio.updateAudioArray(this.analyser, len, this.dataArray, this.freqArray, perlin.noise, state.time*0.05);\n                    webGl.loadAudio(gl,audioTexture, len, this.audioArray);\n                    webGl.bindAudioTexture(gl, programInfo, audioTexture);\n                    this.timeDisplacement = 0.0;\n                }\n            }\n\n            // eslint-disable-next-line no-unused-vars\n            function clean(gl, framebuffer) {\n                gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n                gl.clearColor(0.0, 0.0, 0.0, 0.0);\n                gl.enable(gl.DEPTH_TEST);\n                gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n            }\n\n            // eslint-disable-next-line no-unused-vars\n            function draw(gl, viewport, state, viewMatrix, projectionMatrix, mainFramebuffer, index) {\n                webGl.enableAttribs(gl, programInfo);\n                // viewport for extra framebuffers (not for the main one)\n                gl.viewport(0, 0, viewport.width, viewport.height);\n\n                let map = state.map[index];\n                if (!map) {\n                    map = {};\n                }\n                let drawFrameBuffer = map.drawFrameBuffer;\n                let maskFrameBuffer = map.maskFrameBuffer;\n                let mixFrameBuffer = map.mixFrameBuffer;\n\n                if (drawFrameBuffer == null || drawFrameBuffer.width !== viewport.width || drawFrameBuffer.height !== viewport.height) {\n                    if (drawFrameBuffer != null) {\n                        webGl.deleteFramebuffer(gl, drawFrameBuffer);\n                        webGl.deleteFramebuffer(gl, maskFrameBuffer);\n                        webGl.deleteFramebuffer(gl, mixFrameBuffer);\n                    }\n                    drawFrameBuffer = webGl.createFramebuffer(gl, viewport.width, viewport.height);\n                    maskFrameBuffer = webGl.createFramebuffer(gl, viewport.width, viewport.height);\n                    mixFrameBuffer = webGl.createFramebuffer(gl, viewport.width, viewport.height);\n                }\n                clean(gl, drawFrameBuffer.frame);\n                clean(gl, maskFrameBuffer.frame);\n                clean(gl, mixFrameBuffer.frame);\n\n                state.map[index] = {\n                    drawFrameBuffer: drawFrameBuffer,\n                    maskFrameBuffer: maskFrameBuffer,\n                    mixFrameBuffer: mixFrameBuffer\n                };\n\n                gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n\n                gl.uniform1f(programInfo.uniformLocations.time, state.time+this.timeDisplacement);\n                gl.uniform3fv(programInfo.uniformLocations.lightDirection, lightDirection);\n                gl.uniform2f(programInfo.uniformLocations.canvasSize, viewport.width, viewport.height);\n\n                let variant = 0;\n\n                if (viewMatrix == null) {\n                    viewMatrix = glm.mat4.create();\n                    let center = glm.vec3.fromValues(0, -2, -5);\n                    let up = glm.vec3.fromValues(0, 1, 0);\n                    let eye = glm.vec3.fromValues(-5 * Math.sin(state.time), 3, -5 * Math.cos(state.time) - 5);\n                    glm.mat4.lookAt(viewMatrix, eye, center, up);\n                }\n                if (projectionMatrix == null) {\n                    projectionMatrix = glm.mat4.create();\n                    glm.mat4.perspective(projectionMatrix, 90 * Math.PI / 180, gl.canvas.clientWidth / gl.canvas.clientHeight, 0.1, 1000.0);\n                }\n                gl.uniformMatrix4fv(programInfo.uniformLocations.viewMatrix, false, viewMatrix);\n                gl.uniformMatrix4fv(programInfo.uniformLocations.projectionMatrix, false, projectionMatrix);\n\n                let invertedViewMatrix = glm.mat4.invert(glm.mat4.create(), viewMatrix);\n                let cameraPosition = glm.vec3.fromValues(invertedViewMatrix[12], invertedViewMatrix[13], invertedViewMatrix[14]);\n                gl.uniform3fv(programInfo.uniformLocations.cameraPosition, cameraPosition);\n\n                let modelMatrix = glm.mat4.create();\n                let center = glm.vec3.fromValues(0,0,-6);\n\n                // **********\n                // Draw space\n                // **********\n                if(spaceModel) {\n                    glm.mat4.identity(modelMatrix);\n                    glm.mat4.scale(modelMatrix, modelMatrix, glm.vec3.fromValues(400, 400, 400));\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_SKY);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    for (let mesh of spaceModel) {\n                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES);\n                    }\n                }\n\n                // **********\n                // Draw torus\n                // **********\n                if(torusModel && this.audioContext) {\n                    let position = glm.vec3.fromValues(0, 0, 0);\n                    glm.vec3.add(position, position, center);\n                    glm.mat4.identity(modelMatrix);\n                    glm.mat4.translate(modelMatrix, modelMatrix, position);\n                    glm.mat4.scale(modelMatrix, modelMatrix, glm.vec3.fromValues(32, 8.0, 32));\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_TORUS);\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.enable(gl.CULL_FACE);\n\n                    for (let mesh of torusModel) {\n                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES);\n                    }\n                }\n\n                // *************\n                // Draw cylinder\n                // *************\n                {\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.enable(gl.CULL_FACE);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_CYLINDER);\n                    let cylinderDistance = 20;\n\n                    variant = 0;\n                    for (let i = Math.PI / 3.0; i < 2 * Math.PI - 0.001; i += 2.0 * Math.PI / 3.0) {\n                        let position = glm.vec3.fromValues(-cylinderDistance * Math.sin(i), -128, -cylinderDistance * Math.cos(i));\n                        glm.mat4.identity(modelMatrix);\n                        glm.vec3.add(position, position, center);\n                        glm.mat4.translate(modelMatrix, modelMatrix, position);\n                        glm.mat4.scale(modelMatrix, modelMatrix, glm.vec3.fromValues(4, 4, 4));\n                        gl.uniform1f(programInfo.uniformLocations.drawVariant, ++variant * 4.0);\n                        gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                        webGl.drawMesh(gl, programInfo, cylinderMesh, gl.TRIANGLES);\n                    }\n                }\n\n                // **************\n                // Draw billboard\n                // **************\n                {\n                    //let up = glm.vec3.fromValues(viewMatrix[4], viewMatrix[5] ,viewMatrix[6]);\n                    let up = glm.vec3.fromValues(0, 1, 0);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_BILLBOARD);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    variant = 0;\n                    for (let i = 0; i < 2.0 * Math.PI; i += Math.PI / 8.0) {\n                        let r = 4.0;\n                        let position = glm.vec3.fromValues(r * Math.cos(i), 8.0+Math.sin(state.time*4.0 + i*2.0), r * Math.sin(i));\n                        glm.vec3.add(position, position, center);\n\n                        modelMatrix = webGl.getBillboardMatrix(position, cameraPosition, up);\n                        glm.mat4.scale(modelMatrix, modelMatrix, glm.vec3.fromValues(2, 2, 2));\n\n                        gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                        gl.uniform1f(programInfo.uniformLocations.drawVariant, ++variant * 4.0);\n                        webGl.drawMesh(gl, programInfo, billboardMesh, gl.TRIANGLES, flareTexture);\n                    }\n                }\n\n                // ************\n                // Draw mandala\n                // ************\n                if(mandalaModel) {\n                    let position = glm.vec3.fromValues(0, -2.2, 0);\n                    glm.vec3.add(position, position, center);\n                    glm.mat4.identity(modelMatrix);\n                    glm.mat4.translate(modelMatrix, modelMatrix, position);\n                    glm.mat4.scale(modelMatrix, modelMatrix, glm.vec3.fromValues(8, 8, 8));\n                    glm.mat4.rotateY(modelMatrix, modelMatrix, -state.time * 0.1);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_MANDALA);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    for (let mesh of mandalaModel) {\n                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES);\n                    }\n                }\n\n                // ***************\n                // Draw model mask\n                // ***************\n                if(statueModel) {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, maskFrameBuffer.frame);\n\n                    let position = glm.vec3.fromValues(0, 0, 0);\n                    glm.vec3.add(position, position, center);\n                    glm.mat4.identity(modelMatrix);\n                    glm.mat4.translate(modelMatrix, modelMatrix, position);\n                    glm.mat4.rotateY(modelMatrix, modelMatrix, Math.PI / 2.0 - state.time * 0.1);\n\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.enable(gl.CULL_FACE);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 1);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_MASK);\n\n                    for (let mesh of statueModel) {\n                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES);\n                    }\n                }\n\n                // ****************\n                // DRAW MIXBUFFER 1\n                // ****************\n                {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, mixFrameBuffer.frame);\n\n                    glm.mat4.identity(modelMatrix);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_2D_MIX);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n\n                    webGl.drawMesh(gl, programInfo, billboardMesh, gl.TRIANGLES, drawFrameBuffer.texture, maskFrameBuffer.texture);\n                }\n\n                // ***************\n                // Draw model mesh\n                // ***************\n                if(statueModel) {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n\n                    let position = glm.vec3.fromValues(0, 0, 0);\n                    glm.vec3.add(position, position, center);\n                    glm.mat4.identity(modelMatrix);\n                    glm.mat4.translate(modelMatrix, modelMatrix, position);\n                    glm.mat4.rotateY(modelMatrix, modelMatrix, Math.PI / 2.0 - state.time * 0.1);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.enable(gl.CULL_FACE);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 1);\n\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_EDGES);\n                    for (let mesh of statueModel) {\n                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES);\n                    }\n                }\n\n                // ****************\n                // DRAW MIXBUFFER 2\n                // ****************\n                {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n\n                    glm.mat4.identity(modelMatrix);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_2D);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n\n                    webGl.drawMesh(gl, programInfo, billboardMesh, gl.TRIANGLES, mixFrameBuffer.texture);\n                }\n                // *****\n                // DEBUG\n                // *****\n                let debug = false;\n                if(debug && billboardMesh){\n                    let up = glm.vec3.fromValues(0, 1, 0);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_DEFAULT);\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    {\n                        let modelMatrix2 = webGl.getBillboardMatrix(glm.vec3.fromValues(2,0,-5), cameraPosition, up);\n                        glm.mat4.scale(modelMatrix2, modelMatrix2, glm.vec3.fromValues(2, 2, 2));\n\n                        gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix2);\n                        gl.uniform1f(programInfo.uniformLocations.drawVariant, ++variant * 4.0);\n                        webGl.drawMesh(gl, programInfo, billboardMesh, gl.TRIANGLES, audioTexture);\n                    }\n\n                }\n                // ****************\n                // DRAW FRAMEBUFFER\n                // ****************\n                {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, mainFramebuffer);\n                    // viewport for main framebuffer\n                    gl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n\n                    glm.mat4.identity(modelMatrix);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_2D);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n\n                    webGl.drawMesh(gl, programInfo, billboardMesh, gl.TRIANGLES, drawFrameBuffer.texture);\n                }\n            }\n\n            this.state = webGl.createState(\n                clean.bind(this),\n                draw.bind(this),\n                update.bind(this)\n            );\n            webGl.loop(this.gl, this.state);\n\n        },\n    }\n</script>\n\n<style scoped>\n\n    button {\n        padding: 10px;\n    }\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MyCanvas.vue?vue&type=template&id=28532d6a&scoped=true&\"\nimport script from \"./MyCanvas.vue?vue&type=script&lang=js&\"\nexport * from \"./MyCanvas.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MyCanvas.vue?vue&type=style&index=0&id=28532d6a&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"28532d6a\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <WebGl></WebGl>\n  </div>\n</template>\n\n<script>\n\nimport WebGl from \"./components/mycanvas/MyCanvas\";\nexport default {\n  name: 'App',\n  components: {\n    WebGl\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=5b84dd08&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=style&index=0&id=28532d6a&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=style&index=0&id=28532d6a&scoped=true&lang=css&\""],"sourceRoot":""}
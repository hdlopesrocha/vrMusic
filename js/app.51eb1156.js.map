{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/mycanvas/MyCanvas.vue?ecd6","webpack:///./src/App.vue?7ca6","webpack:///./src/components/mycanvas/MyCanvas.vue?c0aa","webpack:///./src/components/mycanvas/vert.glsl","webpack:///./src/components/mycanvas/frag.glsl","webpack:///./src/components/mycanvas/perlin.glsl","webpack:///./src/components/mycanvas/common.glsl","webpack:///./src/utils/webgl.js","webpack:///src/components/mycanvas/MyCanvas.vue","webpack:///./src/components/mycanvas/MyCanvas.vue?c97f","webpack:///./src/components/mycanvas/MyCanvas.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","staticRenderFns","canvasWidth","canvasHeight","on","enableVr","_v","initShaderProgram","gl","vsSource","fsSource","vertexShader","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","alert","getProgramInfoLog","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","createState","cleanDrawback","drawCallback","updateCallback","time","delta","vrInitialized","vrSession","vrSpace","animation","vrSupported","map","tick","now","log","loopVr","state","render","frame","session","requestAnimationFrame","pose","getViewerPose","layer","renderState","baseLayer","framebuffer","views","view","viewport","getViewport","transform","inverse","matrix","projectionMatrix","onSessionEnded","event","onSessionStarted","addEventListener","updateRenderState","XRWebGLLayer","requestReferenceSpace","then","space","console","WebXRPolyfill","navigator","xr","isSessionSupported","supported","requestSession","loop","width","canvas","height","x","y","getProgramInfo","program","attribLocations","vertexPosition","getAttribLocation","vertexNormal","textureCoordinates","uniformLocations","getUniformLocation","viewMatrix","modelMatrix","sampler0","sampler1","enableLight","drawMode","drawVariant","lightDirection","cameraPosition","canvasSize","createArrayBuffers","vertices","normals","texture_coordinates","indices","image","indices_count","vertex_buffer","createBuffer","normal_buffer","index_buffer","texture_coordinates_buffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","Uint16Array","ic","vb","nb","tb","ib","im","createBillboard","getCylinderMesh","definitionA","definitionH","h","a","Math","sin","PI","z","cos","getMesh","mesh","geometry","attributes","position","array","normal","uv","index","material","loadImage","enableAttribs","programInfo","enableVertexAttribArray","disableAttribs","disableVertexAttribArray","drawMesh","image0","image1","vertexAttribPointer","FLOAT","uniform1i","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","TEXTURE1","drawElements","TRIANGLES","UNSIGNED_SHORT","vrInit","isPowerOf2","generateMipmap","texParameteri","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","CLAMP_TO_EDGE","TEXTURE_MIN_FILTER","LINEAR","texture","createTexture","level","internalFormat","RGBA","border","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","loadTexture","url","Image","that","onload","src","getBillboardMatrix","cameraPos","cameraUp","to","glm","subtract","look","normalize","right","cross","up2","fromValues","createFramebuffer","maskTexture","maskRenderBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","maskFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","e","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","error","toString","deleteFramebuffer","obj","deleteTexture","deleteRenderbuffer","getFramebufferTexture","getFramebufferAttachmentParameter","READ_FRAMEBUFFER","FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","component","components","WebGl","Vue","config","productionTip","App","$mount"],"mappings":"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","file":"js/app.51eb1156.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=style&index=0&id=0a5a7fd8&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=style&index=0&id=0a5a7fd8&scoped=true&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('WebGl')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('canvas',{attrs:{\"width\":_vm.canvasWidth,\"height\":_vm.canvasHeight,\"id\":\"glcanvas\"}}),_c('br'),_c('button',{on:{\"click\":_vm.enableVr}},[_vm._v(\"VR\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nin vec4 aVertexPosition;\\nin vec4 aVertexNormal;\\nin vec2 aTextureCoordinates;\\n\\nuniform int uDrawMode;\\nuniform float uDrawVariant;\\n\\nuniform mat4 uViewMatrix;\\nuniform mat4 uProjectionMatrix;\\nuniform mat4 uModelMatrix;\\nuniform vec3 uLightDirection;\\nuniform float uTime;\\n\\nout vec4 vColor;\\nout vec3 vNormal;\\nout vec3 vLightDirection;\\nout vec2 vTextureCoordinates;\\nout vec4 vPosition;\\n\\n//#COMMON\\n//#PERLIN\\n\\nvoid main(void) {\\n    vec2 tTextureCoordinates = aTextureCoordinates;\\n\\n    vPosition = uModelMatrix*aVertexPosition;\\n\\n    if(uDrawMode == DRAW_MODE_2D || uDrawMode == DRAW_MODE_2D_MIX) {\\n        gl_Position = uViewMatrix * vPosition;\\n        vTextureCoordinates = tTextureCoordinates;\\n        return;\\n    }\\n    else {\\n        mat4 viewProjectionMatrix = uProjectionMatrix * uViewMatrix;\\n\\n\\n        if (uDrawMode == DRAW_MODE_CYLINDER) {\\n            float cx = aTextureCoordinates.x;\\n            float cy = cos(aTextureCoordinates.y*PI);\\n            float time = uTime;\\n\\n            // COLOR\\n            float colorVelocity = 0.5;// color changes quicker\\n            float colorFrequency = 0.2;// color is wider\\n            vec4 noiseColor = vec4(\\n                noise(vec4(cx*colorFrequency, cy, time*colorVelocity, uDrawVariant)),\\n                noise(vec4(uDrawVariant, cx*colorFrequency, cy, colorVelocity*time)),\\n                noise(vec4(cx*colorFrequency, cy, uDrawVariant, colorVelocity*time)),\\n                0.0\\n            );\\n            vColor = noiseColor;\\n\\n            // TEXTURE\\n            float textureNoiseVelocity = 0.2;\\n            float textureNoiseFrequency = 0.5;\\n            vec2 noiseTexture = vec2(\\n                noise(vec4(cx, cy, time*textureNoiseVelocity, uDrawVariant)*textureNoiseFrequency),\\n                noise(vec4(uDrawVariant, cx, cy, time*textureNoiseVelocity)*textureNoiseFrequency)\\n            );\\n\\n            vec2 textureVelocity = vec2(-1.0, 0.5);\\n            float textureRotation = 0.5;\\n            float textureWaveSize = 0.4;\\n\\n            vec2 dTextureCoordinates = uTime*textureVelocity + noiseTexture*textureWaveSize;\\n            dTextureCoordinates.y=textureRotation*sin(dTextureCoordinates.y);\\n            tTextureCoordinates += dTextureCoordinates;\\n\\n            // POSITION\\n            float displacementAmplitude = 16.0;\\n            float displacementFrequency = 0.05;\\n            float displacementVelocity = 0.05;\\n            vec4 displacement = displacementAmplitude * vec4(\\n                noise(vec4(uDrawVariant, vPosition.y*displacementFrequency, 0.0, uTime*displacementVelocity)),\\n                0.0,\\n                noise(vec4(uDrawVariant, 0.0, vPosition.y*displacementFrequency, uTime*displacementVelocity)),\\n                0.0\\n            );\\n            vPosition += displacement;\\n        } else if (uDrawMode == DRAW_MODE_EDGES) {\\n            float cx = aTextureCoordinates.x;\\n            float cy = cos(aTextureCoordinates.y*PI);\\n            float time = uTime;\\n\\n            // COLOR\\n            float colorVelocity = 0.2;// color changes quicker\\n            float colorFrequency = 0.1;// color is wider\\n            vec4 noiseColor = vec4(\\n                noise(1.0*vec4(cx*colorFrequency, cy, time*colorVelocity, uDrawVariant)),\\n                noise(1.0*vec4(uDrawVariant, cx*colorFrequency, cy, colorVelocity*time)),\\n                noise(1.0*vec4(cx*colorFrequency, cy, uDrawVariant, colorVelocity*time)),\\n            0.0\\n            );\\n            vColor = noiseColor;\\n        } else if (uDrawMode == DRAW_MODE_SKY) {\\n            float cx = 0.0;\\n            float cy = cos(aTextureCoordinates.y*PI);\\n            float time = uTime;\\n\\n            // COLOR\\n            float colorVelocity = 0.5;// color changes quicker\\n            float colorFrequency = 1.0;// color is wider\\n            vec4 noiseColor = vec4(\\n                noise(1.0*vec4(cx*colorFrequency, cy, time*colorVelocity, uDrawVariant)),\\n                noise(1.0*vec4(uDrawVariant, cx*colorFrequency, cy, colorVelocity*time)),\\n                noise(1.0*vec4(cx*colorFrequency, cy, uDrawVariant, colorVelocity*time)),\\n                0.0\\n            );\\n            vColor = noiseColor;\\n        } else if (uDrawMode == DRAW_MODE_BILLBOARD) {\\n            float cx = aTextureCoordinates.x;\\n            float cy = aTextureCoordinates.y;\\n            float time = uTime;\\n\\n            // COLOR\\n            float colorVelocity = 0.2;// color changes quicker\\n            float colorFrequency = 0.1;// color is wider\\n            vec4 noiseColor = vec4(\\n                noise(vec4(cx*colorFrequency, cy, time*colorVelocity, uDrawVariant)),\\n                noise(vec4(uDrawVariant, cx*colorFrequency, cy, colorVelocity*time)),\\n                noise(vec4(cx*colorFrequency, cy, uDrawVariant, colorVelocity*time)),\\n                0.0\\n            );\\n            vColor = noiseColor;\\n        }\\n\\n        mat3 vNormalMatrix = transpose(inverse(mat3(uModelMatrix)));\\n        vNormal = normalize(vNormalMatrix * aVertexNormal.xyz);\\n        gl_Position = viewProjectionMatrix * vPosition;\\n        vTextureCoordinates = tTextureCoordinates;\\n    }\\n}\";","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nuniform int uDrawMode;\\nuniform sampler2D uSampler0;\\nuniform sampler2D uSampler1;\\n\\nuniform bool uEnableLight;\\nuniform float uTime;\\nuniform vec3 uLightDirection;\\nuniform vec3 uCameraPosition;\\nuniform vec2 uCanvasSize;\\n\\nin vec3 vNormal;\\nin vec2 vTextureCoordinates;\\nin vec4 vColor;\\nin vec4 vPosition;\\n\\nout vec4 fragColor;\\n\\n//#COMMON\\n//#PERLIN\\n\\nvoid main(void) {\\n    vec4 color = vec4(1.0, 1.0, 1.0, 1.0);\\n    vec2 textureCoordinates = vTextureCoordinates;\\n\\n\\n    if (uDrawMode == DRAW_MODE_2D || uDrawMode == DRAW_MODE_2D_MIX) {\\n        textureCoordinates.y = 1.0 - vTextureCoordinates.y;\\n    }\\n\\n    if (uDrawMode == 1){\\n        float n = noise(vec4(textureCoordinates, 0.0, uTime*0.1));\\n        vec2 p = 2.0*textureCoordinates - vec2(1.0, 1.0);\\n        float pd = clamp(length(p), 0.0, 1.0);\\n        float pr = 1.0 - pd*pd*pd;\\n\\n        float pc = clamp(pr*n+pr*0.25, 0.0, 1.0);\\n        color = vec4(1.0, pc*2.0, 0.0, pc);\\n    } else if (uDrawMode == DRAW_MODE_CYLINDER) {\\n        vec4 c = texture(uSampler0, textureCoordinates);\\n        color = clamp(c+vec4(vColor.xyz, 0.0), 0.0, 1.0);\\n    } else if (uDrawMode == DRAW_MODE_2D_MIX) {\\n        vec4 maskColor = texture(uSampler1, textureCoordinates);\\n        if (maskColor.w > 0.0) {\\n            vec4 sum = vec4(0.0);\\n            vec2 delta = 1.0/uCanvasSize;\\n            int count = 0;\\n            int size = 3;\\n            for (int i=-size; i <= size; ++i) {\\n                for (int j=-size; j <= size; ++j) {\\n                    sum += texture(uSampler0, textureCoordinates+delta*vec2(i, j));\\n                    ++count;\\n                }\\n            }\\n            color = (sum / float(count)) + maskColor * 0.5+0.1;\\n            color.w = 0.975;\\n        } else {\\n            color.w = 0.0;\\n        }\\n        fragColor = color;\\n        return;\\n    } else if (uDrawMode == DRAW_MODE_2D) {\\n        color = texture(uSampler0, textureCoordinates);\\n        fragColor = color;\\n        return;\\n    } else {\\n        color = texture(uSampler0, textureCoordinates);\\n    }\\n\\n\\n    vec3 normal = normalize(vNormal);\\n    if (uEnableLight) {\\n        float dotFactor = dot(normal, -uLightDirection);\\n        fragColor = color*vec4(dotFactor, dotFactor, dotFactor, 1.0);\\n    } else {\\n        fragColor = color;\\n    }\\n\\n    if (uDrawMode == DRAW_MODE_MASK) {\\n        vec3 vertexToCam = normalize(vPosition.xyz-uCameraPosition);\\n        float edgeDot = abs(dot(vertexToCam, normal));\\n        if (edgeDot < 0.2) {\\n            fragColor *= 0.0;\\n        }\\n    }\\n\\n    if (uDrawMode == DRAW_MODE_EDGES) {\\n\\n        vec3 vertexToCam = normalize(vPosition.xyz-uCameraPosition);\\n        float edgeDot = abs(dot(vertexToCam, normal));\\n        if (edgeDot < 0.2) {\\n            float minColor = 0.5;\\n            vec3 c = vColor.xyz*8.0 + minColor;\\n\\n            fragColor.xyz = clamp(c, minColor, 1.0);\\n            fragColor.w = 1.0;\\n        } else {\\n            fragColor = vec4(0.0, 0.0, 0.0, 0.01);\\n        }\\n    }\\n    if (uDrawMode == DRAW_MODE_SKY) {\\n        float gradient = 150.0;\\n        fragColor.xyz += vColor.xyz*clamp(1.0 - abs(vPosition.y)/gradient, 0.0, 0.5);\\n    }\\n\\n    if (uDrawMode == DRAW_MODE_BILLBOARD) {\\n        fragColor.xyz += vColor.xyz;\\n    }\\n}\";","export default \"//\\tClassic Perlin 3D Noise\\n//\\tby Stefan Gustavson\\n//\\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\\nvec4 fade(vec4 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\\n#define PI 3.1415926535897932384626433832795\\n\\n\\n\\nfloat cnoise(vec4 P){\\n  vec4 Pi0 = floor(P); // Integer part for indexing\\n  vec4 Pi1 = Pi0 + 1.0; // Integer part + 1\\n  Pi0 = mod(Pi0, 289.0);\\n  Pi1 = mod(Pi1, 289.0);\\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = vec4(Pi0.zzzz);\\n  vec4 iz1 = vec4(Pi1.zzzz);\\n  vec4 iw0 = vec4(Pi0.wwww);\\n  vec4 iw1 = vec4(Pi1.wwww);\\n\\n  vec4 ixy = permute(permute(ix) + iy);\\n  vec4 ixy0 = permute(ixy + iz0);\\n  vec4 ixy1 = permute(ixy + iz1);\\n  vec4 ixy00 = permute(ixy0 + iw0);\\n  vec4 ixy01 = permute(ixy0 + iw1);\\n  vec4 ixy10 = permute(ixy1 + iw0);\\n  vec4 ixy11 = permute(ixy1 + iw1);\\n\\n  vec4 gx00 = ixy00 / 7.0;\\n  vec4 gy00 = floor(gx00) / 7.0;\\n  vec4 gz00 = floor(gy00) / 6.0;\\n  gx00 = fract(gx00) - 0.5;\\n  gy00 = fract(gy00) - 0.5;\\n  gz00 = fract(gz00) - 0.5;\\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\\n  vec4 sw00 = step(gw00, vec4(0.0));\\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\\n\\n  vec4 gx01 = ixy01 / 7.0;\\n  vec4 gy01 = floor(gx01) / 7.0;\\n  vec4 gz01 = floor(gy01) / 6.0;\\n  gx01 = fract(gx01) - 0.5;\\n  gy01 = fract(gy01) - 0.5;\\n  gz01 = fract(gz01) - 0.5;\\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\\n  vec4 sw01 = step(gw01, vec4(0.0));\\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\\n\\n  vec4 gx10 = ixy10 / 7.0;\\n  vec4 gy10 = floor(gx10) / 7.0;\\n  vec4 gz10 = floor(gy10) / 6.0;\\n  gx10 = fract(gx10) - 0.5;\\n  gy10 = fract(gy10) - 0.5;\\n  gz10 = fract(gz10) - 0.5;\\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\\n  vec4 sw10 = step(gw10, vec4(0.0));\\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\\n\\n  vec4 gx11 = ixy11 / 7.0;\\n  vec4 gy11 = floor(gx11) / 7.0;\\n  vec4 gz11 = floor(gy11) / 6.0;\\n  gx11 = fract(gx11) - 0.5;\\n  gy11 = fract(gy11) - 0.5;\\n  gz11 = fract(gz11) - 0.5;\\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\\n  vec4 sw11 = step(gw11, vec4(0.0));\\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\\n\\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\\n\\n  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\\n  g0000 *= norm00.x;\\n  g0100 *= norm00.y;\\n  g1000 *= norm00.z;\\n  g1100 *= norm00.w;\\n\\n  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\\n  g0001 *= norm01.x;\\n  g0101 *= norm01.y;\\n  g1001 *= norm01.z;\\n  g1101 *= norm01.w;\\n\\n  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\\n  g0010 *= norm10.x;\\n  g0110 *= norm10.y;\\n  g1010 *= norm10.z;\\n  g1110 *= norm10.w;\\n\\n  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\\n  g0011 *= norm11.x;\\n  g0111 *= norm11.y;\\n  g1011 *= norm11.z;\\n  g1111 *= norm11.w;\\n\\n  float n0000 = dot(g0000, Pf0);\\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\\n  float n1111 = dot(g1111, Pf1);\\n\\n  vec4 fade_xyzw = fade(Pf0);\\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\\n  return 2.2 * n_xyzw;\\n}\\n\\nfloat noise(vec4 p){\\n    return  cnoise(p)\\n            //+0.5*cnoise(p)\\n            //+0.25*cnoise(p*2.0)\\n           // +0.125*cnoise(p*4.0)\\n           // +0.0625*cnoise(p*8.0)\\n            //+0.03125*cnoise(p*16.0)\\n            //+0.015625*cnoise(p*32.0)\\n            //+0.0078125*cnoise(p*64.0)\\n            ;\\n}\";","export default \"#define DRAW_MODE_2D_MIX -3\\n#define DRAW_MODE_2D -2\\n#define DRAW_MODE_MASK -1\\n#define DRAW_MODE_DEFAULT 0\\n#define DRAW_MODE_CYLINDER 2\\n#define DRAW_MODE_EDGES 3\\n#define DRAW_MODE_SKY 4\\n#define DRAW_MODE_BILLBOARD 5\";","// eslint-disable-next-line no-unused-vars\nimport WebXRPolyfill from \"webxr-polyfill\";\nimport * as glm from \"gl-matrix\";\n\nexport default {\n\n    initShaderProgram: function(gl, vsSource, fsSource) {\n        const vertexShader = this.loadShader(gl, gl.VERTEX_SHADER, vsSource);\n        const fragmentShader = this.loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n\n        const shaderProgram = gl.createProgram();\n        gl.attachShader(shaderProgram, vertexShader);\n        gl.attachShader(shaderProgram, fragmentShader);\n        gl.linkProgram(shaderProgram);\n\n        if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n            alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\n            return null;\n        }\n\n        return shaderProgram;\n    },\n    loadShader: function(gl, type, source) {\n        const shader = gl.createShader(type);\n\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\n            gl.deleteShader(shader);\n            return null;\n        }\n\n        return shader;\n    },\n    createState: function(cleanDrawback, drawCallback, updateCallback) {\n        return  {\n            time: 0,\n            delta: 0,\n            vrInitialized: false,\n            vrSession: null,\n            vrSpace: null,\n            animation: null,\n            cleanDrawback: cleanDrawback,\n            drawCallback: drawCallback,\n            updateCallback: updateCallback,\n            vrSupported: false,\n            map: {},\n            tick: function(now){\n                now *= 0.001;  // convert to seconds\n                this.delta = now - this.time;\n                this.time = now;\n            },\n            log: '',\n        };\n    },\n    loopVr: function(gl, state) {\n        function render(now, frame) {\n            let session = frame.session;\n            if(state.vrInitialized) {\n                state.animation = session.requestAnimationFrame(render);\n            }\n\n            let pose = null;\n            if (state.vrSpace && frame) {\n                pose = frame.getViewerPose(state.vrSpace);\n            }\n\n            state.tick(now);\n            state.updateCallback(gl, state);\n\n            if (pose) {\n                let layer = session ? session.renderState.baseLayer : null;\n                state.cleanDrawback(gl, layer.framebuffer);\n\n                for (let i in pose.views) {\n                    let view = pose.views[i];\n                    let viewport = layer.getViewport(view);\n                    state.drawCallback(gl, viewport, state, view.transform.inverse.matrix, view.projectionMatrix, layer.framebuffer, i);\n                }\n            }\n        }\n\n        // eslint-disable-next-line no-unused-vars\n        function onSessionEnded(event) {\n\n        }\n\n        function onSessionStarted(session) {\n            session.addEventListener('end', onSessionEnded);\n            session.updateRenderState({\n                // eslint-disable-next-line no-undef\n                baseLayer: new XRWebGLLayer(session, gl)\n            });\n            session.requestReferenceSpace('local').then(space => {\n                state.vrSession = session;\n                console.log(space);\n                // state.vrSpace =  space.getOffsetReferenceSpace(new XRRigidTransform(glm.vec3.fromValues(0,-1.60,0), glm.quat.create()) );\n                state.vrSpace =  space;\n                state.animation = session.requestAnimationFrame(render);\n            });\n            console.log(session);\n            return session;\n        }\n\n        if(!state.vrInitialized) {\n            state.vrInitialized = true;\n            new WebXRPolyfill();\n            if (navigator.xr) {\n                navigator.xr.isSessionSupported('immersive-vr').then((supported) => {\n                    state.vrSupported = supported;\n                    navigator.xr.requestSession('immersive-vr').then(onSessionStarted);\n                });\n            }\n        }\n    },\n    loop: function(gl, state) {\n\n        function render(now) {\n            if(!state.vrInitialized) {\n                state.animation = requestAnimationFrame(render);\n            }\n\n            state.tick(now);\n            state.updateCallback(gl, state);\n            state.cleanDrawback(gl, null)\n            let viewport = {\n                width: gl.canvas.width,\n                height: gl.canvas.height,\n                x: 0,\n                y: 0,\n            }\n            //console.log(viewport);\n            if(viewport.width && viewport.height) {\n                state.drawCallback(gl, viewport, state, null, null, null, 0);\n            }\n\n        }\n        state.animation = requestAnimationFrame(render);\n    },\n    getProgramInfo: function(gl, shaderProgram){\n        return {\n            program: shaderProgram,\n                time: 0,\n            attribLocations: {\n                vertexPosition: gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\n                vertexNormal: gl.getAttribLocation(shaderProgram, 'aVertexNormal'),\n                textureCoordinates: gl.getAttribLocation(shaderProgram, 'aTextureCoordinates'),\n            },\n            uniformLocations: {\n                projectionMatrix: gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\n                viewMatrix: gl.getUniformLocation(shaderProgram, 'uViewMatrix'),\n                modelMatrix: gl.getUniformLocation(shaderProgram, 'uModelMatrix'),\n                sampler0: gl.getUniformLocation(shaderProgram, 'uSampler0'),\n                sampler1: gl.getUniformLocation(shaderProgram, 'uSampler1'),\n                enableLight: gl.getUniformLocation(shaderProgram, 'uEnableLight'),\n                drawMode: gl.getUniformLocation(shaderProgram, 'uDrawMode'),\n                drawVariant: gl.getUniformLocation(shaderProgram, 'uDrawVariant'),\n                time: gl.getUniformLocation(shaderProgram, 'uTime'),\n                lightDirection: gl.getUniformLocation(shaderProgram, 'uLightDirection'),\n                cameraPosition: gl.getUniformLocation(shaderProgram, 'uCameraPosition'),\n                canvasSize: gl.getUniformLocation(shaderProgram, 'uCanvasSize'),\n            },\n        };\n    },\n    createArrayBuffers: function(gl, vertices, normals, texture_coordinates, indices, image){\n        let indices_count = indices.length;\n\n        let vertex_buffer = gl.createBuffer();\n        let normal_buffer = gl.createBuffer();\n        let index_buffer = gl.createBuffer();\n        let texture_coordinates_buffer = gl.createBuffer();\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertex_buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, normal_buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(normals), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, texture_coordinates_buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(texture_coordinates), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, index_buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\n        return  {\n            ic: indices_count,\n            vb: vertex_buffer,\n            nb: normal_buffer,\n            tb: texture_coordinates_buffer,\n            ib: index_buffer,\n            im: image\n        };\n    },\n    createBillboard: function(gl) {\n        let vertices = [1, -1, 0, 1, 1, 0, -1, 1, 0, -1, -1, 0];\n        let normals = [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1];\n        let texture_coordinates = [1, 1, 1, 0, 0, 0, 0, 1];\n        let indices = [0, 1, 2, 0, 2, 3];\n        return this.createArrayBuffers(gl, vertices, normals, texture_coordinates, indices, null);\n    },\n    getCylinderMesh: function(gl, image) {\n        let vertices = [];\n        let normals = [];\n        let texture_coordinates = [];\n        let indices = [];\n\n        const height = 128;\n        const definitionA = 16;\n\n        // eslint-disable-next-line no-unused-vars\n        const definitionH = 0.5;\n\n        for(let h=0; h <= height; ++h){\n            for(let a=0; a <= definitionA; ++a){\n                let x = Math.sin((2*Math.PI*a/definitionA) );\n                let y = h*definitionH;\n                let z = Math.cos((2*Math.PI*a/definitionA) );\n                vertices.push(x);\n                vertices.push(y);\n                vertices.push(z);\n                normals.push(x);\n                normals.push(0);\n                normals.push(z);\n                texture_coordinates.push(y);\n                texture_coordinates.push(2.0*a/definitionA);\n            }\n        }\n        for(let h=0; h < height; ++h){\n            for(let a=0; a < definitionA; ++a){\n                indices.push((h+0)*(definitionA+1)+(a+0));\n                indices.push((h+0)*(definitionA+1)+(a+1));\n                indices.push((h+1)*(definitionA+1)+(a+1));\n\n                indices.push((h+0)*(definitionA+1)+(a+0));\n                indices.push((h+1)*(definitionA+1)+(a+1));\n                indices.push((h+1)*(definitionA+1)+(a+0));\n            }\n        }\n        return this.createArrayBuffers(gl, vertices, normals, texture_coordinates, indices, image);\n    },\n    getMesh: function(gl, mesh) {\n        let geometry = mesh.geometry;\n        if(!geometry || !geometry.attributes) {\n            return null;\n        }\n\n        let vertices = geometry.attributes.position.array;\n        let normals =  geometry.attributes.normal.array;\n        let texture_coordinates =  geometry.attributes.uv.array;\n        let indices = geometry.index.array;\n        let image = mesh.material.map.image;\n\n        return this.createArrayBuffers(gl, vertices, normals, texture_coordinates, indices, this.loadImage(gl, image) );\n    },\n    enableAttribs: function(gl, programInfo){\n        gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition);\n        gl.enableVertexAttribArray(programInfo.attribLocations.vertexNormal);\n        gl.enableVertexAttribArray(programInfo.attribLocations.textureCoordinates);\n    },\n    disableAttribs: function(gl, programInfo){\n        gl.disableVertexAttribArray(programInfo.attribLocations.vertexPosition);\n        gl.disableVertexAttribArray(programInfo.attribLocations.vertexNormal);\n        gl.disableVertexAttribArray(programInfo.attribLocations.textureCoordinates);\n    },\n    drawMesh: function(gl, programInfo, mesh, image0, image1) {\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, mesh.vb);\n        gl.vertexAttribPointer(programInfo.attribLocations.vertexPosition, 3, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, mesh.nb);\n        gl.vertexAttribPointer(programInfo.attribLocations.vertexNormal, 3, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, mesh.tb);\n        gl.vertexAttribPointer(programInfo.attribLocations.textureCoordinates, 2, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, mesh.ib);\n\n        if(!image0) {\n            image0 = mesh.im;\n        }\n        if(!image1) {\n            image1 = image0;\n        }\n\n        if(image0) {\n            gl.uniform1i(programInfo.uniformLocations.sampler0, 0);\n            gl.activeTexture(gl.TEXTURE0);\n            gl.bindTexture(gl.TEXTURE_2D, image0);\n        }\n        if(image1) {\n            gl.uniform1i(programInfo.uniformLocations.sampler1, 1);\n            gl.activeTexture(gl.TEXTURE1);\n            gl.bindTexture(gl.TEXTURE_2D, image1);\n        }\n\n        gl.drawElements(gl.TRIANGLES, mesh.ic, gl.UNSIGNED_SHORT, 0);\n    },\n    enableVr: function(state) {\n        state.vrInit = true;\n    },\n    isPowerOf2: function(value) {\n        return (value & (value - 1)) === 0;\n    },\n    generateMipmap: function(gl, image) {\n        if (this.isPowerOf2(image.width) && this.isPowerOf2(image.height)) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n        } else {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        }\n    },\n    loadImage: function(gl, image){\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        const level = 0;\n        const internalFormat = gl.RGBA;\n        const width = 1;\n        const height = 1;\n        const border = 0;\n        const srcFormat = gl.RGBA;\n        const srcType = gl.UNSIGNED_BYTE;\n        const pixel = new Uint8Array([0, 0, 255, 255]);  // opaque blue\n        gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n        this.generateMipmap(gl, image);\n        return texture;\n    },\n    loadTexture: function(gl, url) {\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        const level = 0;\n        const internalFormat = gl.RGBA;\n        const width = 1;\n        const height = 1;\n        const border = 0;\n        const srcFormat = gl.RGBA;\n        const srcType = gl.UNSIGNED_BYTE;\n        const pixel = new Uint8Array([0, 0, 255, 255]);  // opaque blue\n        gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n        const image = new Image();\n        let that = this;\n\n        image.onload = function() {\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n            that.generateMipmap(gl, image);\n        };\n        image.src = url;\n\n        return texture;\n    },\n\n    getBillboardMatrix: function(position, cameraPos, cameraUp) {\n        let to = glm.vec3.subtract(glm.vec3.create(), cameraPos, position);\n        let look = glm.vec3.normalize(to, to);\n        let right = glm.vec3.cross(glm.vec3.create(), cameraUp, look);\n        let up2 = glm.vec3.cross(glm.vec3.create(), look, right);\n\n        return glm.mat4.fromValues(\n            right[0],right[1],right[2],0,\n            up2[0],up2[1],up2[2],0,\n            look[0],look[1],look[2],0,\n            position[0],position[1],position[2],1\n        );\n    },\n    createFramebuffer: function (gl, width, height) {\n        // texture\n        let maskTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, maskTexture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n        // render\n        let maskRenderBuffer = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, maskRenderBuffer);\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n\n        // frame\n        let maskFramebuffer = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, maskFramebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, maskTexture, 0);\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, maskRenderBuffer);\n\n        let e = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if(gl.FRAMEBUFFER_COMPLETE !== e) {\n            console.error(\"ERROR\", e.toString());\n        }\n        // Unbind the buffer object\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        return {\n            texture: maskTexture,\n            render: maskRenderBuffer,\n            frame: maskFramebuffer,\n            width: width,\n            height: height\n        };\n    },\n    deleteFramebuffer: function (gl, obj) {\n        if (obj.frame) gl.deleteFramebuffer(obj.frame);\n        if (obj.texture) gl.deleteTexture(obj.texture);\n        if (obj.render) gl.deleteRenderbuffer(obj.render);\n    },\n    getFramebufferTexture: function(gl) {\n        return gl.getFramebufferAttachmentParameter(gl.READ_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME);\n    },\n}","<template>\n    <div>\n        <canvas v-bind:width=\"canvasWidth\" v-bind:height=\"canvasHeight\" id=\"glcanvas\"></canvas>\n        <br>\n        <button v-on:click=\"enableVr\">VR</button>\n    </div>\n</template>\n\n<script>\n    /* eslint-disable no-unused-vars */\n    import {mat4} from \"gl-matrix\";\n\n    const DRAW_MODE_2D_MIX = -3\n    const DRAW_MODE_2D = -2\n    const DRAW_MODE_MASK = -1\n    const DRAW_MODE_DEFAULT = 0\n    const DRAW_MODE_CYLINDER = 2\n    const DRAW_MODE_EDGES = 3\n    const DRAW_MODE_SKY = 4\n    const DRAW_MODE_BILLBOARD = 5\n    /* eslint-enable no-unused-vars */\n\n\n    import vertexShader from 'raw-loader!./vert.glsl';\n    import fragmentShader from 'raw-loader!./frag.glsl';\n    import perlinShader from 'raw-loader!./perlin.glsl';\n    import commonShader from 'raw-loader!./common.glsl';\n\n    import webgl from '../../utils/webgl';\n    import * as glm from 'gl-matrix'\n    import GLTFLoader from 'three-gltf-loader';\n\n    export default {\n        name: \"WebGl\",\n\n        data() {\n            return {\n                canvasWidth: 512,\n                canvasHeight: 512,\n                state: null,\n                gl: null\n            }\n        },\n        methods: {\n            enableVr() {\n                webgl.loopVr(this.gl, this.state);\n            },\n        },\n        mounted() {\n            const canvas = document.querySelector('#glcanvas');\n            const gl = canvas.getContext('webgl2', {xrCompatible: true});\n            this.gl = gl;\n            canvas.addEventListener(\"contextmenu\", (event) => {\n                event.preventDefault();\n            });\n\n            let fShader = fragmentShader.replace(\"//#PERLIN\", perlinShader).replace(\"//#COMMON\", commonShader);\n            let vShader = vertexShader.replace(\"//#PERLIN\", perlinShader).replace(\"//#COMMON\", commonShader);\n\n            const shaderProgram = webgl.initShaderProgram(gl, vShader, fShader);\n            gl.useProgram(shaderProgram);\n            const programInfo = webgl.getProgramInfo(gl, shaderProgram);\n\n            let lightDirection = glm.vec3.fromValues(-1.0, -1.0, -1.0);\n            glm.vec3.normalize(lightDirection, lightDirection);\n\n            let mandalaMesh = [];\n            let modelMesh = [];\n            let spaceMesh = [];\n            let cylinderMesh = webgl.getCylinderMesh(gl, webgl.loadTexture(gl, \"models/pattern.png\"));\n            let flareTexture = webgl.loadTexture(gl, \"models/flare.png\");\n\n            const loader = new GLTFLoader();\n            //console.log(model);\n            loader.load(\"models/ganesha.gltf\", gltf => {\n                console.log(\"loading G...\");\n                let group = [];\n                for (let c of gltf.scene.children) {\n                    let m = webgl.getMesh(gl, c);\n                    if (m != null) {\n                        group.push(m);\n                    }\n                }\n                modelMesh.push(group);\n                console.log(\"loaded G!\");\n            });\n            loader.load(\"models/space.gltf\", gltf => {\n                let group = [];\n                for (let c of gltf.scene.children) {\n                    let m = webgl.getMesh(gl, c);\n                    if (m != null) {\n                        group.push(m);\n                    }\n                }\n                spaceMesh.push(group);\n            });\n\n            let billboardMesh2 = webgl.createBillboard(gl);\n\n            loader.load(\"models/mandala.gltf\", gltf => {\n                let group = [];\n                for (let c of gltf.scene.children) {\n                    let m = webgl.getMesh(gl, c);\n                    if (m != null) {\n                        group.push(m);\n                    }\n                }\n                mandalaMesh.push(group);\n            });\n\n            // eslint-disable-next-line no-unused-vars\n            function update(gl, state) {\n\n            }\n\n            // eslint-disable-next-line no-unused-vars\n            function clean(gl, framebuffer) {\n                gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n                gl.clearColor(0.0, 0.0, 0.0, 0.0);\n                gl.enable(gl.DEPTH_TEST);\n                gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n            }\n\n            // eslint-disable-next-line no-unused-vars\n            function draw(gl, viewport, state, viewMatrix, projectionMatrix, mainFramebuffer, index) {\n                webgl.enableAttribs(gl, programInfo);\n                // viewport for extra framebuffers (not for the main one)\n                gl.viewport(0, 0, viewport.width, viewport.height);\n\n                let map = state.map[index];\n                if (!map) {\n                    map = {};\n                }\n                let drawFrameBuffer = map.drawFrameBuffer;\n                let maskFrameBuffer = map.maskFrameBuffer;\n                let mixFrameBuffer = map.mixFrameBuffer;\n\n                if (drawFrameBuffer == null || drawFrameBuffer.width !== viewport.width || drawFrameBuffer.height !== viewport.height) {\n                    if (drawFrameBuffer != null) {\n                        webgl.deleteFramebuffer(gl, drawFrameBuffer);\n                        webgl.deleteFramebuffer(gl, maskFrameBuffer);\n                        webgl.deleteFramebuffer(gl, mixFrameBuffer);\n                    }\n                    drawFrameBuffer = webgl.createFramebuffer(gl, viewport.width, viewport.height);\n                    maskFrameBuffer = webgl.createFramebuffer(gl, viewport.width, viewport.height);\n                    mixFrameBuffer = webgl.createFramebuffer(gl, viewport.width, viewport.height);\n                }\n                clean(gl, drawFrameBuffer.frame);\n                clean(gl, maskFrameBuffer.frame);\n                clean(gl, mixFrameBuffer.frame);\n\n                state.map[index] = {\n                    drawFrameBuffer: drawFrameBuffer,\n                    maskFrameBuffer: maskFrameBuffer,\n                    mixFrameBuffer: mixFrameBuffer\n                };\n\n                gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n\n                gl.uniform1f(programInfo.uniformLocations.time, state.time);\n                gl.uniform3fv(programInfo.uniformLocations.lightDirection, lightDirection);\n                gl.uniform2f(programInfo.uniformLocations.canvasSize, viewport.width, viewport.height);\n\n                gl.enable(gl.BLEND);\n                gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n                let variant = 0;\n\n                if (viewMatrix == null) {\n                    viewMatrix = glm.mat4.create();\n                    let center = glm.vec3.fromValues(0, -2, -5);\n                    let up = glm.vec3.fromValues(0, 1, 0);\n                    let eye = glm.vec3.fromValues(-5 * Math.sin(state.time), 3, -5 * Math.cos(state.time) - 5);\n                    glm.mat4.lookAt(viewMatrix, eye, center, up);\n                }\n                if (projectionMatrix == null) {\n                    projectionMatrix = glm.mat4.create();\n                    glm.mat4.perspective(projectionMatrix, 90 * Math.PI / 180, gl.canvas.clientWidth / gl.canvas.clientHeight, 0.1, 1000.0);\n                }\n                gl.uniformMatrix4fv(programInfo.uniformLocations.viewMatrix, false, viewMatrix);\n                gl.uniformMatrix4fv(programInfo.uniformLocations.projectionMatrix, false, projectionMatrix);\n\n                let invertedViewMatrix = glm.mat4.invert(glm.mat4.create(), viewMatrix);\n                let cameraPosition = glm.vec3.fromValues(invertedViewMatrix[12], invertedViewMatrix[13], invertedViewMatrix[14]);\n                gl.uniform3fv(programInfo.uniformLocations.cameraPosition, cameraPosition);\n\n                let modelMatrix = glm.mat4.create();\n\n\n                // **********\n                // Draw space\n                // **********\n                {\n                    glm.mat4.identity(modelMatrix);\n                    glm.mat4.scale(modelMatrix, modelMatrix, glm.vec3.fromValues(400, 400, 400));\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_SKY);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    for (let model of spaceMesh) {\n                        for (let mesh of model) {\n                            webgl.drawMesh(gl, programInfo, mesh);\n                        }\n                    }\n                }\n\n                // **************\n                // Draw billboard\n                // **************\n                {\n                    //let up = glm.vec3.fromValues(viewMatrix[4], viewMatrix[5] ,viewMatrix[6]);\n                    let up = glm.vec3.fromValues(0, 1, 0);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_BILLBOARD);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    variant = 0;\n                    for (let i = 0; i < 2.0 * Math.PI; i += Math.PI / 8.0) {\n                        let r = 32.0;\n                        let position = glm.vec3.fromValues(r * Math.cos(i), 8 * Math.sin(state.time + variant), r * Math.sin(i));\n                        let modelMatrix2 = webgl.getBillboardMatrix(position, cameraPosition, up);\n                        glm.mat4.scale(modelMatrix2, modelMatrix2, glm.vec3.fromValues(2, 2, 2));\n\n                        gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix2);\n                        gl.uniform1f(programInfo.uniformLocations.drawVariant, ++variant * 4.0);\n                        webgl.drawMesh(gl, programInfo, billboardMesh2, flareTexture);\n                    }\n                }\n\n                // *************\n                // Draw cylinder\n                // *************\n                {\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.enable(gl.CULL_FACE);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_CYLINDER);\n                    let cylinderDistance = 20;\n\n                    variant = 0;\n                    for (let i = Math.PI / 3.0; i < 2 * Math.PI - 0.001; i += 2.0 * Math.PI / 3.0) {\n                        glm.mat4.identity(modelMatrix);\n                        glm.mat4.translate(modelMatrix, modelMatrix, glm.vec3.fromValues(-cylinderDistance * Math.sin(i), -128, -cylinderDistance * Math.cos(i) - 5));\n                        glm.mat4.scale(modelMatrix, modelMatrix, glm.vec3.fromValues(4, 4, 4));\n                        gl.uniform1f(programInfo.uniformLocations.drawVariant, ++variant * 4.0);\n                        gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                        webgl.drawMesh(gl, programInfo, cylinderMesh);\n                    }\n                }\n\n\n                // ************\n                // Draw mandala\n                // ************\n                {\n                    glm.mat4.identity(modelMatrix);\n                    glm.mat4.translate(modelMatrix, modelMatrix, glm.vec3.fromValues(0, -4.2, -5));\n                    glm.mat4.scale(modelMatrix, modelMatrix, glm.vec3.fromValues(8, 8, 8));\n                    glm.mat4.rotateY(modelMatrix, modelMatrix, -state.time * 0.1);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_DEFAULT);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    for (let model of mandalaMesh) {\n                        for (let mesh of model) {\n                            webgl.drawMesh(gl, programInfo, mesh);\n                        }\n                    }\n                }\n\n                // ***************\n                // Draw model mask\n                // ***************\n                {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, maskFrameBuffer.frame);\n\n                    glm.mat4.identity(modelMatrix);\n                    glm.mat4.translate(modelMatrix, modelMatrix, glm.vec3.fromValues(0, -2, -5));\n                    glm.mat4.rotateY(modelMatrix, modelMatrix, Math.PI / 2.0 - state.time * 0.1);\n\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.enable(gl.CULL_FACE);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 1);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_MASK);\n\n                    for (let model of modelMesh) {\n                        for (let mesh of model) {\n                            webgl.drawMesh(gl, programInfo, mesh);\n                        }\n                    }\n                }\n\n                // ****************\n                // DRAW MIXBUFFER 1\n                // ****************\n                {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, mixFrameBuffer.frame);\n\n                    let viewMatrix2 = glm.mat4.ortho(glm.mat4.create(), -1, 1, -1, 1, -1.0, 1.0);\n                    let modelMatrix2 = glm.mat4.create();\n\n\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_2D_MIX);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.viewMatrix, false, viewMatrix2);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix2);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n\n                    webgl.drawMesh(gl, programInfo, billboardMesh2, drawFrameBuffer.texture, maskFrameBuffer.texture);\n\n                    // Reset\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.viewMatrix, false, viewMatrix);\n\n                }\n\n                // ***************\n                // Draw model mesh\n                // ***************\n                {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n\n                    glm.mat4.identity(modelMatrix);\n                    glm.mat4.translate(modelMatrix, modelMatrix, glm.vec3.fromValues(0, -2, -5));\n                    glm.mat4.rotateY(modelMatrix, modelMatrix, Math.PI / 2.0 - state.time * 0.1);\n\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.enable(gl.CULL_FACE);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 1);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_EDGES);\n                    for (let model of modelMesh) {\n                        for (let mesh of model) {\n                            webgl.drawMesh(gl, programInfo, mesh);\n                        }\n                    }\n                }\n                // ****************\n                // DRAW MIXBUFFER 2\n                // ****************\n                {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n\n                    let viewMatrix2 = glm.mat4.ortho(glm.mat4.create(), -1, 1, -1, 1, -1.0, 1.0);\n                    let modelMatrix2 = glm.mat4.create();\n\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_2D);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.viewMatrix, false, viewMatrix2);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix2);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n\n                    webgl.drawMesh(gl, programInfo, billboardMesh2, mixFrameBuffer.texture);\n\n                    // Reset\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.viewMatrix, false, viewMatrix);\n                }\n                // *****\n                // DEBUG\n                // *****\n                let debug = false;\n                if(debug){\n                    let up = glm.vec3.fromValues(0, 1, 0);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_DEFAULT);\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    {\n                        let modelMatrix2 = webgl.getBillboardMatrix(glm.vec3.fromValues(2,0,-5), cameraPosition, up);\n                        glm.mat4.scale(modelMatrix2, modelMatrix2, glm.vec3.fromValues(2, 2, 2));\n\n                        gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix2);\n                        gl.uniform1f(programInfo.uniformLocations.drawVariant, ++variant * 4.0);\n                        webgl.drawMesh(gl, programInfo, billboardMesh2, maskFrameBuffer.texture);\n                    }\n                    {\n                        let modelMatrix2 = webgl.getBillboardMatrix(glm.vec3.fromValues(-2,0,-5), cameraPosition, up);\n                        glm.mat4.scale(modelMatrix2, modelMatrix2, glm.vec3.fromValues(2, 2, 2));\n\n                        gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix2);\n                        gl.uniform1f(programInfo.uniformLocations.drawVariant, ++variant * 4.0);\n                        webgl.drawMesh(gl, programInfo, billboardMesh2, mixFrameBuffer.texture);\n                    }\n                }\n\n                // ****************\n                // DRAW FRAMEBUFFER\n                // ****************\n                {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, mainFramebuffer);\n                    // viewport for main framebuffer\n                    gl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n\n                    let viewMatrix2 = glm.mat4.ortho(glm.mat4.create(), -1, 1, -1, 1, -1.0, 1.0);\n                    let modelMatrix2 = glm.mat4.create();\n\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_2D);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.viewMatrix, false, viewMatrix2);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix2);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n\n                    webgl.drawMesh(gl, programInfo, billboardMesh2, drawFrameBuffer.texture);\n                }\n            }\n\n\n            this.state = webgl.createState(clean, draw, update);\n            webgl.loop(this.gl, this.state);\n\n        },\n    }\n</script>\n\n<style scoped>\n\n    button {\n        padding: 10px;\n    }\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MyCanvas.vue?vue&type=template&id=0a5a7fd8&scoped=true&\"\nimport script from \"./MyCanvas.vue?vue&type=script&lang=js&\"\nexport * from \"./MyCanvas.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MyCanvas.vue?vue&type=style&index=0&id=0a5a7fd8&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"0a5a7fd8\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <WebGl></WebGl>\n  </div>\n</template>\n\n<script>\n\nimport WebGl from \"./components/mycanvas/MyCanvas\";\nexport default {\n  name: 'App',\n  components: {\n    WebGl\n  }\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=5b84dd08&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n"],"sourceRoot":""}
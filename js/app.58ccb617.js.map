{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7e02","webpack:///./src/components/mycanvas/MyCanvas.vue?614c","webpack:///./src/utils/perlin.js","webpack:///./src/App.vue?5084","webpack:///./src/components/mycanvas/MyCanvas.vue?4035","webpack:///./src/components/mycanvas/vert.glsl","webpack:///./src/components/mycanvas/frag.glsl","webpack:///./src/components/mycanvas/perlin.glsl","webpack:///./src/components/mycanvas/hsl2rgb.glsl","webpack:///./src/components/mycanvas/common.glsl","webpack:///./src/utils/webGl.js","webpack:///./src/utils/webAudio.js","webpack:///src/components/mycanvas/MyCanvas.vue","webpack:///./src/components/mycanvas/MyCanvas.vue?c97f","webpack:///./src/components/mycanvas/MyCanvas.vue","webpack:///src/App.vue","webpack:///./src/App.vue?1160","webpack:///./src/App.vue","webpack:///./src/main.js","webpack:///./src/components/mycanvas/MyCanvas.vue?7d65"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","global","noise","Grad","x","y","z","this","dot2","dot3","grad3","perm","Array","gradP","seed","Math","floor","v","F2","sqrt","G2","F3","G3","fade","lerp","a","b","simplex2","xin","yin","n0","n1","n2","i1","j1","x0","y0","x1","y1","x2","y2","gi0","gi1","gi2","t0","t1","t2","simplex3","zin","n3","k1","i2","j2","k2","k","z0","z1","z2","x3","y3","z3","gi3","t3","perlin2","X","Y","n00","n01","n10","n11","u","perlin3","Z","n000","n001","n010","n011","n100","n101","n110","n111","w","_vm","_h","$createElement","_c","_self","attrs","staticRenderFns","hidden","_e","_v","on","pickFile","enableMic","enableVr","hideTable","_m","staticStyle","model","callback","$$v","blurTransition","expression","directives","rawName","domProps","$event","target","composing","blurPeriod","cubesTransition","cubesPeriod","cylindersTransition","cylindersPeriod","hexagonsTransition","hexagonsPeriod","mandalaTransition","mandalaPeriod","modelTransition","modelPeriod","neuralTransition","neuralPeriod","pyramidsTransition","pyramidsPeriod","radialTransition","radialPeriod","rgbTransition","rgbPeriod","starsTransition","starsPeriod","torusTransition","torusPeriod","waterTransition","waterPeriod","canvasWidth","canvasHeight","ref","enableMusic","TRANSPARENT","glm","fromValues","WHITE","BLACK","initShaderProgram","gl","vsSource","fsSource","vertexShader","loadShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","alert","getProgramInfoLog","type","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","deleteShader","createState","cleanDrawback","drawCallback","updateCallback","time","delta","vrInitialized","vrToggle","vrSession","vrSpace","animation","vrSupported","map","tick","now","log","loop","state","that","onSessionEnded","event","onSessionStarted","session","addEventListener","updateRenderState","baseLayer","XRWebGLLayer","requestReferenceSpace","then","space","console","cancelAnimationFrame","requestAnimationFrame","render","frame","WebXRPolyfill","navigator","xr","isSessionSupported","supported","requestSession","pose","getViewerPose","layer","renderState","framebuffer","views","view","viewport","getViewport","width","height","transform","inverse","matrix","projectionMatrix","canvas","getProgramInfo","program","attribLocations","vertexPosition","getAttribLocation","vertexNormal","textureCoordinates","uniformLocations","getUniformLocation","viewMatrix","modelMatrix","orthoMatrix","sampler","enableLight","drawMode","drawVariant","timeShift","animationVelocity","lightDirection","cameraPosition","canvasSize","audioSampler","audioLevel","effectAmount","createArrayBuffers","vertices","normals","texture_coordinates","indices","image","indices_count","vertex_buffer","createBuffer","normal_buffer","index_buffer","texture_coordinates_buffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","Uint16Array","ic","vb","nb","tb","ib","im","createBillboard","getCylinderMesh","definitionA","definitionH","h","sin","PI","cos","getMesh","mesh","geometry","attributes","position","array","normal","uv","index","material","error","loadImage","getModel","gltf","group","scene","children","enableAttribs","programInfo","enableVertexAttribArray","disableAttribs","disableVertexAttribArray","bindTexture","uniform","texture","uniform1i","activeTexture","TEXTURE0","TEXTURE_2D","drawMesh","image0","image1","vertexAttribPointer","FLOAT","drawElements","UNSIGNED_SHORT","vrInit","isPowerOf2","generateMipmap","texParameteri","TEXTURE_WRAP_S","REPEAT","TEXTURE_WRAP_T","CLAMP_TO_EDGE","TEXTURE_MIN_FILTER","LINEAR","initializeTexture","pixel","Uint8Array","texImage2D","LUMINANCE","UNSIGNED_BYTE","loadAudio","level","internalFormat","border","srcFormat","srcType","createTexture","RGBA","loadTexture","url","Image","onload","src","TEMP_TO","TEMP_UP","TEMP_RIGHT","getBillboardMatrix","cameraPos","cameraUp","to","subtract","set","look","normalize","right","cross","up2","createFramebuffer","format","maskTexture","maskRenderBuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","maskFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","e","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","toString","deleteFramebuffer","obj","deleteTexture","deleteRenderbuffer","getFramebufferTexture","getFramebufferAttachmentParameter","READ_FRAMEBUFFER","FRAMEBUFFER_ATTACHMENT_OBJECT_NAME","toggleVR","copyBuffer","dest","DRAW_FRAMEBUFFER","blitFramebuffer","COLOR_BUFFER_BIT","NEAREST","initializeArray","myNoise3d","myNoise3dx","il","pe","re","max","component","components","WebGl","Vue","config","productionTip","App","$mount"],"mappings":"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","file":"js/app.58ccb617.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=style&index=1&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=style&index=1&lang=css&\"","/*\n * A speed-improved perlin and simplex noise algorithms for 2D.\n *\n * Based on example code by Stefan Gustavson (stegu@itn.liu.se).\n * Optimisations by Peter Eastman (peastman@drizzle.stanford.edu).\n * Better rank ordering method by Stefan Gustavson in 2012.\n * Converted to Javascript by Joseph Gentle.\n *\n * Version 2012-03-09\n *\n * This code was placed in the public domain by its original author,\n * Stefan Gustavson. You may use it as you see fit, but\n * attribution is appreciated.\n *\n */\n\n(function(global){\n  var module = global.noise = {};\n\n  function Grad(x, y, z) {\n    this.x = x; this.y = y; this.z = z;\n  }\n  \n  Grad.prototype.dot2 = function(x, y) {\n    return this.x*x + this.y*y;\n  };\n\n  Grad.prototype.dot3 = function(x, y, z) {\n    return this.x*x + this.y*y + this.z*z;\n  };\n\n  var grad3 = [new Grad(1,1,0),new Grad(-1,1,0),new Grad(1,-1,0),new Grad(-1,-1,0),\n               new Grad(1,0,1),new Grad(-1,0,1),new Grad(1,0,-1),new Grad(-1,0,-1),\n               new Grad(0,1,1),new Grad(0,-1,1),new Grad(0,1,-1),new Grad(0,-1,-1)];\n\n  var p = [151,160,137,91,90,15,\n  131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,\n  190, 6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,\n  88,237,149,56,87,174,20,125,136,171,168, 68,175,74,165,71,134,139,48,27,166,\n  77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,\n  102,143,54, 65,25,63,161, 1,216,80,73,209,76,132,187,208, 89,18,169,200,196,\n  135,130,116,188,159,86,164,100,109,198,173,186, 3,64,52,217,226,250,124,123,\n  5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,\n  223,183,170,213,119,248,152, 2,44,154,163, 70,221,153,101,155,167, 43,172,9,\n  129,22,39,253, 19,98,108,110,79,113,224,232,178,185, 112,104,218,246,97,228,\n  251,34,242,193,238,210,144,12,191,179,162,241, 81,51,145,235,249,14,239,107,\n  49,192,214, 31,181,199,106,157,184, 84,204,176,115,121,50,45,127, 4,150,254,\n  138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180];\n  // To remove the need for index wrapping, double the permutation table length\n  var perm = new Array(512);\n  var gradP = new Array(512);\n\n  // This isn't a very good seeding function, but it works ok. It supports 2^16\n  // different seed values. Write something better if you need more seeds.\n  module.seed = function(seed) {\n    if(seed > 0 && seed < 1) {\n      // Scale the seed out\n      seed *= 65536;\n    }\n\n    seed = Math.floor(seed);\n    if(seed < 256) {\n      seed |= seed << 8;\n    }\n\n    for(var i = 0; i < 256; i++) {\n      var v;\n      if (i & 1) {\n        v = p[i] ^ (seed & 255);\n      } else {\n        v = p[i] ^ ((seed>>8) & 255);\n      }\n\n      perm[i] = perm[i + 256] = v;\n      gradP[i] = gradP[i + 256] = grad3[v % 12];\n    }\n  };\n\n  module.seed(0);\n\n  /*\n  for(var i=0; i<256; i++) {\n    perm[i] = perm[i + 256] = p[i];\n    gradP[i] = gradP[i + 256] = grad3[perm[i] % 12];\n  }*/\n\n  // Skewing and unskewing factors for 2, 3, and 4 dimensions\n  var F2 = 0.5*(Math.sqrt(3)-1);\n  var G2 = (3-Math.sqrt(3))/6;\n\n  var F3 = 1/3;\n  var G3 = 1/6;\n\n  // 2D simplex noise\n  module.simplex2 = function(xin, yin) {\n    var n0, n1, n2; // Noise contributions from the three corners\n    // Skew the input space to determine which simplex cell we're in\n    var s = (xin+yin)*F2; // Hairy factor for 2D\n    var i = Math.floor(xin+s);\n    var j = Math.floor(yin+s);\n    var t = (i+j)*G2;\n    var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\n    var y0 = yin-j+t;\n    // For the 2D case, the simplex shape is an equilateral triangle.\n    // Determine which simplex we are in.\n    var i1, j1; // Offsets for second (middle) corner of simplex in (i,j) coords\n    if(x0>y0) { // lower triangle, XY order: (0,0)->(1,0)->(1,1)\n      i1=1; j1=0;\n    } else {    // upper triangle, YX order: (0,0)->(0,1)->(1,1)\n      i1=0; j1=1;\n    }\n    // A step of (1,0) in (i,j) means a step of (1-c,-c) in (x,y), and\n    // a step of (0,1) in (i,j) means a step of (-c,1-c) in (x,y), where\n    // c = (3-sqrt(3))/6\n    var x1 = x0 - i1 + G2; // Offsets for middle corner in (x,y) unskewed coords\n    var y1 = y0 - j1 + G2;\n    var x2 = x0 - 1 + 2 * G2; // Offsets for last corner in (x,y) unskewed coords\n    var y2 = y0 - 1 + 2 * G2;\n    // Work out the hashed gradient indices of the three simplex corners\n    i &= 255;\n    j &= 255;\n    var gi0 = gradP[i+perm[j]];\n    var gi1 = gradP[i+i1+perm[j+j1]];\n    var gi2 = gradP[i+1+perm[j+1]];\n    // Calculate the contribution from the three corners\n    var t0 = 0.5 - x0*x0-y0*y0;\n    if(t0<0) {\n      n0 = 0;\n    } else {\n      t0 *= t0;\n      n0 = t0 * t0 * gi0.dot2(x0, y0);  // (x,y) of grad3 used for 2D gradient\n    }\n    var t1 = 0.5 - x1*x1-y1*y1;\n    if(t1<0) {\n      n1 = 0;\n    } else {\n      t1 *= t1;\n      n1 = t1 * t1 * gi1.dot2(x1, y1);\n    }\n    var t2 = 0.5 - x2*x2-y2*y2;\n    if(t2<0) {\n      n2 = 0;\n    } else {\n      t2 *= t2;\n      n2 = t2 * t2 * gi2.dot2(x2, y2);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 70 * (n0 + n1 + n2);\n  };\n\n  // 3D simplex noise\n  module.simplex3 = function(xin, yin, zin) {\n    var n0, n1, n2, n3; // Noise contributions from the four corners\n\n    // Skew the input space to determine which simplex cell we're in\n    var s = (xin+yin+zin)*F3; // Hairy factor for 2D\n    var i = Math.floor(xin+s);\n    var j = Math.floor(yin+s);\n    var k = Math.floor(zin+s);\n\n    var t = (i+j+k)*G3;\n    var x0 = xin-i+t; // The x,y distances from the cell origin, unskewed.\n    var y0 = yin-j+t;\n    var z0 = zin-k+t;\n\n    // For the 3D case, the simplex shape is a slightly irregular tetrahedron.\n    // Determine which simplex we are in.\n    var i1, j1, k1; // Offsets for second corner of simplex in (i,j,k) coords\n    var i2, j2, k2; // Offsets for third corner of simplex in (i,j,k) coords\n    if(x0 >= y0) {\n      if(y0 >= z0)      { i1=1; j1=0; k1=0; i2=1; j2=1; k2=0; }\n      else if(x0 >= z0) { i1=1; j1=0; k1=0; i2=1; j2=0; k2=1; }\n      else              { i1=0; j1=0; k1=1; i2=1; j2=0; k2=1; }\n    } else {\n      if(y0 < z0)      { i1=0; j1=0; k1=1; i2=0; j2=1; k2=1; }\n      else if(x0 < z0) { i1=0; j1=1; k1=0; i2=0; j2=1; k2=1; }\n      else             { i1=0; j1=1; k1=0; i2=1; j2=1; k2=0; }\n    }\n    // A step of (1,0,0) in (i,j,k) means a step of (1-c,-c,-c) in (x,y,z),\n    // a step of (0,1,0) in (i,j,k) means a step of (-c,1-c,-c) in (x,y,z), and\n    // a step of (0,0,1) in (i,j,k) means a step of (-c,-c,1-c) in (x,y,z), where\n    // c = 1/6.\n    var x1 = x0 - i1 + G3; // Offsets for second corner\n    var y1 = y0 - j1 + G3;\n    var z1 = z0 - k1 + G3;\n\n    var x2 = x0 - i2 + 2 * G3; // Offsets for third corner\n    var y2 = y0 - j2 + 2 * G3;\n    var z2 = z0 - k2 + 2 * G3;\n\n    var x3 = x0 - 1 + 3 * G3; // Offsets for fourth corner\n    var y3 = y0 - 1 + 3 * G3;\n    var z3 = z0 - 1 + 3 * G3;\n\n    // Work out the hashed gradient indices of the four simplex corners\n    i &= 255;\n    j &= 255;\n    k &= 255;\n    var gi0 = gradP[i+   perm[j+   perm[k   ]]];\n    var gi1 = gradP[i+i1+perm[j+j1+perm[k+k1]]];\n    var gi2 = gradP[i+i2+perm[j+j2+perm[k+k2]]];\n    var gi3 = gradP[i+ 1+perm[j+ 1+perm[k+ 1]]];\n\n    // Calculate the contribution from the four corners\n    var t0 = 0.6 - x0*x0 - y0*y0 - z0*z0;\n    if(t0<0) {\n      n0 = 0;\n    } else {\n      t0 *= t0;\n      n0 = t0 * t0 * gi0.dot3(x0, y0, z0);  // (x,y) of grad3 used for 2D gradient\n    }\n    var t1 = 0.6 - x1*x1 - y1*y1 - z1*z1;\n    if(t1<0) {\n      n1 = 0;\n    } else {\n      t1 *= t1;\n      n1 = t1 * t1 * gi1.dot3(x1, y1, z1);\n    }\n    var t2 = 0.6 - x2*x2 - y2*y2 - z2*z2;\n    if(t2<0) {\n      n2 = 0;\n    } else {\n      t2 *= t2;\n      n2 = t2 * t2 * gi2.dot3(x2, y2, z2);\n    }\n    var t3 = 0.6 - x3*x3 - y3*y3 - z3*z3;\n    if(t3<0) {\n      n3 = 0;\n    } else {\n      t3 *= t3;\n      n3 = t3 * t3 * gi3.dot3(x3, y3, z3);\n    }\n    // Add contributions from each corner to get the final noise value.\n    // The result is scaled to return values in the interval [-1,1].\n    return 32 * (n0 + n1 + n2 + n3);\n\n  };\n\n  // ##### Perlin noise stuff\n\n  function fade(t) {\n    return t*t*t*(t*(t*6-15)+10);\n  }\n\n  function lerp(a, b, t) {\n    return (1-t)*a + t*b;\n  }\n\n  // 2D Perlin Noise\n  module.perlin2 = function(x, y) {\n    // Find unit grid cell containing point\n    var X = Math.floor(x), Y = Math.floor(y);\n    // Get relative xy coordinates of point within that cell\n    x = x - X; y = y - Y;\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255; Y = Y & 255;\n\n    // Calculate noise contributions from each of the four corners\n    var n00 = gradP[X+perm[Y]].dot2(x, y);\n    var n01 = gradP[X+perm[Y+1]].dot2(x, y-1);\n    var n10 = gradP[X+1+perm[Y]].dot2(x-1, y);\n    var n11 = gradP[X+1+perm[Y+1]].dot2(x-1, y-1);\n\n    // Compute the fade curve value for x\n    var u = fade(x);\n\n    // Interpolate the four results\n    return lerp(\n        lerp(n00, n10, u),\n        lerp(n01, n11, u),\n       fade(y));\n  };\n\n  // 3D Perlin Noise\n  module.perlin3 = function(x, y, z) {\n    // Find unit grid cell containing point\n    var X = Math.floor(x), Y = Math.floor(y), Z = Math.floor(z);\n    // Get relative xyz coordinates of point within that cell\n    x = x - X; y = y - Y; z = z - Z;\n    // Wrap the integer cells at 255 (smaller integer period can be introduced here)\n    X = X & 255; Y = Y & 255; Z = Z & 255;\n\n    // Calculate noise contributions from each of the eight corners\n    var n000 = gradP[X+  perm[Y+  perm[Z  ]]].dot3(x,   y,     z);\n    var n001 = gradP[X+  perm[Y+  perm[Z+1]]].dot3(x,   y,   z-1);\n    var n010 = gradP[X+  perm[Y+1+perm[Z  ]]].dot3(x,   y-1,   z);\n    var n011 = gradP[X+  perm[Y+1+perm[Z+1]]].dot3(x,   y-1, z-1);\n    var n100 = gradP[X+1+perm[Y+  perm[Z  ]]].dot3(x-1,   y,   z);\n    var n101 = gradP[X+1+perm[Y+  perm[Z+1]]].dot3(x-1,   y, z-1);\n    var n110 = gradP[X+1+perm[Y+1+perm[Z  ]]].dot3(x-1, y-1,   z);\n    var n111 = gradP[X+1+perm[Y+1+perm[Z+1]]].dot3(x-1, y-1, z-1);\n\n    // Compute the fade curve value for x, y, z\n    var u = fade(x);\n    var v = fade(y);\n    var w = fade(z);\n\n    // Interpolate\n    return lerp(\n        lerp(\n          lerp(n000, n100, u),\n          lerp(n001, n101, u), w),\n        lerp(\n          lerp(n010, n110, u),\n          lerp(n011, n111, u), w),\n       v);\n  };\n\n})(this);\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('WebGl')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(!_vm.hidden)?_c('table',[_c('tr',[_c('td',[_vm._v(\"Step 1:\")]),_c('td',{attrs:{\"colspan\":\"2\"}},[_c('button',{on:{\"click\":_vm.pickFile}},[_vm._v(\"File\")]),_vm._v(\" or \"),_c('button',{on:{\"click\":_vm.enableMic}},[_vm._v(\"Mic\")])])]),_c('tr',[_c('td',[_vm._v(\"Step 2:\")]),_c('td',{attrs:{\"colspan\":\"2\"}},[_c('button',{on:{\"click\":_vm.enableVr}},[_vm._v(\"Enter VR\")]),_vm._v(\" or \"),_c('button',{on:{\"click\":_vm.hideTable}},[_vm._v(\"Hide\")])])]),_vm._m(0),_vm._m(1),_c('tr',[_c('td',[_vm._v(\"Blur:\")]),_c('td',[_c('vue-slider',{staticStyle:{\"width\":\"100%\"},attrs:{\"min-range\":1,\"max-range\":100},model:{value:(_vm.blurTransition),callback:function ($$v) {_vm.blurTransition=$$v},expression:\"blurTransition\"}})],1),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.blurPeriod),expression:\"blurPeriod\"}],staticStyle:{\"width\":\"32px\"},attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.blurPeriod)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.blurPeriod=$event.target.value}}})])]),_c('tr',[_c('td',[_vm._v(\"Cubes:\")]),_c('td',[_c('vue-slider',{staticStyle:{\"width\":\"100%\"},attrs:{\"min-range\":1,\"max-range\":100},model:{value:(_vm.cubesTransition),callback:function ($$v) {_vm.cubesTransition=$$v},expression:\"cubesTransition\"}})],1),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cubesPeriod),expression:\"cubesPeriod\"}],staticStyle:{\"width\":\"32px\"},attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.cubesPeriod)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.cubesPeriod=$event.target.value}}})])]),_c('tr',[_c('td',[_vm._v(\"Cylinders:\")]),_c('td',[_c('vue-slider',{staticStyle:{\"width\":\"100%\"},attrs:{\"min-range\":1,\"max-range\":100},model:{value:(_vm.cylindersTransition),callback:function ($$v) {_vm.cylindersTransition=$$v},expression:\"cylindersTransition\"}})],1),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.cylindersPeriod),expression:\"cylindersPeriod\"}],staticStyle:{\"width\":\"32px\"},attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.cylindersPeriod)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.cylindersPeriod=$event.target.value}}})])]),_c('tr',[_c('td',[_vm._v(\"Hexagons:\")]),_c('td',[_c('vue-slider',{staticStyle:{\"width\":\"100%\"},attrs:{\"min-range\":1,\"max-range\":100},model:{value:(_vm.hexagonsTransition),callback:function ($$v) {_vm.hexagonsTransition=$$v},expression:\"hexagonsTransition\"}})],1),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.hexagonsPeriod),expression:\"hexagonsPeriod\"}],staticStyle:{\"width\":\"32px\"},attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.hexagonsPeriod)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.hexagonsPeriod=$event.target.value}}})])]),_c('tr',[_c('td',[_vm._v(\"Mandala:\")]),_c('td',[_c('vue-slider',{staticStyle:{\"width\":\"100%\"},attrs:{\"min-range\":1,\"max-range\":100},model:{value:(_vm.mandalaTransition),callback:function ($$v) {_vm.mandalaTransition=$$v},expression:\"mandalaTransition\"}})],1),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.mandalaPeriod),expression:\"mandalaPeriod\"}],staticStyle:{\"width\":\"32px\"},attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.mandalaPeriod)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.mandalaPeriod=$event.target.value}}})])]),_c('tr',[_c('td',[_vm._v(\"Model:\")]),_c('td',[_c('vue-slider',{staticStyle:{\"width\":\"100%\"},attrs:{\"min-range\":1,\"max-range\":100},model:{value:(_vm.modelTransition),callback:function ($$v) {_vm.modelTransition=$$v},expression:\"modelTransition\"}})],1),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.modelPeriod),expression:\"modelPeriod\"}],staticStyle:{\"width\":\"32px\"},attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.modelPeriod)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.modelPeriod=$event.target.value}}})])]),_c('tr',[_c('td',[_vm._v(\"Neural:\")]),_c('td',[_c('vue-slider',{staticStyle:{\"width\":\"100%\"},attrs:{\"min-range\":1,\"max-range\":100},model:{value:(_vm.neuralTransition),callback:function ($$v) {_vm.neuralTransition=$$v},expression:\"neuralTransition\"}})],1),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.neuralPeriod),expression:\"neuralPeriod\"}],staticStyle:{\"width\":\"32px\"},attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.neuralPeriod)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.neuralPeriod=$event.target.value}}})])]),_c('tr',[_c('td',[_vm._v(\"Pyramids:\")]),_c('td',[_c('vue-slider',{staticStyle:{\"width\":\"100%\"},attrs:{\"min-range\":1,\"max-range\":100},model:{value:(_vm.pyramidsTransition),callback:function ($$v) {_vm.pyramidsTransition=$$v},expression:\"pyramidsTransition\"}})],1),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.pyramidsPeriod),expression:\"pyramidsPeriod\"}],staticStyle:{\"width\":\"32px\"},attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.pyramidsPeriod)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.pyramidsPeriod=$event.target.value}}})])]),_c('tr',[_c('td',[_vm._v(\"Radial:\")]),_c('td',[_c('vue-slider',{staticStyle:{\"width\":\"100%\"},attrs:{\"min-range\":1,\"max-range\":100},model:{value:(_vm.radialTransition),callback:function ($$v) {_vm.radialTransition=$$v},expression:\"radialTransition\"}})],1),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.radialPeriod),expression:\"radialPeriod\"}],staticStyle:{\"width\":\"32px\"},attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.radialPeriod)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.radialPeriod=$event.target.value}}})])]),_c('tr',[_c('td',[_vm._v(\"RGB:\")]),_c('td',[_c('vue-slider',{staticStyle:{\"width\":\"100%\"},attrs:{\"min-range\":1,\"max-range\":100},model:{value:(_vm.rgbTransition),callback:function ($$v) {_vm.rgbTransition=$$v},expression:\"rgbTransition\"}})],1),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.rgbPeriod),expression:\"rgbPeriod\"}],staticStyle:{\"width\":\"32px\"},attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.rgbPeriod)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.rgbPeriod=$event.target.value}}})])]),_c('tr',[_c('td',[_vm._v(\"Stars:\")]),_c('td',[_c('vue-slider',{staticStyle:{\"width\":\"100%\"},attrs:{\"min-range\":1,\"max-range\":100},model:{value:(_vm.starsTransition),callback:function ($$v) {_vm.starsTransition=$$v},expression:\"starsTransition\"}})],1),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.starsPeriod),expression:\"starsPeriod\"}],staticStyle:{\"width\":\"32px\"},attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.starsPeriod)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.starsPeriod=$event.target.value}}})])]),_c('tr',[_c('td',[_vm._v(\"Torus:\")]),_c('td',[_c('vue-slider',{staticStyle:{\"width\":\"100%\"},attrs:{\"min-range\":1,\"max-range\":100},model:{value:(_vm.torusTransition),callback:function ($$v) {_vm.torusTransition=$$v},expression:\"torusTransition\"}})],1),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.torusPeriod),expression:\"torusPeriod\"}],staticStyle:{\"width\":\"32px\"},attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.torusPeriod)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.torusPeriod=$event.target.value}}})])]),_c('tr',[_c('td',[_vm._v(\"Water:\")]),_c('td',[_c('vue-slider',{staticStyle:{\"width\":\"100%\"},attrs:{\"min-range\":1,\"max-range\":100},model:{value:(_vm.waterTransition),callback:function ($$v) {_vm.waterTransition=$$v},expression:\"waterTransition\"}})],1),_c('td',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.waterPeriod),expression:\"waterPeriod\"}],staticStyle:{\"width\":\"32px\"},attrs:{\"type\":\"number\"},domProps:{\"value\":(_vm.waterPeriod)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.waterPeriod=$event.target.value}}})])])]):_vm._e(),_c('canvas',{attrs:{\"width\":_vm.canvasWidth,\"height\":_vm.canvasHeight,\"id\":\"glcanvas\"}}),_c('input',{ref:\"file\",staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"file\",\"type\":\"file\",\"name\":\"file\",\"accept\":\"audio/*\"},on:{\"change\":_vm.enableMusic}})])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('td',{attrs:{\"colspan\":\"3\"}},[_vm._v(\" Donate: \"),_c('ul',[_c('li',[_vm._v(\"BTC: 37z5ap84nNA1VMrF8QNJ6XYVGrKn1GopKH\")]),_c('li',[_vm._v(\"ETH: 0x13CBcCCA8910DdCc007aa73eed031E2C7eE1Bf62\")])])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('td',[_c('b',[_vm._v(\"Effect\")])]),_c('td',[_c('b',[_vm._v(\"Transition\")])]),_c('td',[_c('b',[_vm._v(\"Period\")])])])}]\n\nexport { render, staticRenderFns }","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nin vec4 aVertexPosition;\\nin vec4 aVertexNormal;\\nin vec2 aTextureCoordinates;\\n\\nuniform int uDrawMode;\\nuniform float uDrawVariant;\\nuniform float uEffectAmount;\\nuniform sampler2D uAudioSampler;\\n\\nuniform mat4 uViewMatrix;\\nuniform mat4 uOrthoMatrix;\\nuniform mat4 uProjectionMatrix;\\nuniform mat4 uModelMatrix;\\nuniform vec3 uLightDirection;\\nuniform float uTime;\\nuniform float uTimeShift;\\nuniform float uAnimationVelocity;\\nuniform float uAudioLevel;\\n\\nout vec4 vColor;\\nout vec3 vNormal;\\nout vec3 vLightDirection;\\nout vec2 vTextureCoordinates;\\nout vec4 vPosition;\\n\\n//#COMMON\\n//#PERLIN\\n//#HSL2RGB\\n\\nvoid main(void) {\\n    vec2 tTextureCoordinates = aTextureCoordinates;\\n    vColor = vec4(1.0,1.0,1.0,1.0);\\n    vPosition = uModelMatrix*aVertexPosition;\\n\\n    if(uDrawMode <= DRAW_MODE_2D) {\\n        gl_Position = uOrthoMatrix * vPosition;\\n        vTextureCoordinates.x = tTextureCoordinates.x;\\n        vTextureCoordinates.y = 1.0 - tTextureCoordinates.y;\\n        return;\\n    }\\n    else {\\n        mat4 viewProjectionMatrix = uProjectionMatrix * uViewMatrix;\\n        float saturation = 4.0;\\n\\n        if (uDrawMode == DRAW_MODE_3D_CYLINDER) {\\n            float cx = aTextureCoordinates.x;\\n            float cy = cos(aTextureCoordinates.y*2.0*PI);\\n\\n            float time = uTimeShift*uAnimationVelocity+uAudioLevel;\\n\\n            float timeGeometry = uTimeShift*uAnimationVelocity;\\n\\n            // COLOR\\n            float colorVelocity = 0.5;// color changes quicker\\n            float colorFrequency = 0.2;// color is wider\\n            vColor.xyz = hsv2rgb(\\n                noise(vec4(cx*colorFrequency, cy*colorFrequency, time*colorVelocity, uDrawVariant)),\\n                1.0,\\n                1.0\\n            );\\n            vColor.w = 1.0;\\n\\n            // TEXTURE\\n            float textureNoiseVelocity = 0.2;\\n            float textureNoiseFrequency = 0.5;\\n            vec2 noiseTexture = vec2(\\n                noise(vec4(cx, cy, timeGeometry*textureNoiseVelocity, uDrawVariant)*textureNoiseFrequency),\\n                noise(vec4(uDrawVariant, cx, cy, timeGeometry*textureNoiseVelocity)*textureNoiseFrequency)\\n            );\\n            vec2 textureVelocity = vec2(-0.5, 0.1);\\n            float textureRotation = 0.5;\\n            float textureWaveSize = 0.4;\\n\\n            vec2 dTextureCoordinates = timeGeometry*textureVelocity + noiseTexture*textureWaveSize;\\n            dTextureCoordinates.y=textureRotation*sin(dTextureCoordinates.y);\\n            tTextureCoordinates += dTextureCoordinates;\\n\\n            // POSITION\\n            float displacementAmplitude = 16.0;\\n            float displacementFrequency = 0.05;\\n            float displacementVelocity = 0.05;\\n            vec4 displacement = displacementAmplitude * vec4(\\n                noise(vec3(uDrawVariant, vPosition.y*displacementFrequency, timeGeometry*displacementVelocity)),\\n                0.0,\\n                noise(vec3(uDrawVariant, timeGeometry*displacementVelocity, vPosition.y*displacementFrequency)),\\n                0.0\\n            );\\n            vPosition += displacement;\\n        } else if (uDrawMode == DRAW_MODE_3D_EDGES) {\\n            float cx = aTextureCoordinates.x;\\n            float cy = cos(aTextureCoordinates.y*PI);\\n            float time = uTime+uAudioLevel;\\n\\n            // COLOR\\n            float colorVelocity = 0.2;// color changes quicker\\n            float colorFrequency = 0.1;// color is wider\\n            vColor.xyz = hsv2rgb(\\n                noise(vec3(cx*colorFrequency, cy*colorFrequency, time*colorVelocity)),\\n                1.0,\\n                1.0\\n            );\\n            vColor.w = 1.0;\\n        } else if (uDrawMode == DRAW_MODE_3D_SKY) {\\n            float cx = 0.0;\\n            float cy = cos(aTextureCoordinates.y*PI*2.0);\\n            float time = uTime+uAudioLevel;\\n\\n\\n            // COLOR\\n            float colorVelocity = 0.2;// color changes quicker\\n            float colorFrequency = 0.5;// color is wider\\n            vColor.xyz = hsv2rgb(\\n                cos(noise(vec3(cy*colorFrequency, time*colorVelocity, 0.0))*PI*0.5),\\n                noise(vec3(0.0, cy*colorFrequency, time*colorVelocity))*saturation,\\n                1.0\\n            );\\n            vColor.w = 1.0;\\n        } else if (uDrawMode == DRAW_MODE_3D_BILLBOARD) {\\n            float angle = abs(atan(vPosition.z, vPosition.x))/PI;\\n            vec4 audio = texture(uAudioSampler, vec2(angle, 0.0));\\n            float time = uTime+uAudioLevel;\\n\\n            // COLOR\\n            float colorVelocity = 0.2;// color changes quicker\\n            float colorFrequency = 1.0;// color is wider\\n            vColor.xyz = hsv2rgb(\\n                noise(vec4(colorVelocity*angle, time*colorVelocity, 0.0, uDrawVariant)),\\n                1.0,\\n                1.0\\n            );\\n            vColor.w = 1.0;\\n\\n            // POSITION\\n            float displacementAmplitude = 16.0;\\n            float displacementFrequency = 0.1;\\n            float displacementVelocity = 2.0;\\n            vec4 displacement = displacementAmplitude * vec4(\\n                0.0,\\n                audio.x-0.5,\\n                0.0,\\n                0.0\\n            );\\n            vPosition += displacement;\\n\\n        } else if (uDrawMode == DRAW_MODE_3D_MANDALA) {\\n            vec4 audio = texture(uAudioSampler, vec2(0.0, 0.0));\\n            float cx = aTextureCoordinates.x;\\n            float cy = aTextureCoordinates.y;\\n            float time = uTime+uAudioLevel;\\n\\n            // COLOR\\n            float colorVelocity = 0.2;// color changes quicker\\n            float colorFrequency = 32.0;// color is wider\\n            vColor.xyz = hsv2rgb(\\n                noise(vec3(cx*colorFrequency, cy*colorFrequency, time*colorVelocity)),\\n                1.0,\\n                1.0\\n            );\\n            vColor.w = 1.0;\\n        } else if (uDrawMode == DRAW_MODE_3D_TORUS) {\\n            float angle = abs(atan(vPosition.z, vPosition.x))/PI;\\n            vec4 audio = texture(uAudioSampler, vec2(angle, 0.0));\\n            float cx = 0.0;\\n            float cy = angle;\\n            float time = uTime+uAudioLevel;\\n\\n            // COLOR\\n            float colorVelocity = 0.2;// color changes quicker\\n            float colorFrequency = 100.0;// color is wider\\n            vColor.xyz = hsv2rgb(\\n                noise(vec3(cx*colorFrequency, cy, time*colorVelocity)),\\n                1.0,\\n                1.0\\n            );\\n            vColor.w =1.0;\\n\\n            // POSITION\\n            float displacementAmplitude = 16.0;\\n            float displacementFrequency = 0.1;\\n            float displacementVelocity = 2.0;\\n            vec4 displacement = displacementAmplitude * vec4(\\n                0.0,\\n                audio.x-0.5,\\n                0.0,\\n                0.0\\n            );\\n            vPosition += displacement;\\n        } else if (uDrawMode == DRAW_MODE_3D_CUBE) {\\n            float angle = abs(atan(vPosition.z, vPosition.x))/PI;\\n            float cx = 0.0;\\n            float cy = angle;\\n            float time = uTime+uAudioLevel;\\n\\n            // COLOR\\n            float colorVelocity = 0.2;// color changes quicker\\n            float colorFrequency = 100.0;// color is wider\\n            vColor.xyz = hsv2rgb(\\n            noise(vec4(cx*colorFrequency, cy, time*colorVelocity, uDrawVariant)),\\n            1.0,\\n            1.0\\n            );\\n            vColor.w = 1.0;\\n        } else if (uDrawMode == DRAW_MODE_3D_PYRAMID) {\\n            float angle = abs(atan(vPosition.z, vPosition.x))/PI;\\n            float cx = 0.0;\\n            float cy = angle;\\n            float time = uTime+uAudioLevel;\\n\\n            // COLOR\\n            float colorVelocity = 0.2;// color changes quicker\\n            float colorFrequency = 100.0;// color is wider\\n                vColor.xyz = hsv2rgb(\\n                noise(vec4(cx*colorFrequency, cy, time*colorVelocity, uDrawVariant)),\\n                1.0,\\n                1.0\\n            );\\n            vColor.w = 1.0;\\n        } else if (uDrawMode == DRAW_MODE_3D_SPHERICAL_GRID) {\\n            float geometryVelocity = 0.2;// color changes quicker\\n            float geometryFrequency = 800.0;// color is wider\\n\\n            float colorVelocity = 0.2;// color changes quicker\\n            float colorFrequency = 0.4;// color is wider\\n            float angle = abs(atan(vPosition.z, vPosition.x))/PI;\\n            float time = uTime+uAudioLevel;\\n\\n            float n = noise(vec4(vPosition.x*geometryFrequency, vPosition.y*geometryFrequency, vPosition.z*geometryFrequency, time*geometryVelocity));\\n\\n            float gx = noise(vec4(vPosition.y*geometryFrequency, vPosition.x*geometryFrequency, vPosition.z*geometryFrequency, time*geometryVelocity));\\n            float gy = noise(vec4(vPosition.z*geometryFrequency, vPosition.x*geometryFrequency, vPosition.y*geometryFrequency, time*geometryVelocity));\\n            float gz = noise(vec4(vPosition.z*geometryFrequency, vPosition.y*geometryFrequency,vPosition.x*geometryFrequency, time*geometryVelocity));\\n\\n            float cx = noise(vec4(vPosition.y*colorFrequency, vPosition.x*colorFrequency, vPosition.z*colorFrequency, time*colorVelocity));\\n            float cy = noise(vec4(vPosition.z*colorFrequency, vPosition.x*colorFrequency, vPosition.y*colorFrequency, time*colorVelocity));\\n\\n            if(n<0.2){\\n                vColor = vec4(0.0);\\n            }else {\\n                vColor.xyz = hsv2rgb(vec3(cx, cy*0.25+0.75, 1.0));\\n                vColor.w = 1.0;\\n            }\\n\\n            // POSITION\\n            float displacementAmplitude = 0.5;\\n            float displacementFrequency = 0.1;\\n            float displacementVelocity = 2.0;\\n            vec4 displacement = displacementAmplitude * vec4(\\n                gx-0.5,\\n                gy-0.5,\\n                gz-0.5,\\n                0.0\\n            );\\n            vPosition += displacement;\\n        }else if (uDrawMode == DRAW_MODE_3D_HEXA_GRID) {\\n            float geometryVelocity = 0.2;// color changes quicker\\n            float geometryFrequency = 3.2;// color is wider\\n\\n            float colorVelocity = 0.2;// color changes quicker\\n            float colorFrequency = 0.8;// color is wider\\n            float angle = abs(atan(vPosition.z, vPosition.x))/PI;\\n            float time = uTime+uAudioLevel;\\n\\n            float n = noise(vec4(vPosition.x*geometryFrequency, vPosition.y*geometryFrequency, vPosition.z*geometryFrequency, time*geometryVelocity));\\n\\n            float gx = noise(vec4(vPosition.y*geometryFrequency, vPosition.x*geometryFrequency, vPosition.z*geometryFrequency, time*geometryVelocity));\\n            float gy = noise(vec4(vPosition.z*geometryFrequency, vPosition.x*geometryFrequency, vPosition.y*geometryFrequency, time*geometryVelocity));\\n            float gz = noise(vec4(vPosition.z*geometryFrequency, vPosition.y*geometryFrequency,vPosition.x*geometryFrequency, time*geometryVelocity));\\n\\n            float cx = noise(vec4(vPosition.y*colorFrequency, vPosition.x*colorFrequency, vPosition.z*colorFrequency, time*colorVelocity));\\n            float cy = noise(vec4(vPosition.z*colorFrequency, vPosition.x*colorFrequency, vPosition.y*colorFrequency, time*colorVelocity));\\n\\n            if(n<0.5){\\n                vColor = vec4(0.0);\\n            }else {\\n                vColor.xyz = hsv2rgb(vec3(cx, cy*0.25+0.75, 1.0));\\n                vColor.w = 1.0;\\n            }\\n\\n            // POSITION\\n            float displacementAmplitude = 0.1;\\n            float displacementFrequency = 0.1;\\n            float displacementVelocity = 2.0;\\n            vec4 displacement = displacementAmplitude * vec4(\\n                gx-0.5,\\n                gy-0.5,\\n                gz-0.5,\\n                0.0\\n            );\\n            vPosition += displacement;\\n        }\\n\\n            mat3 vNormalMatrix = transpose(inverse(mat3(uModelMatrix)));\\n        vNormal = normalize(vNormalMatrix * aVertexNormal.xyz);\\n        gl_Position = viewProjectionMatrix * vPosition;\\n        vTextureCoordinates = tTextureCoordinates;\\n    }\\n}\";","export default \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\n\\nuniform int uDrawMode;\\nuniform sampler2D uSampler[2];\\nuniform sampler2D uAudioSampler;\\nuniform float uEffectAmount;\\n\\nuniform bool uEnableLight;\\nuniform float uTime;\\nuniform float uTimeShift;\\nuniform float uAnimationVelocity;\\nuniform float uAudioLevel;\\nuniform vec3 uLightDirection;\\nuniform vec3 uCameraPosition;\\nuniform vec2 uCanvasSize;\\n\\nin vec3 vNormal;\\nin vec2 vTextureCoordinates;\\nin vec4 vColor;\\nin vec4 vPosition;\\n\\nout vec4 fragColor;\\n\\n//#COMMON\\n//#PERLIN\\n//#HSL2RGB\\n\\nvec4 alphaBlend(vec4 color){\\n    return vec4(color.x * color.w, color.y * color.w, color.z * color.w, color.w);\\n}\\n\\nvec3 getPositionAtCoords(vec2 pos, float t) {\\n    float height = noise(vec3(pos, t));\\n    return vec3(pos, height);\\n}\\n\\nvec3 getNormalAtPosition(vec2 position, float textureNoiseFrequency) {\\n    float textureNoiseVelocity = 1.0;\\n    vec2 d = 1.0/uCanvasSize;\\n\\n    vec3 p = getPositionAtCoords(textureNoiseFrequency*position, uTime*textureNoiseVelocity);\\n    vec3 a = getPositionAtCoords(textureNoiseFrequency*position+ vec2(0.0, d.y), uTime*textureNoiseVelocity);\\n    vec3 b = getPositionAtCoords(textureNoiseFrequency*position+ vec2(d.x, 0.0), uTime*textureNoiseVelocity);\\n    vec3 n = normalize(cross(b-p,a-p));\\n    return n;\\n}\\n\\nfloat toGrayScale(vec3 color){\\n    return max(color.x, max(color.y, color.z));\\n}\\n\\n\\nvec3 getPositionAtTexture(vec2 pos) {\\n    vec4 color = texture(uSampler[1], pos);\\n    float height = toGrayScale(color.xyz);\\n    return vec3(pos, height);\\n}\\n\\nvec3 getNormalAtTexture(vec2 pos) {\\n    vec2 d = 1.0/uCanvasSize;\\n    vec3 p = getPositionAtTexture(pos);\\n    vec3 a = getPositionAtTexture(pos+ vec2(0.0, d.y));\\n    vec3 b = getPositionAtTexture(pos+ vec2(d.x, 0.0));\\n    vec3 n = normalize(cross(b-p,a-p));\\n    return n;\\n}\\n\\nvoid main(void) {\\n    vec4 color = vec4(1.0, 1.0, 1.0, 1.0);\\n    vec2 textureCoordinates = vTextureCoordinates;\\n    bool skipEffect = false;\\n\\n    if (uDrawMode == DRAW_MODE_2D_BLUR) {\\n        vec4 maskColor = texture(uSampler[1], textureCoordinates);\\n        if (maskColor.x > 0.0) {\\n            vec4 sum = vec4(0.0);\\n            vec2 delta = 4.0/uCanvasSize;\\n            int count = 0;\\n            int size = 4;\\n            for (int i=-size; i <= size; ++i) {\\n                for (int j=-size; j <= size; ++j) {\\n                    sum += texture(uSampler[0], textureCoordinates+delta*vec2(i, j));\\n                    ++count;\\n                }\\n            }\\n            color = (sum / float(count))*uEffectAmount+(1.0 - uEffectAmount)*texture(uSampler[0], textureCoordinates);\\n            skipEffect=true;\\n        } else {\\n            color.w = 0.0;\\n        }\\n        fragColor = alphaBlend(color);\\n        return;\\n    } else if (uDrawMode == DRAW_MODE_3D_TORUS) {\\n        color = vColor;\\n    } else if (uDrawMode == DRAW_MODE_3D_EDGES) {\\n        color = texture(uSampler[0], textureCoordinates);\\n    } else if(uDrawMode == DRAW_MODE_2D_WATER){\\n        vec3 normal = getNormalAtPosition(textureCoordinates, 48.0)-0.5;\\n\\n        vec2 dist = (vec2(0.5)-textureCoordinates);\\n        float len = length(dist);\\n        float p2c = 2.0*len / sqrt(2.0);\\n        p2c*= p2c;\\n        p2c*= p2c;\\n\\n        color = texture(uSampler[0], textureCoordinates+normal.xy*p2c*uEffectAmount);\\n        color.xyz += p2c*uEffectAmount*0.5;\\n        skipEffect = true;\\n    } else if(uDrawMode == DRAW_MODE_2D_NORMAL){\\n        vec3 normal = getNormalAtTexture(textureCoordinates);\\n        vec2 delta = 32.0/uCanvasSize;\\n\\n        vec4 height = texture(uSampler[1], textureCoordinates);\\n        float superficialRefraction = 1.0 - toGrayScale(height.xyz);\\n\\n\\n        color = texture(uSampler[0], textureCoordinates+normal.xy*delta*uEffectAmount*superficialRefraction);\\n\\n        //color = texture(uSampler[1], textureCoordinates);\\n\\n        skipEffect = true;\\n    } else if(uDrawMode == DRAW_MODE_2D_SHIFT){\\n        float pixelShift = 8.0;\\n        vec2 shift = uEffectAmount*pixelShift/uCanvasSize;\\n\\n        vec4 t1 = texture(uSampler[0], textureCoordinates+shift*vec2(-0.5,-0.5));\\n        vec4 t2 = texture(uSampler[0], textureCoordinates+shift*vec2(1.0, 0.0));\\n        vec4 t3 = texture(uSampler[0], textureCoordinates+shift*vec2(0.0, 1.0));\\n\\n        color.xyz = vec3(t1.x, t2.y, t3.z);\\n        color.w = 1.0;\\n        skipEffect = true;\\n    } else if(uDrawMode == DRAW_MODE_2D_LENS){\\n        vec2 dist = (vec2(0.5)-textureCoordinates);\\n        float len = length(dist);\\n        float p2c = 2.0*len / sqrt(2.0);\\n        p2c*= p2c;\\n        p2c*= p2c;\\n\\n        color.xyz = texture(uSampler[0], textureCoordinates+dist*p2c*uEffectAmount).xyz;\\n        color.w = 1.0;\\n        skipEffect = true;\\n    } else if(uDrawMode == DRAW_MODE_2D_RADIAL){\\n        vec2 delta = 4.0/uCanvasSize;\\n\\n        vec2 dist = (vec2(0.5)-textureCoordinates);\\n        vec2 norm = normalize(dist);\\n\\n        float len = length(dist);\\n        float p2c = 2.0*len / sqrt(2.0);\\n        p2c*= p2c;\\n        p2c*= p2c;\\n\\n        int maxIters= 32;\\n        int iters = clamp(int( float(maxIters)*p2c*uEffectAmount ), 1, maxIters);\\n        vec4 sum = vec4(0.0);\\n        for(int i=0; i < iters; ++i){\\n            sum += texture(uSampler[0], textureCoordinates+norm*delta*float(i));\\n        }\\n        sum /= float(iters);\\n        color = sum;\\n        skipEffect = true;\\n    } else if (uDrawMode == DRAW_MODE_3D_SPHERICAL_GRID) {\\n        if(vColor.w < 0.95){\\n            color = vec4(0.0);\\n        }else {\\n            color = texture(uSampler[0], textureCoordinates)*vColor;\\n        }\\n    } else if (uDrawMode == DRAW_MODE_3D_HEXA_GRID) {\\n        if(vColor.w < 0.95){\\n            color = vec4(0.0);\\n        }else {\\n            color = texture(uSampler[0], textureCoordinates)*vColor;\\n        }\\n    } else {\\n        color = texture(uSampler[0], textureCoordinates)*vColor;\\n    }\\n\\n    vec3 normal = normalize(vNormal);\\n    if (uEnableLight) {\\n        float dotFactor = dot(normal, -uLightDirection);\\n        color = color*vec4(dotFactor, dotFactor, dotFactor, 1.0);\\n    }\\n\\n    if (uDrawMode == DRAW_MODE_2D_MIX){\\n        color *= 0.5;\\n        color.xyz += 0.3;\\n    }\\n    else if (uDrawMode == DRAW_MODE_3D_NO_EDGES_MASK || uDrawMode == DRAW_MODE_3D_EDGES) {\\n        vec3 vertexToCam = normalize(vPosition.xyz-uCameraPosition);\\n        float edgeDot = abs(dot(vertexToCam, normal));\\n        float edgeFactor = 0.3;\\n        if (uDrawMode == DRAW_MODE_3D_EDGES) {\\n            color = edgeDot < edgeFactor ? vColor: vec4(0.0);\\n        }else {\\n            color = edgeDot < edgeFactor ? vec4(0.0) : vec4(1.0);\\n        }\\n    }\\n\\n    if (uDrawMode == DRAW_MODE_3D_SKY || uDrawMode == DRAW_MODE_3D_BILLBOARD || uDrawMode == DRAW_MODE_3D_MANDALA) {\\n        color.xyz *= vColor.xyz;\\n    }\\n    if(!skipEffect) {\\n        color.w *= uEffectAmount;\\n    }\\n    fragColor = alphaBlend(color);\\n\\n}\";","export default \"//\\tClassic Perlin 3D Noise\\n//\\tby Stefan Gustavson\\n//\\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\\nvec4 fade(vec4 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\\nvec2 fade(vec2 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\\n\\nfloat cnoise(vec2 P){\\n  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\\n  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\\n  Pi = mod(Pi, 289.0); // To avoid truncation effects in permutation\\n  vec4 ix = Pi.xzxz;\\n  vec4 iy = Pi.yyww;\\n  vec4 fx = Pf.xzxz;\\n  vec4 fy = Pf.yyww;\\n  vec4 i = permute(permute(ix) + iy);\\n  vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; // 1/41 = 0.024...\\n  vec4 gy = abs(gx) - 0.5;\\n  vec4 tx = floor(gx + 0.5);\\n  gx = gx - tx;\\n  vec2 g00 = vec2(gx.x,gy.x);\\n  vec2 g10 = vec2(gx.y,gy.y);\\n  vec2 g01 = vec2(gx.z,gy.z);\\n  vec2 g11 = vec2(gx.w,gy.w);\\n  vec4 norm = 1.79284291400159 - 0.85373472095314 *\\n  vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\\n  g00 *= norm.x;\\n  g01 *= norm.y;\\n  g10 *= norm.z;\\n  g11 *= norm.w;\\n  float n00 = dot(g00, vec2(fx.x, fy.x));\\n  float n10 = dot(g10, vec2(fx.y, fy.y));\\n  float n01 = dot(g01, vec2(fx.z, fy.z));\\n  float n11 = dot(g11, vec2(fx.w, fy.w));\\n  vec2 fade_xy = fade(Pf.xy);\\n  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\\n  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\\n  return 2.3 * n_xy;\\n}\\n\\nfloat cnoise(vec3 P){\\n  vec3 Pi0 = floor(P); // Integer part for indexing\\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\\n  Pi0 = mod(Pi0, 289.0);\\n  Pi1 = mod(Pi1, 289.0);\\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = Pi0.zzzz;\\n  vec4 iz1 = Pi1.zzzz;\\n\\n  vec4 ixy = permute(permute(ix) + iy);\\n  vec4 ixy0 = permute(ixy + iz0);\\n  vec4 ixy1 = permute(ixy + iz1);\\n\\n  vec4 gx0 = ixy0 / 7.0;\\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\\n  gx0 = fract(gx0);\\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\\n  vec4 sz0 = step(gz0, vec4(0.0));\\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\\n\\n  vec4 gx1 = ixy1 / 7.0;\\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\\n  gx1 = fract(gx1);\\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\\n  vec4 sz1 = step(gz1, vec4(0.0));\\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\\n\\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\\n\\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\\n  g000 *= norm0.x;\\n  g010 *= norm0.y;\\n  g100 *= norm0.z;\\n  g110 *= norm0.w;\\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\\n  g001 *= norm1.x;\\n  g011 *= norm1.y;\\n  g101 *= norm1.z;\\n  g111 *= norm1.w;\\n\\n  float n000 = dot(g000, Pf0);\\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\\n  float n111 = dot(g111, Pf1);\\n\\n  vec3 fade_xyz = fade(Pf0);\\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\\n  return 2.2 * n_xyz;\\n}\\n\\nfloat cnoise(vec4 P){\\n  vec4 Pi0 = floor(P); // Integer part for indexing\\n  vec4 Pi1 = Pi0 + 1.0; // Integer part + 1\\n  Pi0 = mod(Pi0, 289.0);\\n  Pi1 = mod(Pi1, 289.0);\\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\\n  vec4 iz0 = vec4(Pi0.zzzz);\\n  vec4 iz1 = vec4(Pi1.zzzz);\\n  vec4 iw0 = vec4(Pi0.wwww);\\n  vec4 iw1 = vec4(Pi1.wwww);\\n\\n  vec4 ixy = permute(permute(ix) + iy);\\n  vec4 ixy0 = permute(ixy + iz0);\\n  vec4 ixy1 = permute(ixy + iz1);\\n  vec4 ixy00 = permute(ixy0 + iw0);\\n  vec4 ixy01 = permute(ixy0 + iw1);\\n  vec4 ixy10 = permute(ixy1 + iw0);\\n  vec4 ixy11 = permute(ixy1 + iw1);\\n\\n  vec4 gx00 = ixy00 / 7.0;\\n  vec4 gy00 = floor(gx00) / 7.0;\\n  vec4 gz00 = floor(gy00) / 6.0;\\n  gx00 = fract(gx00) - 0.5;\\n  gy00 = fract(gy00) - 0.5;\\n  gz00 = fract(gz00) - 0.5;\\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\\n  vec4 sw00 = step(gw00, vec4(0.0));\\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\\n\\n  vec4 gx01 = ixy01 / 7.0;\\n  vec4 gy01 = floor(gx01) / 7.0;\\n  vec4 gz01 = floor(gy01) / 6.0;\\n  gx01 = fract(gx01) - 0.5;\\n  gy01 = fract(gy01) - 0.5;\\n  gz01 = fract(gz01) - 0.5;\\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\\n  vec4 sw01 = step(gw01, vec4(0.0));\\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\\n\\n  vec4 gx10 = ixy10 / 7.0;\\n  vec4 gy10 = floor(gx10) / 7.0;\\n  vec4 gz10 = floor(gy10) / 6.0;\\n  gx10 = fract(gx10) - 0.5;\\n  gy10 = fract(gy10) - 0.5;\\n  gz10 = fract(gz10) - 0.5;\\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\\n  vec4 sw10 = step(gw10, vec4(0.0));\\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\\n\\n  vec4 gx11 = ixy11 / 7.0;\\n  vec4 gy11 = floor(gx11) / 7.0;\\n  vec4 gz11 = floor(gy11) / 6.0;\\n  gx11 = fract(gx11) - 0.5;\\n  gy11 = fract(gy11) - 0.5;\\n  gz11 = fract(gz11) - 0.5;\\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\\n  vec4 sw11 = step(gw11, vec4(0.0));\\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\\n\\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\\n\\n  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\\n  g0000 *= norm00.x;\\n  g0100 *= norm00.y;\\n  g1000 *= norm00.z;\\n  g1100 *= norm00.w;\\n\\n  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\\n  g0001 *= norm01.x;\\n  g0101 *= norm01.y;\\n  g1001 *= norm01.z;\\n  g1101 *= norm01.w;\\n\\n  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\\n  g0010 *= norm10.x;\\n  g0110 *= norm10.y;\\n  g1010 *= norm10.z;\\n  g1110 *= norm10.w;\\n\\n  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\\n  g0011 *= norm11.x;\\n  g0111 *= norm11.y;\\n  g1011 *= norm11.z;\\n  g1111 *= norm11.w;\\n\\n  float n0000 = dot(g0000, Pf0);\\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\\n  float n1111 = dot(g1111, Pf1);\\n\\n  vec4 fade_xyzw = fade(Pf0);\\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\\n  return 2.2 * n_xyzw;\\n}\\n\\n#define PERLIN_ITER 2\\n/*\\nfloat noise(vec4 p){\\n    float f = 1.0;\\n    float sum = 0.0;\\n    for(int i =0; i < PERLIN_ITER; ++i) {\\n      f *= 0.5;\\n      sum += f * cnoise(p);\\n      p *= 2.0;\\n    }\\n    sum += f * cnoise(p);\\n    return sum+0.5;\\n}\\n\\nfloat noise(vec3 p){\\n  float f = 1.0;\\n  float sum = 0.0;\\n  for(int i =0; i < PERLIN_ITER; ++i) {\\n    f *= 0.5;\\n    sum += f * cnoise(p);\\n    p *= 2.0;\\n  }\\n  sum += f * cnoise(p);\\n  return sum+0.5;\\n}\\n\\nfloat noise(vec2 p){\\n  float f = 1.0;\\n  float sum = 0.0;\\n  for(int i =0; i < PERLIN_ITER; ++i) {\\n    f *= 0.5;\\n    sum += f * cnoise(p);\\n    p *= 2.0;\\n  }\\n  sum += f * cnoise(p);\\n  return sum+0.5;\\n}\\n*/\\n\\nfloat noise(vec4 p){\\n  return cnoise(p);\\n}\\n\\nfloat noise(vec3 p){\\n  return cnoise(p);\\n}\\n\\nfloat noise(vec2 p){\\n  return cnoise(p);\\n}\";","export default \"float hue2rgb(float f1, float f2, float hue) {\\n    if (hue < 0.0)\\n    hue += 1.0;\\n    else if (hue > 1.0)\\n    hue -= 1.0;\\n    float res;\\n    if ((6.0 * hue) < 1.0)\\n    res = f1 + (f2 - f1) * 6.0 * hue;\\n    else if ((2.0 * hue) < 1.0)\\n    res = f2;\\n    else if ((3.0 * hue) < 2.0)\\n    res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\\n    else\\n    res = f1;\\n    return res;\\n}\\n\\nvec3 hsl2rgb(vec3 hsl) {\\n    vec3 rgb;\\n\\n    if (hsl.y == 0.0) {\\n        rgb = vec3(hsl.z); // Luminance\\n    } else {\\n        float f2;\\n\\n        if (hsl.z < 0.5)\\n        f2 = hsl.z * (1.0 + hsl.y);\\n        else\\n        f2 = hsl.z + hsl.y - hsl.y * hsl.z;\\n\\n        float f1 = 2.0 * hsl.z - f2;\\n\\n        rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));\\n        rgb.g = hue2rgb(f1, f2, hsl.x);\\n        rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));\\n    }\\n    return rgb;\\n}\\n\\nvec3 hsl2rgb(float h, float s, float l) {\\n    return hsl2rgb(vec3(h, s, l));\\n}\\n\\nvec3 hsv2rgb(vec3 c)\\n{\\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\nvec3 hsv2rgb(float h, float s, float l) {\\n    return hsv2rgb(vec3(h, s, l));\\n}\";","export default \"#define PI 3.1415926535897932384626433832795\\n// 2D MODES\\n#define DRAW_MODE_2D_NORMAL -9\\n#define DRAW_MODE_2D_WATER -8\\n#define DRAW_MODE_2D_SHIFT -7\\n#define DRAW_MODE_2D_RADIAL -6\\n#define DRAW_MODE_2D_LENS -5\\n#define DRAW_MODE_2D_BLUR -4\\n#define DRAW_MODE_2D_MIX -3\\n#define DRAW_MODE_2D -2\\n// 3D MODES\\n#define DRAW_MODE_3D_MASK -1\\n#define DRAW_MODE_3D_DEFAULT 0\\n#define DRAW_MODE_3D_SKY 1\\n#define DRAW_MODE_3D_CYLINDER 2\\n#define DRAW_MODE_3D_EDGES 3\\n#define DRAW_MODE_3D_NO_EDGES_MASK 4\\n#define DRAW_MODE_3D_BILLBOARD 5\\n#define DRAW_MODE_3D_TORUS 6\\n#define DRAW_MODE_3D_MANDALA 7\\n#define DRAW_MODE_3D_CUBE 8\\n#define DRAW_MODE_3D_SPHERICAL_GRID 9\\n#define DRAW_MODE_3D_HEXA_GRID 10\\n#define DRAW_MODE_3D_PYRAMID 11\";","// eslint-disable-next-line no-unused-vars\nimport WebXRPolyfill from \"webxr-polyfill\";\nimport * as glm from \"gl-matrix\";\n\nexport default {\n    TRANSPARENT: glm.vec4.fromValues(0.0, 0.0, 0.0, 0.0),\n    WHITE: glm.vec4.fromValues(1.0, 1.0, 1.0, 1.0),\n    BLACK: glm.vec4.fromValues(0.0, 0.0, 0.0, 1.0),\n\n    initShaderProgram: function (gl, vsSource, fsSource) {\n        const vertexShader = this.loadShader(gl, gl.VERTEX_SHADER, vsSource);\n        const fragmentShader = this.loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n\n        const shaderProgram = gl.createProgram();\n        gl.attachShader(shaderProgram, vertexShader);\n        gl.attachShader(shaderProgram, fragmentShader);\n        gl.linkProgram(shaderProgram);\n\n        if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n            alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\n            return null;\n        }\n\n        return shaderProgram;\n    },\n    loadShader: function (gl, type, source) {\n        const shader = gl.createShader(type);\n\n        gl.shaderSource(shader, source);\n        gl.compileShader(shader);\n\n        if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n            alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\n            gl.deleteShader(shader);\n            return null;\n        }\n\n        return shader;\n    },\n    createState: function (cleanDrawback, drawCallback, updateCallback) {\n        return {\n            time: 0,\n            delta: 0,\n            vrInitialized: false,\n            vrToggle: false,\n            vrSession: null,\n            vrSpace: null,\n            animation: null,\n            cleanDrawback: cleanDrawback,\n            drawCallback: drawCallback,\n            updateCallback: updateCallback,\n            vrSupported: false,\n            map: {},\n            tick: function (now) {\n                now *= 0.001;  // convert to seconds\n                this.delta = now - this.time;\n                this.time = now;\n            },\n            log: '',\n        };\n    },\n    loop: function (gl, state) {\n        let that = this;\n\n        // eslint-disable-next-line no-unused-vars\n        function onSessionEnded(event) {\n\n        }\n\n        function onSessionStarted(session) {\n            session.addEventListener('end', onSessionEnded);\n            session.updateRenderState({\n                // eslint-disable-next-line no-undef\n                baseLayer: new XRWebGLLayer(session, gl)\n            });\n            session.requestReferenceSpace('local').then(space => {\n                state.vrSession = session;\n                console.log(space);\n                // state.vrSpace =  space.getOffsetReferenceSpace(new XRRigidTransform(glm.vec3.fromValues(0,-1.60,0), glm.quat.create()) );\n                state.vrSpace = space;\n                if(state.animation) {\n                    cancelAnimationFrame(state.animation);\n                }\n\n                state.animation = session.requestAnimationFrame(render);\n            });\n            console.log(session);\n            return session;\n        }\n\n        function render(now, frame) {\n            if (state.vrToggle) {\n                state.vrToggle = false;\n                if (!state.vrInitialized) {\n                    state.vrInitialized = true;\n                    new WebXRPolyfill();\n                    if (navigator.xr) {\n                        navigator.xr.isSessionSupported('immersive-vr').then((supported) => {\n                            state.vrSupported = supported;\n                            navigator.xr.requestSession('immersive-vr').then(onSessionStarted);\n                        });\n                    }\n                }\n            }\n\n            let pose = null;\n            let session = null;\n\n            if (state.vrInitialized && frame) {\n                session = frame.session;\n                state.animation = session.requestAnimationFrame(render);\n                if (state.vrSpace && frame) {\n                    pose = frame.getViewerPose(state.vrSpace);\n                }\n            } else {\n                state.animation = requestAnimationFrame(render);\n            }\n\n            state.tick(now);\n            state.updateCallback(gl, state);\n\n            if (state.vrInitialized && frame) {\n                if (pose) {\n                    let layer = session ? session.renderState.baseLayer : null;\n                    state.cleanDrawback(gl, layer.framebuffer, that.TRANSPARENT);\n                    for (let i in pose.views) {\n                        let view = pose.views[i];\n                        let viewport = layer.getViewport(view);\n                        if(viewport.width > 0 && viewport.height>0){\n                            state.drawCallback(gl, viewport, state, view.transform.inverse.matrix, view.projectionMatrix, layer.framebuffer, i + 1);\n                        }\n                    }\n                }\n            } else {\n                let viewport = {\n                    width: gl.canvas.width,\n                    height: gl.canvas.height,\n                    x: 0,\n                    y: 0,\n                }\n                if (viewport.width && viewport.height) {\n                    state.cleanDrawback(gl, null, that.TRANSPARENT)\n                    state.drawCallback(gl, viewport, state, null, null, null, 0);\n                }\n            }\n        }\n\n        state.animation = requestAnimationFrame(render);\n    },\n    getProgramInfo: function (gl, shaderProgram) {\n        return {\n            program: shaderProgram,\n            time: 0,\n            attribLocations: {\n                vertexPosition: gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\n                vertexNormal: gl.getAttribLocation(shaderProgram, 'aVertexNormal'),\n                textureCoordinates: gl.getAttribLocation(shaderProgram, 'aTextureCoordinates'),\n            },\n            uniformLocations: {\n                projectionMatrix: gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\n                viewMatrix: gl.getUniformLocation(shaderProgram, 'uViewMatrix'),\n                modelMatrix: gl.getUniformLocation(shaderProgram, 'uModelMatrix'),\n                orthoMatrix: gl.getUniformLocation(shaderProgram, 'uOrthoMatrix'),\n                sampler: [\n                    gl.getUniformLocation(shaderProgram, 'uSampler[0]'),\n                    gl.getUniformLocation(shaderProgram, 'uSampler[1]'),\n                ],\n                enableLight: gl.getUniformLocation(shaderProgram, 'uEnableLight'),\n                drawMode: gl.getUniformLocation(shaderProgram, 'uDrawMode'),\n                drawVariant: gl.getUniformLocation(shaderProgram, 'uDrawVariant'),\n                time: gl.getUniformLocation(shaderProgram, 'uTime'),\n                timeShift: gl.getUniformLocation(shaderProgram, 'uTimeShift'),\n                animationVelocity: gl.getUniformLocation(shaderProgram, 'uAnimationVelocity'),\n                lightDirection: gl.getUniformLocation(shaderProgram, 'uLightDirection'),\n                cameraPosition: gl.getUniformLocation(shaderProgram, 'uCameraPosition'),\n                canvasSize: gl.getUniformLocation(shaderProgram, 'uCanvasSize'),\n                audioSampler: gl.getUniformLocation(shaderProgram, 'uAudioSampler'),\n                audioLevel: gl.getUniformLocation(shaderProgram, 'uAudioLevel'),\n                effectAmount: gl.getUniformLocation(shaderProgram, 'uEffectAmount'),\n            },\n        };\n    },\n    createArrayBuffers: function (gl, vertices, normals, texture_coordinates, indices, image) {\n        let indices_count = indices.length;\n\n        let vertex_buffer = gl.createBuffer();\n        let normal_buffer = gl.createBuffer();\n        let index_buffer = gl.createBuffer();\n        let texture_coordinates_buffer = gl.createBuffer();\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertex_buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, normal_buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(normals), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ARRAY_BUFFER, texture_coordinates_buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(texture_coordinates), gl.STATIC_DRAW);\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, index_buffer);\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, new Uint16Array(indices), gl.STATIC_DRAW);\n        return {\n            ic: indices_count,\n            vb: vertex_buffer,\n            nb: normal_buffer,\n            tb: texture_coordinates_buffer,\n            ib: index_buffer,\n            im: image\n        };\n    },\n    createBillboard: function (gl) {\n        let vertices = [1, -1, 0, 1, 1, 0, -1, 1, 0, -1, -1, 0];\n        let normals = [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1];\n        let texture_coordinates = [1, 1, 1, 0, 0, 0, 0, 1];\n        let indices = [0, 1, 2, 0, 2, 3];\n        return this.createArrayBuffers(gl, vertices, normals, texture_coordinates, indices, null);\n    },\n    getCylinderMesh: function (gl, image) {\n        let vertices = [];\n        let normals = [];\n        let texture_coordinates = [];\n        let indices = [];\n\n        const height = 128;\n        const definitionA = 16;\n\n        // eslint-disable-next-line no-unused-vars\n        const definitionH = 0.5;\n\n        for (let h = 0; h <= height; ++h) {\n            for (let a = 0; a <= definitionA; ++a) {\n                let x = Math.sin((2 * Math.PI * a / definitionA));\n                let y = h * definitionH;\n                let z = Math.cos((2 * Math.PI * a / definitionA));\n                vertices.push(x);\n                vertices.push(y);\n                vertices.push(z);\n                normals.push(x);\n                normals.push(0);\n                normals.push(z);\n                texture_coordinates.push(y * 0.5);\n                texture_coordinates.push(a / definitionA);\n            }\n        }\n        for (let h = 0; h < height; ++h) {\n            for (let a = 0; a < definitionA; ++a) {\n                indices.push((h + 0) * (definitionA + 1) + (a + 0));\n                indices.push((h + 0) * (definitionA + 1) + (a + 1));\n                indices.push((h + 1) * (definitionA + 1) + (a + 1));\n\n                indices.push((h + 0) * (definitionA + 1) + (a + 0));\n                indices.push((h + 1) * (definitionA + 1) + (a + 1));\n                indices.push((h + 1) * (definitionA + 1) + (a + 0));\n            }\n        }\n        return this.createArrayBuffers(gl, vertices, normals, texture_coordinates, indices, image);\n    },\n    getMesh: function (gl, mesh) {\n        let geometry = mesh.geometry;\n        if (!geometry || !geometry.attributes) {\n            return null;\n        }\n\n        let vertices = geometry.attributes.position.array;\n        let normals = geometry.attributes.normal.array;\n        let texture_coordinates = geometry.attributes.uv.array;\n        let indices = geometry.index.array;\n        let image = mesh.material.map ? mesh.material.map.image : null;\n\n        if(!vertices || !normals || !texture_coordinates || !indices\n            || !vertices.length || !normals.length || !texture_coordinates.length || !indices.length) {\n            console.error(\"Model error\");\n        }\n\n        return this.createArrayBuffers(gl, vertices, normals, texture_coordinates, indices, image ? this.loadImage(gl, image) : null);\n    },\n    getModel(gl, gltf) {\n        let group = [];\n        for (let c of gltf.scene.children) {\n            let m = this.getMesh(gl, c);\n            if (m != null) {\n                group.push(m);\n            }\n        }\n        return group;\n    },\n    enableAttribs: function (gl, programInfo) {\n        gl.enableVertexAttribArray(programInfo.attribLocations.vertexPosition);\n        gl.enableVertexAttribArray(programInfo.attribLocations.vertexNormal);\n        gl.enableVertexAttribArray(programInfo.attribLocations.textureCoordinates);\n    },\n    disableAttribs: function (gl, programInfo) {\n        gl.disableVertexAttribArray(programInfo.attribLocations.vertexPosition);\n        gl.disableVertexAttribArray(programInfo.attribLocations.vertexNormal);\n        gl.disableVertexAttribArray(programInfo.attribLocations.textureCoordinates);\n    },\n    bindTexture(gl, uniform, position, texture) {\n        gl.uniform1i(uniform, position);\n        gl.activeTexture(gl.TEXTURE0 + position);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n    },\n    drawMesh: function (gl, programInfo, mesh, mode, image0, image1) {\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, mesh.vb);\n        gl.vertexAttribPointer(programInfo.attribLocations.vertexPosition, 3, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, mesh.nb);\n        gl.vertexAttribPointer(programInfo.attribLocations.vertexNormal, 3, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ARRAY_BUFFER, mesh.tb);\n        gl.vertexAttribPointer(programInfo.attribLocations.textureCoordinates, 2, gl.FLOAT, false, 0, 0);\n\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, mesh.ib);\n\n        if (!image0) {\n            image0 = mesh.im;\n        }\n        if (!image0) {\n            image0 = 0;\n        }\n        if (!image1) {\n            image1 = image0;\n        }\n\n        if (image0) {\n            this.bindTexture(gl, programInfo.uniformLocations.sampler[0], 0, image0);\n        }\n        if (image1) {\n            this.bindTexture(gl, programInfo.uniformLocations.sampler[1], 1, image1);\n        }\n\n        gl.drawElements(mode, mesh.ic, gl.UNSIGNED_SHORT, 0);\n    },\n    enableVr: function (state) {\n        state.vrInit = true;\n    },\n    isPowerOf2: function (value) {\n        return (value & (value - 1)) === 0;\n    },\n    generateMipmap: function (gl, image) {\n        if (this.isPowerOf2(image.width) && this.isPowerOf2(image.height)) {\n            gl.generateMipmap(gl.TEXTURE_2D);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.REPEAT);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.REPEAT);\n        } else {\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n            gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        }\n    },\n    initializeTexture(gl, texture) {\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        const pixel = new Uint8Array([0]);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.LUMINANCE, 1, 1, 0, gl.LUMINANCE, gl.UNSIGNED_BYTE, pixel);\n    },\n    loadAudio(gl, texture, width, data) {\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n\n        const level = 0;\n        const internalFormat = gl.LUMINANCE;\n        const height = 1;\n        const border = 0;\n        const srcFormat = gl.LUMINANCE;\n        const srcType = gl.UNSIGNED_BYTE;\n        gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, data);\n\n        //gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n      //  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n    },\n    loadImage: function (gl, image) {\n        const texture = gl.createTexture();\n        this.initializeTexture(gl, texture);\n        const level = 0;\n        const internalFormat = gl.RGBA;\n        const srcFormat = gl.RGBA;\n        const srcType = gl.UNSIGNED_BYTE;\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n        this.generateMipmap(gl, image);\n        return texture;\n    },\n    loadTexture: function (gl, url) {\n        const texture = gl.createTexture();\n        this.initializeTexture(gl, texture);\n\n        const level = 0;\n        const internalFormat = gl.RGBA;\n        const srcFormat = gl.RGBA;\n        const srcType = gl.UNSIGNED_BYTE;\n        const image = new Image();\n        let that = this;\n\n        image.onload = function () {\n            gl.bindTexture(gl.TEXTURE_2D, texture);\n            gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n            that.generateMipmap(gl, image);\n        };\n        image.src = url;\n\n        return texture;\n    },\n    TEMP_TO: glm.vec3.create(),\n    TEMP_UP: glm.vec3.create(),\n    TEMP_RIGHT: glm.vec3.create(),\n\n    getBillboardMatrix: function (matrix, position, cameraPos, cameraUp) {\n        let to = glm.vec3.subtract(glm.vec3.set(this.TEMP_TO, 0,0,0), cameraPos, position);\n        let look = glm.vec3.normalize(to, to);\n        let right = glm.vec3.cross(glm.vec3.set(this.TEMP_RIGHT, 0,0,0), cameraUp, look);\n        let up2 = glm.vec3.cross(glm.vec3.set(this.TEMP_UP, 0,0,0), look, right);\n\n        return glm.mat4.set(matrix,\n            right[0], right[1], right[2], 0,\n            up2[0], up2[1], up2[2], 0,\n            look[0], look[1], look[2], 0,\n            position[0], position[1], position[2], 1\n        );\n    },\n    createFramebuffer: function (gl, width, height, format) {\n        // texture\n        let maskTexture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, maskTexture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, format, width, height, 0, format, gl.UNSIGNED_BYTE, null);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n        // render\n        let maskRenderBuffer = gl.createRenderbuffer();\n        gl.bindRenderbuffer(gl.RENDERBUFFER, maskRenderBuffer);\n        gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, width, height);\n\n        // frame\n        let maskFramebuffer = gl.createFramebuffer();\n        gl.bindFramebuffer(gl.FRAMEBUFFER, maskFramebuffer);\n        gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, maskTexture, 0);\n        gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, maskRenderBuffer);\n\n        let e = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\n        if (gl.FRAMEBUFFER_COMPLETE !== e) {\n            console.error(\"ERROR\", e.toString());\n        }\n        // Unbind the buffer object\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n        return {\n            texture: maskTexture,\n            render: maskRenderBuffer,\n            frame: maskFramebuffer,\n            width: width,\n            height: height\n        };\n    },\n    deleteFramebuffer: function (gl, obj) {\n        if (obj.frame) gl.deleteFramebuffer(obj.frame);\n        if (obj.texture) gl.deleteTexture(obj.texture);\n        if (obj.render) gl.deleteRenderbuffer(obj.render);\n    },\n    getFramebufferTexture: function (gl) {\n        return gl.getFramebufferAttachmentParameter(gl.READ_FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME);\n    },\n    toggleVR(gl, state) {\n        state.vrToggle = true;\n    },\n    copyBuffer(gl, src, dest) {\n        gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, dest.frame);\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, src.frame);\n        gl.blitFramebuffer(0, 0, src.width, src.height, 0, 0, dest.width, dest.height, gl.COLOR_BUFFER_BIT, gl.NEAREST);\n\n        gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n        gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n    }\n}","export default {\n\n    initializeArray: function (array) {\n        for (let i = 0; i < array.length; ++i) {\n            array[i] = 0;\n        }\n    },\n\n    myNoise3d: function (noise, x, y, z, l) {\n        var v = noise.simplex3(x / l, y / l, z / l);\n        return 0.5 * (v + 1);\n    },\n\n    myNoise3dx: function (noise, x, y, z, l) {\n        var il = l;\n        var pe = 1.0;\n        var re = 0;\n        for (var i = 0; i < 7; ++i) {\n            pe *= 0.5;\n            re += pe * this.myNoise3d(noise, x, y, z, il);\n            il *= 0.5;\n        }\n        re += pe * this.myNoise3d(noise, x, y, z, il);\n\n        return re;\n    },\n    max(array) {\n        let m = 0;\n        for (let i = 0; i < array.length; ++i) {\n            m = Math.max(m, array[i]);\n        }\n        return m;\n    }\n}","<template>\n    <div>\n        <table v-if=\"!hidden\">\n            <tr>\n                <td>Step 1:</td>\n                <td colspan=\"2\">\n                    <button v-on:click=\"pickFile\" >File</button>\n                    or\n                    <button v-on:click=\"enableMic\">Mic</button>\n                </td>\n            </tr>\n            <tr>\n                <td>Step 2:</td>\n                <td colspan=\"2\">\n                    <button v-on:click=\"enableVr\" >Enter VR</button>\n                    or\n                    <button v-on:click=\"hideTable\" >Hide</button>\n                </td>\n            </tr>\n            <tr>\n                <td colspan=\"3\">\n                    Donate:\n                    <ul>\n                        <li>BTC: 37z5ap84nNA1VMrF8QNJ6XYVGrKn1GopKH</li>\n                        <li>ETH: 0x13CBcCCA8910DdCc007aa73eed031E2C7eE1Bf62</li>\n                    </ul>\n                </td>\n            </tr>\n            <tr>\n                <td><b>Effect</b></td>\n                <td><b>Transition</b></td>\n                <td><b>Period</b></td>\n            </tr>\n\n            <tr>\n                <td>Blur:</td>\n                <td><vue-slider v-model=\"blurTransition\" :min-range=\"1\" :max-range=\"100\" style=\"width: 100%\" ></vue-slider></td>\n                <td><input type=\"number\" v-model=\"blurPeriod\" style=\"width: 32px\"></td>\n            </tr>\n            <tr>\n                <td>Cubes:</td>\n                <td><vue-slider v-model=\"cubesTransition\" :min-range=\"1\" :max-range=\"100\" style=\"width: 100%\" ></vue-slider></td>\n                <td><input type=\"number\" v-model=\"cubesPeriod\" style=\"width: 32px\"></td>\n            </tr>\n            <tr>\n                <td>Cylinders:</td>\n                <td><vue-slider v-model=\"cylindersTransition\" :min-range=\"1\" :max-range=\"100\" style=\"width: 100%\" ></vue-slider></td>\n                <td><input type=\"number\" v-model=\"cylindersPeriod\" style=\"width: 32px\"></td>\n            </tr>\n            <tr>\n                <td>Hexagons:</td>\n                <td><vue-slider v-model=\"hexagonsTransition\" :min-range=\"1\" :max-range=\"100\" style=\"width: 100%\" ></vue-slider></td>\n                <td><input type=\"number\" v-model=\"hexagonsPeriod\" style=\"width: 32px\"></td>\n            </tr>\n            <tr>\n                <td>Mandala:</td>\n                <td><vue-slider v-model=\"mandalaTransition\" :min-range=\"1\" :max-range=\"100\" style=\"width: 100%\" ></vue-slider></td>\n                <td><input type=\"number\" v-model=\"mandalaPeriod\" style=\"width: 32px\"></td>\n            </tr>\n            <tr>\n                <td>Model:</td>\n                <td><vue-slider v-model=\"modelTransition\" :min-range=\"1\" :max-range=\"100\" style=\"width: 100%\" ></vue-slider></td>\n                <td><input type=\"number\" v-model=\"modelPeriod\" style=\"width: 32px\"></td>\n            </tr>\n            <tr>\n                <td>Neural:</td>\n                <td><vue-slider v-model=\"neuralTransition\" :min-range=\"1\" :max-range=\"100\" style=\"width: 100%\" ></vue-slider></td>\n                <td><input type=\"number\" v-model=\"neuralPeriod\" style=\"width: 32px\"></td>\n            </tr>\n            <tr>\n                <td>Pyramids:</td>\n                <td><vue-slider v-model=\"pyramidsTransition\" :min-range=\"1\" :max-range=\"100\" style=\"width: 100%\" ></vue-slider></td>\n                <td><input type=\"number\" v-model=\"pyramidsPeriod\" style=\"width: 32px\"></td>\n            </tr>\n            <tr>\n                <td>Radial:</td>\n                <td><vue-slider v-model=\"radialTransition\" :min-range=\"1\" :max-range=\"100\" style=\"width: 100%\" ></vue-slider></td>\n                <td><input type=\"number\" v-model=\"radialPeriod\" style=\"width: 32px\"></td>\n            </tr>\n            <tr>\n                <td>RGB:</td>\n                <td><vue-slider v-model=\"rgbTransition\" :min-range=\"1\" :max-range=\"100\" style=\"width: 100%\" ></vue-slider></td>\n                <td><input type=\"number\" v-model=\"rgbPeriod\" style=\"width: 32px\"></td>\n            </tr>\n            <tr>\n                <td>Stars:</td>\n                <td><vue-slider v-model=\"starsTransition\" :min-range=\"1\" :max-range=\"100\" style=\"width: 100%\" ></vue-slider></td>\n                <td><input type=\"number\" v-model=\"starsPeriod\" style=\"width: 32px\"></td>\n            </tr>\n            <tr>\n                <td>Torus:</td>\n                <td><vue-slider v-model=\"torusTransition\" :min-range=\"1\" :max-range=\"100\" style=\"width: 100%\" ></vue-slider></td>\n                <td><input type=\"number\" v-model=\"torusPeriod\" style=\"width: 32px\"></td>\n            </tr>\n            <tr>\n                <td>Water:</td>\n                <td><vue-slider v-model=\"waterTransition\" :min-range=\"1\" :max-range=\"100\" style=\"width: 100%\" ></vue-slider></td>\n                <td><input type=\"number\" v-model=\"waterPeriod\" style=\"width: 32px\"></td>\n            </tr>\n\n        </table>\n        <canvas v-bind:width=\"canvasWidth\" v-bind:height=\"canvasHeight\" id=\"glcanvas\"></canvas>\n        <input id=\"file\" ref=\"file\" style=\"display: none\" v-on:change=\"enableMusic\" type=\"file\" name=\"file\" accept=\"audio/*\">\n    </div>\n</template>\n\n<script>\n    /* eslint-disable no-unused-vars */\n    const DEBUG = false;\n    // 2D MODES\n    const DRAW_MODE_2D_NORMAL= -9\n    const DRAW_MODE_2D_WATER = -8\n    const DRAW_MODE_2D_SHIFT = -7\n    const DRAW_MODE_2D_RADIAL = -6\n    const DRAW_MODE_2D_LENS = -5\n    const DRAW_MODE_2D_BLUR = -4\n    const DRAW_MODE_2D_MIX = -3\n    const DRAW_MODE_2D = -2\n\n    // 3D MODES\n    const DRAW_MODE_3D_MASK = -1\n    const DRAW_MODE_3D_DEFAULT = 0\n    const DRAW_MODE_3D_SKY = 1\n    const DRAW_MODE_3D_CYLINDER = 2\n    const DRAW_MODE_3D_EDGES = 3\n    const DRAW_MODE_3D_NO_EDGES_MASK = 4\n    const DRAW_MODE_3D_BILLBOARD = 5\n    const DRAW_MODE_3D_TORUS = 6\n    const DRAW_MODE_3D_MANDALA = 7\n    const DRAW_MODE_3D_CUBE = 8\n    const DRAW_MODE_3D_SPHERICAL_GRID = 9\n    const DRAW_MODE_3D_HEXA_GRID = 10\n    const DRAW_MODE_3D_PYRAMID = 11\n    /* eslint-enable no-unused-vars */\n\n\n    import vertexShader from 'raw-loader!./vert.glsl';\n    import fragmentShader from 'raw-loader!./frag.glsl';\n    import perlinShader from 'raw-loader!./perlin.glsl';\n    import hsl2rgbShader from 'raw-loader!./hsl2rgb.glsl';\n    import commonShader from 'raw-loader!./common.glsl';\n\n    import webGl from '../../utils/webGl'\n    import webAudio from '../../utils/webAudio';\n    import perlin from '../../utils/perlin';\n\n    import * as glm from 'gl-matrix'\n    import GLTFLoader from 'three-gltf-loader';\n\n    import VueSlider from 'vue-slider-component'\n    import 'vue-slider-component/theme/default.css'\n\n    export default {\n        name: \"VrMusic\",\n        components: {\n            VueSlider\n        },\n        data() {\n            return {\n                canvasWidth: window.innerWidth,\n                canvasHeight: window.innerHeight,\n                state: null,\n                gl: null,\n                source: null,\n                isPlaying: false,\n                audioContext: null,\n                analyser: null,\n                freqArray: null,\n                dataArray: null,\n                fftSize: 512,\n                audioLevel: 0,\n                softAudioLevel: 0,\n                timeShift: 0,\n                hidden: false,\n\n                waterTransition: [80,100],\n                radialTransition: [80,100],\n                rgbTransition: [60,80],\n                blurTransition: [30,60],\n                cubesTransition: [50,70],\n                modelTransition: [40,50],\n                mandalaTransition: [40,60],\n                torusTransition: [40,60],\n                starsTransition: [40,60],\n                cylindersTransition: [40,60],\n                hexagonsTransition: [50,70],\n                pyramidsTransition: [50,70],\n                neuralTransition: [50,70],\n\n                waterPeriod: 16,\n                radialPeriod: 16,\n                rgbPeriod: 16,\n                blurPeriod: 8,\n                cubesPeriod: 8,\n                modelPeriod: 8,\n                mandalaPeriod: 8,\n                torusPeriod: 8,\n                starsPeriod: 8,\n                cylindersPeriod: 8,\n                hexagonsPeriod:8,\n                pyramidsPeriod: 8,\n                neuralPeriod: 8,\n            }\n        },\n        methods: {\n            enableVr() {\n                webGl.toggleVR(this.gl, this.state);\n            },\n            enableMic() {\n                function handleSound(stream) {\n                    this.audioContext = new AudioContext();\n                    this.analyser = this.audioContext.createAnalyser();\n                    this.analyser.fftSize = this.fftSize;\n\n                    this.source = this.audioContext.createMediaStreamSource(stream);\n                    this.source.connect(this.analyser);\n                    this.isPlaying = true;\n                }\n                if(!this.audioContext) {\n                    navigator.getUserMedia = (navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia);\n                    navigator.mediaDevices.getUserMedia({ audio: true, video: false }).then(handleSound.bind(this));\n                }\n            },\n            hideTable() {\n                this.hidden = true;\n            },\n            pickFile(){\n                this.$refs.file.click();\n            },\n            enableMusic(event){\n                this.audioContext = new AudioContext();\n                this.analyser = this.audioContext.createAnalyser();\n                this.analyser.fftSize = this.fftSize;\n\n                let file = event.target.files[0];\n                if (file) {\n                    var reader = new FileReader();\n                    reader.readAsArrayBuffer(file);\n                    reader.onload = function(e) {\n                        let data = e.target.result;\n                        this.audioContext.decodeAudioData(data, function(buffer) {\n                            this.source = this.audioContext.createBufferSource();\n                            this.source.buffer = buffer;\n                            this.source.loop = true;\n                            this.source.start(0);\n                            this.source.connect(this.analyser);\n                            this.analyser.connect(this.audioContext.destination);\n                        }.bind(this));\n                    }.bind(this);\n                }\n\n            }\n        },\n        mounted() {\n            const canvas = document.querySelector('#glcanvas');\n            const gl = canvas.getContext('webgl2', {xrCompatible: true});\n            this.gl = gl;\n            canvas.addEventListener(\"contextmenu\", (event) => {\n                event.preventDefault();\n            });\n            window.addEventListener(\"resize\", function() {\n                this.canvasWidth= window.innerWidth;\n                this.canvasHeight= window.innerHeight;\n                console.log(this);\n            }.bind(this));\n\n            let fShader = fragmentShader\n                .replace(\"//#PERLIN\", perlinShader)\n                .replace(\"//#COMMON\", commonShader)\n                .replace(\"//#HSL2RGB\", hsl2rgbShader);\n            let vShader = vertexShader\n                .replace(\"//#PERLIN\", perlinShader)\n                .replace(\"//#COMMON\", commonShader)\n                .replace(\"//#HSL2RGB\", hsl2rgbShader);\n\n\n            const shaderProgram = webGl.initShaderProgram(gl, vShader, fShader);\n            gl.useProgram(shaderProgram);\n            const programInfo = webGl.getProgramInfo(gl, shaderProgram);\n\n            let lightDirection = glm.vec3.fromValues(-1.0, -1.0, -1.0);\n            glm.vec3.normalize(lightDirection, lightDirection);\n\n            let orthoMatrix = glm.mat4.ortho(glm.mat4.create(), -1, 1, -1, 1, -1.0, 1.0);\n            gl.uniformMatrix4fv(programInfo.uniformLocations.orthoMatrix, false, orthoMatrix);\n\n            gl.enable(gl.BLEND);\n            gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\n            // *************\n            // load textures\n            // *************\n            let pixel = webGl.loadTexture(gl, \"textures/pixel.png\");\n            let patternTexture = webGl.loadTexture(gl, \"textures/pattern.png\");\n            let cylinderMesh = webGl.getCylinderMesh(gl, patternTexture);\n            let flareTexture = webGl.loadTexture(gl, \"textures/flare.png\");\n            let mandalaTexture = webGl.loadTexture(gl, \"textures/mandala.png\");\n            let mandalaMaskTexture = webGl.loadTexture(gl, \"textures/mandala_mask.png\");\n            let hexaSphereTexture = webGl.loadTexture(gl, \"textures/hexa_texture.png\");\n            let hexaMaskTexture = webGl.loadTexture(gl, \"textures/hexa_mask.png\");\n            let billboardMesh = webGl.createBillboard(gl);\n\n            // **********************\n            // initialize audio state\n            // **********************\n            let audioTexture = gl.createTexture();\n            this.freqArray = new Uint8Array(this.fftSize);\n            this.dataArray = new Uint8Array(this.fftSize);\n            webAudio.initializeArray(this.freqArray);\n            webAudio.initializeArray(this.dataArray);\n            webGl.initializeTexture(gl, audioTexture);\n\n            perlin.noise.seed(Math.random());\n\n\n            // ***********\n            // load models\n            // ***********\n            let mandalaModel = null;\n            let statueModel = null;\n            let spaceModel = null;\n            let torusModel = null;\n            let cubeModel = null;\n            let sphereModel = null;\n            let hexaModel = null;\n            let pyramidModel = null;\n\n            const loader = new GLTFLoader();\n            loader.load(\"models/ganesha.gltf\", gltf => {\n                statueModel = webGl.getModel(gl, gltf);\n            });\n            loader.load(\"models/space.gltf\", gltf => {\n                spaceModel = webGl.getModel(gl, gltf);\n            });\n            loader.load(\"models/mandala.gltf\", gltf => {\n                mandalaModel = webGl.getModel(gl, gltf);\n            });\n            loader.load(\"models/torus.gltf\", gltf => {\n                torusModel = webGl.getModel(gl, gltf);\n            });\n            loader.load(\"models/cube.gltf\", gltf => {\n                cubeModel = webGl.getModel(gl, gltf);\n            });\n            loader.load(\"models/sphere.gltf\", gltf => {\n                sphereModel = webGl.getModel(gl, gltf);\n            });\n            loader.load(\"models/hexa.gltf\", gltf => {\n                hexaModel = webGl.getModel(gl, gltf);\n            });\n            loader.load(\"models/pyramid.gltf\", gltf => {\n                pyramidModel = webGl.getModel(gl, gltf);\n            });\n\n            // *******************\n            // temporary variables\n            // *******************\n            let TEMP_UP = glm.vec3.create();\n            let TEMP_EYE = glm.vec3.create();\n            let TEMP_CENTER = glm.vec3.create();\n            let TEMP_POSITION = glm.vec3.create();\n            let TEMP_SCALE = glm.vec3.create();\n            let TEMP_DIRECTION = glm.vec3.create();\n            let TEMP_VIEW = glm.mat4.create();\n            let TEMP_MODEL = glm.mat4.create();\n            let TEMP_PROJECTION = glm.mat4.create();\n            let cameraPosition = glm.vec3.create();\n            let modelPosition = glm.vec3.fromValues(0,0,-6);\n\n\n            // ********\n            // fun zone\n            // ********\n\n\n            function clamp(val, min, max) {\n                return val <min? min : val> max ? max: val;\n            }\n\n            function lerp(val, min, max) {\n                if(val < min) {\n                    return 0.0;\n                } else if(val>= max){\n                    return 1.0;\n                }\n                return clamp( (val-min)/(max - min) , 0.0 , 1.0);\n            }\n\n            // eslint-disable-next-line no-unused-vars\n            function update(gl, state) {\n                if(this.audioContext) {\n                    if (this.analyser) {\n                        this.analyser.getByteTimeDomainData(this.dataArray);\n                        webGl.loadAudio(gl,audioTexture, this.fftSize, this.dataArray);\n                        webGl.bindTexture(gl, programInfo.uniformLocations.audioSampler, 2, audioTexture);\n                        this.audioLevel = 2.0*( webAudio.max(this.dataArray) / 255.0 - 0.5);\n                        let timeToConverge = 0.25;\n                        let amountToShift = clamp(state.delta / timeToConverge, 0.0, 1.0);\n                        this.softAudioLevel = (1.0-amountToShift)*this.softAudioLevel + amountToShift*this.audioLevel;\n                    }\n                }\n            }\n\n            // eslint-disable-next-line no-unused-vars\n            function clean(gl, framebuffer, color) {\n                gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n                gl.clearColor(color[0], color[1], color[2], color[3]);\n                gl.enable(gl.DEPTH_TEST);\n                gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n            }\n\n            function createOrCleanFramebuffer(gl, width, height, framebuffer, color, format){\n                if (!framebuffer || framebuffer.width !== width || framebuffer.height !== height) {\n                    if (framebuffer != null) {\n                        webGl.deleteFramebuffer(gl, framebuffer);\n                    }\n                    framebuffer = webGl.createFramebuffer(gl, width, height, format);\n                }\n                gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer.frame);\n                gl.clearColor(color[0], color[1], color[2], color[3]);\n                gl.enable(gl.DEPTH_TEST);\n                gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n                webGl.bindTexture(gl, programInfo.uniformLocations.sampler[0], 0, pixel);\n                webGl.bindTexture(gl, programInfo.uniformLocations.sampler[1], 1, pixel);\n                webGl.bindTexture(gl, programInfo.uniformLocations.audioSampler, 2, audioTexture);\n\n                return framebuffer;\n            }\n\n\n            // eslint-disable-next-line no-unused-vars\n            function draw(gl, viewport, state, viewMatrix, projectionMatrix, mainFramebuffer, index) {\n                // viewport for extra framebuffers (not for the main one)\n                gl.viewport(0, 0, viewport.width, viewport.height);\n                webGl.enableAttribs(gl, programInfo);\n\n                let map = state.map || {};\n\n                let drawFrameBuffer = createOrCleanFramebuffer(gl, viewport.width, viewport.height, map.drawFrameBuffer, webGl.TRANSPARENT,  gl.RGBA);\n                let maskFrameBuffer = createOrCleanFramebuffer(gl, viewport.width, viewport.height, map.maskFrameBuffer, webGl.BLACK,  gl.RGBA);\n                let normalMaskFrameBuffer = createOrCleanFramebuffer(gl, viewport.width, viewport.height, map.normalMaskFrameBuffer, webGl.BLACK,  gl.RGBA);\n                let alphaFrameBuffer = createOrCleanFramebuffer(gl, viewport.width, viewport.height, map.alphaFrameBuffer, webGl.TRANSPARENT, gl.RGBA);\n                let temporaryBuffer = createOrCleanFramebuffer(gl, viewport.width, viewport.height, map.temporaryBuffer, webGl.TRANSPARENT, gl.RGBA);\n\n                state.map = {\n                    drawFrameBuffer: drawFrameBuffer,\n                    maskFrameBuffer: maskFrameBuffer,\n                    alphaFrameBuffer: alphaFrameBuffer,\n                    temporaryBuffer: temporaryBuffer,\n                    normalMaskFrameBuffer: normalMaskFrameBuffer\n                };\n\n                this.timeShift += state.delta*this.softAudioLevel;\n\n                gl.uniform1f(programInfo.uniformLocations.time, state.time);\n                gl.uniform1f(programInfo.uniformLocations.timeShift, this.timeShift);\n                gl.uniform1f(programInfo.uniformLocations.audioLevel, this.audioLevel);\n                gl.uniform3fv(programInfo.uniformLocations.lightDirection, lightDirection);\n                gl.uniform2f(programInfo.uniformLocations.canvasSize, viewport.width, viewport.height);\n\n                let angularVelocity = 0.5;\n\n                let blurAmount = lerp(webAudio.myNoise3dx(perlin.noise, state.time, 0.0 ,0.0, this.blurPeriod),this.blurTransition[0]/100.0, this.blurTransition[1]/100.0);\n\n                let cylinderAmount = lerp(webAudio.myNoise3dx(perlin.noise, 0.0, state.time, 0.0, this.cylindersPeriod),this.cylindersTransition[0]/100.0, this.cylindersTransition[1]/100.0);\n                let cubesAmount = lerp(webAudio.myNoise3dx(perlin.noise, 0.0, 0.0 ,state.time, this.cubesPeriod),this.cubesTransition[0]/100.0, this.cubesTransition[1]/100.0);\n\n                let torusAmount = lerp(webAudio.myNoise3dx(perlin.noise, state.time, state.time ,0.0, this.torusPeriod),this.torusTransition[0]/100.0, this.torusTransition[1]/100.0);\n                let mandalaAmount = lerp(webAudio.myNoise3dx(perlin.noise, state.time, 0.0, state.time , this.mandalaPeriod),this.mandalaTransition[0]/100.0, this.mandalaTransition[1]/100.0);\n                let starsAmount = lerp(webAudio.myNoise3dx(perlin.noise, 0.0, state.time,  state.time , this.starsPeriod),this.starsTransition[0]/100.0, this.starsTransition[1]/100.0);\n\n                let modelAmount = lerp(webAudio.myNoise3dx(perlin.noise, state.time, state.time,  state.time , this.modelPeriod),this.modelTransition[0]/100.0, this.modelTransition[1]/100.0);\n\n                let rgbShiftAmount = lerp(webAudio.myNoise3dx(perlin.noise, state.time+1024, state.time,  state.time , this.rgbPeriod), this.rgbTransition[0]/100.0, this.rgbTransition[1]/100.0 );\n                let waterAmount = lerp(webAudio.myNoise3dx(perlin.noise, state.time, state.time+1024,  state.time, this.waterPeriod),this.waterTransition[0]/100.0, this.waterTransition[1]/100.0);\n                let radialAmount = lerp(webAudio.myNoise3dx(perlin.noise, state.time, state.time,  state.time+1024 , this.radialPeriod),this.radialTransition[0]/100.0, this.radialTransition[1]/100.0);\n\n                let sphericalGridAmount = lerp(webAudio.myNoise3dx(perlin.noise, state.time+1024, 0.0, 0.0, this.neuralPeriod),this.neuralTransition[0]/100.0, this.neuralTransition[1]/100.0);\n                let hexaGridAmount = lerp(webAudio.myNoise3dx(perlin.noise, 0.0,state.time+1024, 0.0, this.hexagonsPeriod),this.hexagonsTransition[0]/100.0, this.hexagonsTransition[1]/100.0);\n                let pyramidsAmount = lerp(webAudio.myNoise3dx(perlin.noise, 0.0, 0.0 ,state.time+1024, this.pyramidsPeriod),this.pyramidsTransition[0]/100.0, this.pyramidsTransition[1]/100.0);\n\n                if(DEBUG) {\n                    rgbShiftAmount=0.0;\n                    waterAmount =0.0;\n                    radialAmount =0.0;\n                    hexaGridAmount = 1.0;\n                }\n\n                let variant = 0;\n                if (viewMatrix == null) {\n                    viewMatrix = glm.mat4.create();\n                    let center = glm.vec3.set(TEMP_CENTER, 0, 0, -1);\n                    let up = glm.vec3.set(TEMP_UP, 0, 1, 0);\n                    let eye = glm.vec3.set(TEMP_EYE, 0, 0, 0);\n                    glm.mat4.lookAt(viewMatrix, eye, center, up);\n                }\n                if (projectionMatrix == null) {\n                    projectionMatrix = glm.mat4.identity(TEMP_PROJECTION);\n                    glm.mat4.perspective(projectionMatrix, 90 * Math.PI / 180, gl.canvas.clientWidth / gl.canvas.clientHeight, 0.1, 1000.0);\n                }\n                gl.uniformMatrix4fv(programInfo.uniformLocations.viewMatrix, false, viewMatrix);\n                gl.uniformMatrix4fv(programInfo.uniformLocations.projectionMatrix, false, projectionMatrix);\n\n                {\n                    let invertedViewMatrix = glm.mat4.invert(TEMP_VIEW, viewMatrix);\n                    glm.vec3.set(cameraPosition, invertedViewMatrix[12], invertedViewMatrix[13], invertedViewMatrix[14]);\n                    gl.uniform3fv(programInfo.uniformLocations.cameraPosition, cameraPosition);\n                }\n\n\n                // **********\n                // Draw space\n                // **********\n                if(spaceModel) {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, 1.0);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n\n                    glm.mat4.scale(modelMatrix, modelMatrix, glm.vec3.set(TEMP_SCALE, 400, 400, 400));\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_3D_SKY);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    for (let mesh of spaceModel) {\n                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES);\n                    }\n                }\n\n                // **********\n                // Draw torus\n                // **********\n                if(torusModel && torusAmount) {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, torusAmount);\n\n                    let position = glm.vec3.set(TEMP_POSITION, 0, 0, 0);\n                    let scale =  glm.vec3.set(TEMP_SCALE, 32, 8.0, 32);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n\n                    glm.vec3.add(position, position, modelPosition);\n                    glm.mat4.translate(modelMatrix, modelMatrix, position);\n                    glm.mat4.scale(modelMatrix, modelMatrix, scale);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_3D_TORUS);\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.enable(gl.CULL_FACE);\n\n                    for (let mesh of torusModel) {\n                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES);\n                    }\n                }\n\n                // **********\n                // Draw cubes\n                // **********\n                if(cubeModel && cubesAmount) {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, cubesAmount);\n\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_3D_CUBE);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n\n                    let size = 1;\n                    let distance = 64;\n                    for(let i = -size; i <= size; ++i) {\n                        for(let j = -size; j <= size; ++j) {\n                            for(let k = -size; k <= size; ++k) {\n                                if(Math.abs(i) === size || Math.abs(j) === size || Math.abs(k) === size) {\n                                    let noise = this.softAudioLevel;\n\n                                    let position = glm.vec3.set(TEMP_POSITION, i, j, k);\n                                    let direction = glm.vec3.set(TEMP_DIRECTION, 0.0, 0.0, 0.0);\n                                    let scale = glm.vec3.set(TEMP_SCALE, 1.0, 1.0, 1.0);\n                                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n\n                                    glm.vec3.normalize(direction, position);\n                                    glm.vec3.scale(position,direction,distance * (1.0 - noise));\n                                    glm.vec3.add(position, position, modelPosition);\n                                    glm.mat4.translate(modelMatrix, modelMatrix, position);\n                                    glm.mat4.scale(modelMatrix, modelMatrix, scale);\n                                    glm.mat4.rotate(modelMatrix, modelMatrix, noise*Math.PI*2.0, direction);\n\n                                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n\n                                    for (let mesh of cubeModel) {\n                                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES);\n                                    }\n\n                                }\n                            }\n                        }\n                    }\n\n                }\n\n                // *************\n                // Draw pyramids\n                // *************\n                if(pyramidModel && pyramidsAmount){\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, pyramidsAmount);\n\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_3D_PYRAMID);\n                    let cylinderDistance = 32;\n\n                    variant = 0;\n                    for (let i = Math.PI / 3.0; i < 2 * Math.PI - 0.001; i += Math.PI / 3.0) {\n                        let position = glm.vec3.set(TEMP_POSITION, -cylinderDistance * Math.sin(i), 0, -cylinderDistance * Math.cos(i));\n                        let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n                        let scale = glm.vec3.set(TEMP_SCALE, 4, 4, 4);\n\n                        glm.vec3.add(position, position, modelPosition);\n                        glm.mat4.translate(modelMatrix, modelMatrix, position);\n                        glm.mat4.scale(modelMatrix, modelMatrix, scale);\n                        glm.mat4.rotateY(modelMatrix, modelMatrix, -this.timeShift);\n                        gl.uniform1f(programInfo.uniformLocations.drawVariant, ++variant * 4.0);\n                        gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                        for (let mesh of pyramidModel) {\n                            webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES);\n                        }\n                    }\n                }\n\n                // *******************\n                // Draw spherical grid\n                // *******************\n                if(sphereModel && sphericalGridAmount) {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, sphericalGridAmount);\n\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_3D_SPHERICAL_GRID);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n\n                    let scale = glm.vec3.set(TEMP_SCALE, 4, 4, 4);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n\n                    glm.mat4.scale(modelMatrix, modelMatrix, scale);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n\n                    for (let mesh of sphereModel) {\n                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES);\n\n                    }\n                }\n\n                // *******************\n                // Draw hexa grid mask\n                // *******************\n                if(hexaModel && hexaGridAmount) {\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, hexaGridAmount);\n\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_3D_HEXA_GRID);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n\n                    let scale = glm.vec3.set(TEMP_SCALE, 2, 2, 2);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n\n                    glm.mat4.scale(modelMatrix, modelMatrix, scale);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, normalMaskFrameBuffer.frame);\n                    for (let mesh of hexaModel) {\n                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES, hexaMaskTexture);\n                    }\n                }\n\n                // *************\n                // Draw cylinder\n                // *************\n                if(cylinderAmount){\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, cylinderAmount);\n\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.enable(gl.CULL_FACE);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1f(programInfo.uniformLocations.animationVelocity, 2.0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_3D_CYLINDER);\n                    let cylinderDistance = 20;\n\n                    variant = 0;\n                    for (let i = Math.PI / 3.0; i < 2 * Math.PI - 0.001; i += 2.0 * Math.PI / 3.0) {\n                        let position = glm.vec3.set(TEMP_POSITION, -cylinderDistance * Math.sin(i), -128, -cylinderDistance * Math.cos(i));\n                        let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n                        let scale = glm.vec3.set(TEMP_SCALE, 4, 4, 4);\n\n                        glm.vec3.add(position, position, modelPosition);\n                        glm.mat4.translate(modelMatrix, modelMatrix, position);\n                        glm.mat4.scale(modelMatrix, modelMatrix, scale);\n                        gl.uniform1f(programInfo.uniformLocations.drawVariant, ++variant * 4.0);\n                        gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                        webGl.drawMesh(gl, programInfo, cylinderMesh, gl.TRIANGLES);\n                    }\n\n                }\n\n                // **************\n                // Draw billboard\n                // **************\n                if(starsAmount) {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, starsAmount);\n\n                    //let up = glm.vec3.set(TEMP_UP, viewMatrix[4], viewMatrix[5] ,viewMatrix[6]);\n                    let up = glm.vec3.set(TEMP_UP ,0, 1, 0);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_3D_BILLBOARD);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    variant = 0;\n                    for (let i = 0; i < 2.0 * Math.PI; i += Math.PI / 8.0) {\n                        let r = 24.0;\n                        let position = glm.vec3.set(TEMP_POSITION,  r * Math.cos(i), 24.0, r * Math.sin(i));\n                        let scale = glm.vec3.set(TEMP_SCALE, 2, 2, 2);\n                        let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n\n                        glm.vec3.add(position, position, modelPosition);\n                        modelMatrix = webGl.getBillboardMatrix(modelMatrix, position, cameraPosition, up);\n                        glm.mat4.scale(modelMatrix, modelMatrix, scale);\n\n                        gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                        gl.uniform1f(programInfo.uniformLocations.drawVariant, ++variant * 32.0);\n                        webGl.drawMesh(gl, programInfo, billboardMesh, gl.TRIANGLES, flareTexture);\n                    }\n                }\n\n                // *****************\n                // Draw mandala mask\n                // *****************\n\n                if(mandalaModel && blurAmount) {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, maskFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, 1.0);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n                    let position = glm.vec3.set(TEMP_POSITION, 0, -2.2, 0);\n                    let scale = glm.vec3.set(TEMP_SCALE, 8, 8, 8);\n\n                    glm.vec3.add(position, position, modelPosition);\n                    glm.mat4.translate(modelMatrix, modelMatrix, position);\n                    glm.mat4.scale(modelMatrix, modelMatrix, scale);\n                    glm.mat4.rotateY(modelMatrix, modelMatrix, -this.timeShift*angularVelocity);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_3D_MASK);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n\n                    for (let mesh of mandalaModel) {\n                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES, mandalaMaskTexture);\n                    }\n\n                }\n\n                // ***************\n                // Draw model mask\n                // ***************\n                if(statueModel && blurAmount) {\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, maskFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, 1.0);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n                    let position = glm.vec3.set(TEMP_POSITION ,0, 0, 0);\n\n                    glm.vec3.add(position, position, modelPosition);\n                    glm.mat4.translate(modelMatrix, modelMatrix, position);\n                    glm.mat4.rotateY(modelMatrix, modelMatrix, Math.PI / 2.0 - this.timeShift*angularVelocity);\n\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.enable(gl.CULL_FACE);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_3D_NO_EDGES_MASK);\n                    for (let mesh of statueModel) {\n                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES);\n                    }\n                }\n\n                // ************\n                // Draw mandala\n                // ************\n                if(mandalaModel && mandalaAmount) {\n                    // common\n                    let position = glm.vec3.set(TEMP_POSITION, 0, -2.2, 0);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n                    let scale = glm.vec3.set(TEMP_SCALE, 8, 8, 8);\n\n                    glm.vec3.add(position, position, modelPosition);\n                    glm.mat4.translate(modelMatrix, modelMatrix, position);\n                    glm.mat4.scale(modelMatrix, modelMatrix, scale);\n                    glm.mat4.rotateY(modelMatrix, modelMatrix, -this.timeShift*angularVelocity);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n\n                    // 1st pass\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, mandalaAmount);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_3D_MANDALA);\n                    for (let mesh of mandalaModel) {\n                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES, mandalaTexture);\n                    }\n                }\n\n                // *********\n                // DRAW BLUR\n                // *********\n                if(blurAmount){\n                    // common\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n\n                    // 1st pass\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, temporaryBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, 1.0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_2D);\n                    webGl.drawMesh(gl, programInfo, billboardMesh, gl.TRIANGLES, drawFrameBuffer.texture);\n\n                    // 2nd pass\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, blurAmount);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_2D_BLUR);\n                    webGl.drawMesh(gl, programInfo, billboardMesh, gl.TRIANGLES, temporaryBuffer.texture, maskFrameBuffer.texture);\n                }\n\n                // **********\n                // Draw model\n                // **********\n                if(statueModel) {\n                    // common\n                    let position = glm.vec3.set(TEMP_POSITION, 0, 0, 0);\n                    glm.vec3.add(position, position, modelPosition);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n                    glm.mat4.translate(modelMatrix, modelMatrix, position);\n                    glm.mat4.rotateY(modelMatrix, modelMatrix, Math.PI / 2.0 - this.timeShift*angularVelocity);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.enable(gl.CULL_FACE);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 1);\n\n                    // 1st pass\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, alphaFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, 1.0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_3D_DEFAULT);\n                    for (let mesh of statueModel) {\n                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES);\n                    }\n                }\n\n\n                // ****************\n                // DRAW MIXBUFFER 2\n                // ****************\n                if(modelAmount){\n                    // common\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n\n                    // 1st pass\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, modelAmount);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_2D_MIX);\n                    webGl.drawMesh(gl, programInfo, billboardMesh, gl.TRIANGLES, alphaFrameBuffer.texture);\n                }\n\n                // ****************\n                // Draw model edges\n                // ****************\n                if(statueModel) {\n                    // common\n                    let position = glm.vec3.set(TEMP_POSITION, 0, 0, 0);\n                    glm.vec3.add(position, position, modelPosition);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n                    glm.mat4.translate(modelMatrix, modelMatrix, position);\n                    glm.mat4.rotateY(modelMatrix, modelMatrix, Math.PI / 2.0 - this.timeShift*angularVelocity);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.enable(gl.CULL_FACE);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 1);\n\n                    // 1st pass\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, 1.0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_3D_EDGES);\n                    for (let mesh of statueModel) {\n                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES);\n                    }\n                }\n\n                // ***********\n                // DRAW NORMAL\n                // ***********\n                if(hexaGridAmount){\n                    // common\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, 1.0);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n\n                    // 1st pass\n                    webGl.copyBuffer(gl, drawFrameBuffer, temporaryBuffer);\n\n                    // 2nd pass\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, 1.0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_2D_NORMAL);\n                    webGl.drawMesh(gl, programInfo, billboardMesh, gl.TRIANGLES, temporaryBuffer.texture, normalMaskFrameBuffer.texture);\n                }\n\n                // *******************\n                // Draw hexa grid mask\n                // *******************\n                if(hexaModel && hexaGridAmount) {\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, hexaGridAmount);\n\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_3D_HEXA_GRID);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n\n                    let scale = glm.vec3.set(TEMP_SCALE, 2, 2, 2);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n\n                    glm.mat4.scale(modelMatrix, modelMatrix, scale);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    for (let mesh of hexaModel) {\n                        webGl.drawMesh(gl, programInfo, mesh, gl.TRIANGLES, hexaSphereTexture);\n                    }\n                }\n                \n                // ***********\n                // DRAW RADIAL\n                // ***********\n                if(radialAmount){\n                    // common\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, 1.0);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n\n                    // 1st pass\n                    webGl.copyBuffer(gl, drawFrameBuffer, temporaryBuffer);\n\n                    // 2nd pass\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, radialAmount);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_2D_RADIAL);\n                    webGl.drawMesh(gl, programInfo, billboardMesh, gl.TRIANGLES, temporaryBuffer.texture);\n                }\n\n                // **********\n                // DRAW WATER\n                // **********\n                if(waterAmount){\n                    // common\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, 1.0);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n\n                    // 1st pass\n                    webGl.copyBuffer(gl, drawFrameBuffer, temporaryBuffer);\n\n                    // 2nd pass\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, waterAmount);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_2D_WATER);\n                    webGl.drawMesh(gl, programInfo, billboardMesh, gl.TRIANGLES, temporaryBuffer.texture);\n                }\n\n                // **********\n                // DRAW SHIFT\n                // **********\n                if(rgbShiftAmount){\n                    // common\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, 1.0);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n\n                    // 1st pass\n                    webGl.copyBuffer(gl, drawFrameBuffer, temporaryBuffer);\n\n                    // 2nd pass\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, drawFrameBuffer.frame);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, rgbShiftAmount);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_2D_SHIFT);\n                    webGl.drawMesh(gl, programInfo, billboardMesh, gl.TRIANGLES, temporaryBuffer.texture);\n                }\n\n                // ****************\n                // DRAW FRAMEBUFFER\n                // ****************\n                {\n                    // common\n                    gl.viewport(viewport.x, viewport.y, viewport.width, viewport.height);\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n                    gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.disable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n\n                    // 1st pass\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, mainFramebuffer);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, 1.0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_2D);\n                    webGl.drawMesh(gl, programInfo, billboardMesh, gl.TRIANGLES, drawFrameBuffer.texture);\n                }\n\n                // *****\n                // DEBUG\n                // *****\n                if(DEBUG && billboardMesh){\n                    gl.bindFramebuffer(gl.FRAMEBUFFER, mainFramebuffer);\n                    gl.uniform1f(programInfo.uniformLocations.effectAmount, 1.0);\n                    gl.uniform1i(programInfo.uniformLocations.enableLight, 0);\n                    gl.uniform1i(programInfo.uniformLocations.drawMode, DRAW_MODE_2D);\n                    gl.enable(gl.DEPTH_TEST);\n                    gl.disable(gl.CULL_FACE);\n\n                    let textures = [\n                        audioTexture ,\n                        maskFrameBuffer.texture,\n                        alphaFrameBuffer.texture,\n                        normalMaskFrameBuffer.texture\n                    ];\n                    let size = 0.1;\n\n                    let modelMatrix = glm.mat4.identity(TEMP_MODEL);\n                    let position = glm.vec3.set(TEMP_POSITION, -1.0-size ,1.0-size,0.0);\n                    let scale = glm.vec3.set(TEMP_SCALE, size,size,1.0);\n\n                    glm.mat4.translate(modelMatrix, modelMatrix, position);\n                    glm.mat4.scale(modelMatrix, modelMatrix, scale);\n                    position = glm.vec3.set(TEMP_POSITION, 2.0 ,0.0, 0.0);\n\n                    for(let texture of textures) {\n                        glm.mat4.translate(modelMatrix, modelMatrix, position);\n                        gl.uniformMatrix4fv(programInfo.uniformLocations.modelMatrix, false, modelMatrix);\n                        webGl.drawMesh(gl, programInfo, billboardMesh, gl.TRIANGLES, texture);\n                    }\n                }\n            }\n\n            this.state = webGl.createState(\n                clean.bind(this),\n                draw.bind(this),\n                update.bind(this)\n            );\n            webGl.loop(this.gl, this.state);\n\n        },\n    }\n</script>\n\n<style scoped>\n    table {\n        position: absolute;\n        color: white;\n        background: rgba(0,0,0,0.75);\n        padding: 4px;\n    }\n    button {\n        padding: 10px;\n    }\n    li {\n        font-size: 10px;\n    }\n    td {\n        padding: 0px 4px;\n    }\n</style>\n\n<style>\n    .vue-slider-rail > .vue-slider-dot:nth-child(2) > div:first-child {\n        background: red !important;\n        text-align: center;\n        line-height: 10px;\n    }\n    .vue-slider-rail > .vue-slider-dot:nth-child(2) > div:first-child:after {\n        content: \"O\" !important;\n        font-size: 10px;\n    }\n    .vue-slider-rail > .vue-slider-dot:nth-child(3) > div:first-child {\n        background: green !important;\n        text-align: center;\n        line-height: 10px;\n    }\n    .vue-slider-rail > .vue-slider-dot:nth-child(3) > div:first-child:after {\n        content: \"I\" !important;\n        font-size: 10px;\n    }\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MyCanvas.vue?vue&type=template&id=7018ac38&scoped=true&\"\nimport script from \"./MyCanvas.vue?vue&type=script&lang=js&\"\nexport * from \"./MyCanvas.vue?vue&type=script&lang=js&\"\nimport style0 from \"./MyCanvas.vue?vue&type=style&index=0&id=7018ac38&scoped=true&lang=css&\"\nimport style1 from \"./MyCanvas.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7018ac38\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div id=\"app\">\n    <WebGl></WebGl>\n  </div>\n</template>\n\n<script>\n\nimport WebGl from \"./components/mycanvas/MyCanvas\";\nexport default {\n  name: 'App',\n  components: {\n    WebGl\n  }\n}\n</script>\n\n<style>\n  html, body {\n    overflow: hidden;\n    margin: 0 !important;\n    padding: 0 !important;\n  }\n</style>\n","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/thread-loader/dist/cjs.js!../node_modules/babel-loader/lib/index.js!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=3ed205a1&\"\nimport script from \"./App.vue?vue&type=script&lang=js&\"\nexport * from \"./App.vue?vue&type=script&lang=js&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport App from './App.vue'\n\nVue.config.productionTip = false\n\nnew Vue({\n  render: h => h(App),\n}).$mount('#app')\n","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=style&index=0&id=7018ac38&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MyCanvas.vue?vue&type=style&index=0&id=7018ac38&scoped=true&lang=css&\""],"sourceRoot":""}
(function(e){function n(n){for(var o,a,c=n[0],f=n[1],u=n[2],s=0,m=[];s<c.length;s++)a=c[s],Object.prototype.hasOwnProperty.call(r,a)&&r[a]&&m.push(r[a][0]),r[a]=0;for(o in f)Object.prototype.hasOwnProperty.call(f,o)&&(e[o]=f[o]);l&&l(n);while(m.length)m.shift()();return i.push.apply(i,u||[]),t()}function t(){for(var e,n=0;n<i.length;n++){for(var t=i[n],o=!0,c=1;c<t.length;c++){var f=t[c];0!==r[f]&&(o=!1)}o&&(i.splice(n--,1),e=a(a.s=t[0]))}return e}var o={},r={app:0},i=[];function a(n){if(o[n])return o[n].exports;var t=o[n]={i:n,l:!1,exports:{}};return e[n].call(t.exports,t,t.exports,a),t.l=!0,t.exports}a.m=e,a.c=o,a.d=function(e,n,t){a.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:t})},a.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,n){if(1&n&&(e=a(e)),8&n)return e;if(4&n&&"object"===typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(a.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var o in e)a.d(t,o,function(n){return e[n]}.bind(null,o));return t},a.n=function(e){var n=e&&e.__esModule?function(){return e["default"]}:function(){return e};return a.d(n,"a",n),n},a.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},a.p="";var c=window["webpackJsonp"]=window["webpackJsonp"]||[],f=c.push.bind(c);c.push=n,c=c.slice();for(var u=0;u<c.length;u++)n(c[u]);var l=f;i.push([0,"chunk-vendors"]),t()})({0:function(e,n,t){e.exports=t("56d7")},"034f":function(e,n,t){"use strict";var o=t("85ec"),r=t.n(o);r.a},"412d":function(e,n){(function(e){var n=e.noise={};function t(e,n,t){this.x=e,this.y=n,this.z=t}t.prototype.dot2=function(e,n){return this.x*e+this.y*n},t.prototype.dot3=function(e,n,t){return this.x*e+this.y*n+this.z*t};var o=[new t(1,1,0),new t(-1,1,0),new t(1,-1,0),new t(-1,-1,0),new t(1,0,1),new t(-1,0,1),new t(1,0,-1),new t(-1,0,-1),new t(0,1,1),new t(0,-1,1),new t(0,1,-1),new t(0,-1,-1)],r=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],i=new Array(512),a=new Array(512);n.seed=function(e){e>0&&e<1&&(e*=65536),e=Math.floor(e),e<256&&(e|=e<<8);for(var n=0;n<256;n++){var t;t=1&n?r[n]^255&e:r[n]^e>>8&255,i[n]=i[n+256]=t,a[n]=a[n+256]=o[t%12]}},n.seed(0);var c=.5*(Math.sqrt(3)-1),f=(3-Math.sqrt(3))/6,u=1/3,l=1/6;function s(e){return e*e*e*(e*(6*e-15)+10)}function m(e,n,t){return(1-t)*e+t*n}n.simplex2=function(e,n){var t,o,r,u,l,s=(e+n)*c,m=Math.floor(e+s),d=Math.floor(n+s),v=(m+d)*f,g=e-m+v,x=n-d+v;g>x?(u=1,l=0):(u=0,l=1);var y=g-u+f,h=x-l+f,E=g-1+2*f,b=x-1+2*f;m&=255,d&=255;var A=a[m+i[d]],_=a[m+u+i[d+l]],M=a[m+1+i[d+1]],T=.5-g*g-x*x;T<0?t=0:(T*=T,t=T*T*A.dot2(g,x));var p=.5-y*y-h*h;p<0?o=0:(p*=p,o=p*p*_.dot2(y,h));var R=.5-E*E-b*b;return R<0?r=0:(R*=R,r=R*R*M.dot2(E,b)),70*(t+o+r)},n.simplex3=function(e,n,t){var o,r,c,f,s,m,d,v,g,x,y=(e+n+t)*u,h=Math.floor(e+y),E=Math.floor(n+y),b=Math.floor(t+y),A=(h+E+b)*l,_=e-h+A,M=n-E+A,T=t-b+A;_>=M?M>=T?(s=1,m=0,d=0,v=1,g=1,x=0):_>=T?(s=1,m=0,d=0,v=1,g=0,x=1):(s=0,m=0,d=1,v=1,g=0,x=1):M<T?(s=0,m=0,d=1,v=0,g=1,x=1):_<T?(s=0,m=1,d=0,v=0,g=1,x=1):(s=0,m=1,d=0,v=1,g=1,x=0);var p=_-s+l,R=M-m+l,L=T-d+l,w=_-v+2*l,P=M-g+2*l,F=T-x+2*l,D=_-1+3*l,z=M-1+3*l,S=T-1+3*l;h&=255,E&=255,b&=255;var C=a[h+i[E+i[b]]],U=a[h+s+i[E+m+i[b+d]]],N=a[h+v+i[E+g+i[b+x]]],I=a[h+1+i[E+1+i[b+1]]],O=.6-_*_-M*M-T*T;O<0?o=0:(O*=O,o=O*O*C.dot3(_,M,T));var B=.6-p*p-R*R-L*L;B<0?r=0:(B*=B,r=B*B*U.dot3(p,R,L));var q=.6-w*w-P*P-F*F;q<0?c=0:(q*=q,c=q*q*N.dot3(w,P,F));var V=.6-D*D-z*z-S*S;return V<0?f=0:(V*=V,f=V*V*I.dot3(D,z,S)),32*(o+r+c+f)},n.perlin2=function(e,n){var t=Math.floor(e),o=Math.floor(n);e-=t,n-=o,t&=255,o&=255;var r=a[t+i[o]].dot2(e,n),c=a[t+i[o+1]].dot2(e,n-1),f=a[t+1+i[o]].dot2(e-1,n),u=a[t+1+i[o+1]].dot2(e-1,n-1),l=s(e);return m(m(r,f,l),m(c,u,l),s(n))},n.perlin3=function(e,n,t){var o=Math.floor(e),r=Math.floor(n),c=Math.floor(t);e-=o,n-=r,t-=c,o&=255,r&=255,c&=255;var f=a[o+i[r+i[c]]].dot3(e,n,t),u=a[o+i[r+i[c+1]]].dot3(e,n,t-1),l=a[o+i[r+1+i[c]]].dot3(e,n-1,t),d=a[o+i[r+1+i[c+1]]].dot3(e,n-1,t-1),v=a[o+1+i[r+i[c]]].dot3(e-1,n,t),g=a[o+1+i[r+i[c+1]]].dot3(e-1,n,t-1),x=a[o+1+i[r+1+i[c]]].dot3(e-1,n-1,t),y=a[o+1+i[r+1+i[c+1]]].dot3(e-1,n-1,t-1),h=s(e),E=s(n),b=s(t);return m(m(m(f,v,h),m(u,g,h),b),m(m(l,x,h),m(d,y,h),b),E)}})(this)},"56d7":function(e,n,t){"use strict";t.r(n);t("e260"),t("e6cf"),t("cca6"),t("a79d");var o=t("2b0e"),r=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",{attrs:{id:"app"}},[t("WebGl")],1)},i=[],a=function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("div",[e.hidden?e._e():t("table",[t("tr",[t("td",[e._v("Step 1:")]),t("td",[t("button",{on:{click:e.pickFile}},[e._v("File")]),e._v(" or "),t("button",{on:{click:e.enableMic}},[e._v("Mic")])])]),t("tr",[t("td",[e._v("Step 2:")]),t("td",[t("button",{on:{click:e.enableVr}},[e._v("Enter VR")])])]),e._m(0),t("tr",[t("td",{attrs:{colspan:"2"}},[t("button",{on:{click:e.hideTable}},[e._v("Hide")])])])]),t("canvas",{attrs:{width:e.canvasWidth,height:e.canvasHeight,id:"glcanvas"}}),t("input",{ref:"file",staticStyle:{display:"none"},attrs:{id:"file",type:"file",name:"file",accept:"audio/*"},on:{change:e.enableMusic}})])},c=[function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("tr",[t("td",{attrs:{colspan:"2"}},[e._v(" Donate: "),t("ul",[t("li",[e._v("BTC: 37z5ap84nNA1VMrF8QNJ6XYVGrKn1GopKH")]),t("li",[e._v("ETH: 0x13CBcCCA8910DdCc007aa73eed031E2C7eE1Bf62")])])])])}],f=(t("d81d"),t("d3b7"),t("ac1f"),t("5319"),t("5cc6"),t("9a8c"),t("a975"),t("735e"),t("c1ac"),t("d139"),t("3a7b"),t("d5d6"),t("82f8"),t("e91f"),t("60bd"),t("5f96"),t("3280"),t("3fcc"),t("ca91"),t("25a1"),t("cd26"),t("3c5d"),t("2954"),t("649e"),t("219c"),t("170b"),t("b39a"),t("72f7"),t("b85c")),u="#version 300 es\nprecision highp float;\nprecision highp int;\n\nin vec4 aVertexPosition;\nin vec4 aVertexNormal;\nin vec2 aTextureCoordinates;\n\nuniform int uDrawMode;\nuniform float uDrawVariant;\nuniform float uEffectAmount;\nuniform sampler2D uAudioSampler;\n\nuniform mat4 uViewMatrix;\nuniform mat4 uOrthoMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat4 uModelMatrix;\nuniform vec3 uLightDirection;\nuniform float uTime;\nuniform float uTimeShift;\nuniform float uAnimationVelocity;\nuniform float uAudioLevel;\n\nout vec4 vColor;\nout vec3 vNormal;\nout vec3 vLightDirection;\nout vec2 vTextureCoordinates;\nout vec4 vPosition;\n\n//#COMMON\n//#PERLIN\n//#HSL2RGB\n\nvoid main(void) {\n    vec2 tTextureCoordinates = aTextureCoordinates;\n    vColor = vec4(1.0,1.0,1.0,1.0);\n    vPosition = uModelMatrix*aVertexPosition;\n\n    if(uDrawMode <= DRAW_MODE_2D) {\n        gl_Position = uOrthoMatrix * vPosition;\n        vTextureCoordinates.x = tTextureCoordinates.x;\n        vTextureCoordinates.y = 1.0 - tTextureCoordinates.y;\n        return;\n    }\n    else {\n        mat4 viewProjectionMatrix = uProjectionMatrix * uViewMatrix;\n        float saturation = 4.0;\n\n        if (uDrawMode == DRAW_MODE_3D_CYLINDER) {\n            float cx = aTextureCoordinates.x;\n            float cy = cos(aTextureCoordinates.y*2.0*PI);\n\n            float time = uTimeShift*uAnimationVelocity+uAudioLevel;\n\n            float timeGeometry = uTimeShift*uAnimationVelocity;\n\n            // COLOR\n            float colorVelocity = 0.5;// color changes quicker\n            float colorFrequency = 0.2;// color is wider\n            vColor.xyz = hsv2rgb(\n                noise(vec4(cx*colorFrequency, cy*colorFrequency, time*colorVelocity, uDrawVariant)),\n                1.0,\n                1.0\n            );\n            vColor.w = 1.0;\n\n            // TEXTURE\n            float textureNoiseVelocity = 0.2;\n            float textureNoiseFrequency = 0.5;\n            vec2 noiseTexture = vec2(\n                noise(vec4(cx, cy, timeGeometry*textureNoiseVelocity, uDrawVariant)*textureNoiseFrequency),\n                noise(vec4(uDrawVariant, cx, cy, timeGeometry*textureNoiseVelocity)*textureNoiseFrequency)\n            );\n            vec2 textureVelocity = vec2(-0.5, 0.1);\n            float textureRotation = 0.5;\n            float textureWaveSize = 0.4;\n\n            vec2 dTextureCoordinates = timeGeometry*textureVelocity + noiseTexture*textureWaveSize;\n            dTextureCoordinates.y=textureRotation*sin(dTextureCoordinates.y);\n            tTextureCoordinates += dTextureCoordinates;\n\n            // POSITION\n            float displacementAmplitude = 16.0;\n            float displacementFrequency = 0.05;\n            float displacementVelocity = 0.05;\n            vec4 displacement = displacementAmplitude * vec4(\n                noise(vec3(uDrawVariant, vPosition.y*displacementFrequency, timeGeometry*displacementVelocity)),\n                0.0,\n                noise(vec3(uDrawVariant, timeGeometry*displacementVelocity, vPosition.y*displacementFrequency)),\n                0.0\n            );\n            vPosition += displacement;\n        } else if (uDrawMode == DRAW_MODE_3D_EDGES) {\n            float cx = aTextureCoordinates.x;\n            float cy = cos(aTextureCoordinates.y*PI);\n            float time = uTime+uAudioLevel;\n\n            // COLOR\n            float colorVelocity = 0.2;// color changes quicker\n            float colorFrequency = 0.1;// color is wider\n            vColor.xyz = hsv2rgb(\n                noise(vec3(cx*colorFrequency, cy*colorFrequency, time*colorVelocity)),\n                1.0,\n                1.0\n            );\n            vColor.w = 1.0;\n        } else if (uDrawMode == DRAW_MODE_3D_SKY) {\n            float cx = 0.0;\n            float cy = cos(aTextureCoordinates.y*PI*2.0);\n            float time = uTime+uAudioLevel;\n\n\n            // COLOR\n            float colorVelocity = 0.2;// color changes quicker\n            float colorFrequency = 0.5;// color is wider\n            vColor.xyz = hsv2rgb(\n                cos(noise(vec3(cy*colorFrequency, time*colorVelocity, 0.0))*PI*0.5),\n                noise(vec3(0.0, cy*colorFrequency, time*colorVelocity))*saturation,\n                1.0\n            );\n            vColor.w = 1.0;\n        } else if (uDrawMode == DRAW_MODE_3D_BILLBOARD) {\n            float angle = abs(atan(vPosition.z, vPosition.x))/PI;\n            vec4 audio = texture(uAudioSampler, vec2(angle, 0.0));\n            float time = uTime+uAudioLevel;\n\n            // COLOR\n            float colorVelocity = 0.2;// color changes quicker\n            float colorFrequency = 1.0;// color is wider\n            vColor.xyz = hsv2rgb(\n                noise(vec4(colorVelocity*angle, time*colorVelocity, 0.0, uDrawVariant)),\n                1.0,\n                1.0\n            );\n            vColor.w = 1.0;\n\n            // POSITION\n            float displacementAmplitude = 16.0;\n            float displacementFrequency = 0.1;\n            float displacementVelocity = 2.0;\n            vec4 displacement = displacementAmplitude * vec4(\n                0.0,\n                audio.x-0.5,\n                0.0,\n                0.0\n            );\n            vPosition += displacement;\n\n        } else if (uDrawMode == DRAW_MODE_3D_MANDALA) {\n            vec4 audio = texture(uAudioSampler, vec2(0.0, 0.0));\n            float cx = aTextureCoordinates.x;\n            float cy = aTextureCoordinates.y;\n            float time = uTime+uAudioLevel;\n\n            // COLOR\n            float colorVelocity = 0.2;// color changes quicker\n            float colorFrequency = 32.0;// color is wider\n            vColor.xyz = hsv2rgb(\n                noise(vec3(cx*colorFrequency, cy*colorFrequency, time*colorVelocity)),\n                1.0,\n                1.0\n            );\n            vColor.w = 1.0;\n        } else if (uDrawMode == DRAW_MODE_3D_TORUS) {\n            float angle = abs(atan(vPosition.z, vPosition.x))/PI;\n            vec4 audio = texture(uAudioSampler, vec2(angle, 0.0));\n            float cx = 0.0;\n            float cy = angle;\n            float time = uTime+uAudioLevel;\n\n            // COLOR\n            float colorVelocity = 0.2;// color changes quicker\n            float colorFrequency = 100.0;// color is wider\n            vColor.xyz = hsv2rgb(\n                noise(vec3(cx*colorFrequency, cy, time*colorVelocity)),\n                1.0,\n                1.0\n            );\n            vColor.w =1.0;\n\n            // POSITION\n            float displacementAmplitude = 16.0;\n            float displacementFrequency = 0.1;\n            float displacementVelocity = 2.0;\n            vec4 displacement = displacementAmplitude * vec4(\n                0.0,\n                audio.x-0.5,\n                0.0,\n                0.0\n            );\n            vPosition += displacement;\n        } else if (uDrawMode == DRAW_MODE_3D_CUBE) {\n            float angle = abs(atan(vPosition.z, vPosition.x))/PI;\n            float cx = 0.0;\n            float cy = angle;\n            float time = uTime+uAudioLevel;\n\n            // COLOR\n            float colorVelocity = 0.2;// color changes quicker\n            float colorFrequency = 100.0;// color is wider\n            vColor.xyz = hsv2rgb(\n            noise(vec4(cx*colorFrequency, cy, time*colorVelocity, uDrawVariant)),\n            1.0,\n            1.0\n            );\n            vColor.w = 1.0;\n        } else if (uDrawMode == DRAW_MODE_3D_PYRAMID) {\n            float angle = abs(atan(vPosition.z, vPosition.x))/PI;\n            float cx = 0.0;\n            float cy = angle;\n            float time = uTime+uAudioLevel;\n\n            // COLOR\n            float colorVelocity = 0.2;// color changes quicker\n            float colorFrequency = 100.0;// color is wider\n                vColor.xyz = hsv2rgb(\n                noise(vec4(cx*colorFrequency, cy, time*colorVelocity, uDrawVariant)),\n                1.0,\n                1.0\n            );\n            vColor.w = 1.0;\n        } else if (uDrawMode == DRAW_MODE_3D_SPHERICAL_GRID) {\n            float geometryVelocity = 0.2;// color changes quicker\n            float geometryFrequency = 800.0;// color is wider\n\n            float colorVelocity = 0.2;// color changes quicker\n            float colorFrequency = 0.4;// color is wider\n            float angle = abs(atan(vPosition.z, vPosition.x))/PI;\n            float time = uTime+uAudioLevel;\n\n            float n = noise(vec4(vPosition.x*geometryFrequency, vPosition.y*geometryFrequency, vPosition.z*geometryFrequency, time*geometryVelocity));\n\n            float gx = noise(vec4(vPosition.y*geometryFrequency, vPosition.x*geometryFrequency, vPosition.z*geometryFrequency, time*geometryVelocity));\n            float gy = noise(vec4(vPosition.z*geometryFrequency, vPosition.x*geometryFrequency, vPosition.y*geometryFrequency, time*geometryVelocity));\n            float gz = noise(vec4(vPosition.z*geometryFrequency, vPosition.y*geometryFrequency,vPosition.x*geometryFrequency, time*geometryVelocity));\n\n            float cx = noise(vec4(vPosition.y*colorFrequency, vPosition.x*colorFrequency, vPosition.z*colorFrequency, time*colorVelocity));\n            float cy = noise(vec4(vPosition.z*colorFrequency, vPosition.x*colorFrequency, vPosition.y*colorFrequency, time*colorVelocity));\n\n            if(n<0.2){\n                vColor = vec4(0.0);\n            }else {\n                vColor.xyz = hsv2rgb(vec3(cx, cy*0.25+0.75, 1.0));\n                vColor.w = 1.0;\n            }\n\n            // POSITION\n            float displacementAmplitude = 0.5;\n            float displacementFrequency = 0.1;\n            float displacementVelocity = 2.0;\n            vec4 displacement = displacementAmplitude * vec4(\n                gx-0.5,\n                gy-0.5,\n                gz-0.5,\n                0.0\n            );\n            vPosition += displacement;\n        }else if (uDrawMode == DRAW_MODE_3D_HEXA_GRID) {\n            float geometryVelocity = 0.2;// color changes quicker\n            float geometryFrequency = 3.2;// color is wider\n\n            float colorVelocity = 0.2;// color changes quicker\n            float colorFrequency = 0.8;// color is wider\n            float angle = abs(atan(vPosition.z, vPosition.x))/PI;\n            float time = uTime+uAudioLevel;\n\n            float n = noise(vec4(vPosition.x*geometryFrequency, vPosition.y*geometryFrequency, vPosition.z*geometryFrequency, time*geometryVelocity));\n\n            float gx = noise(vec4(vPosition.y*geometryFrequency, vPosition.x*geometryFrequency, vPosition.z*geometryFrequency, time*geometryVelocity));\n            float gy = noise(vec4(vPosition.z*geometryFrequency, vPosition.x*geometryFrequency, vPosition.y*geometryFrequency, time*geometryVelocity));\n            float gz = noise(vec4(vPosition.z*geometryFrequency, vPosition.y*geometryFrequency,vPosition.x*geometryFrequency, time*geometryVelocity));\n\n            float cx = noise(vec4(vPosition.y*colorFrequency, vPosition.x*colorFrequency, vPosition.z*colorFrequency, time*colorVelocity));\n            float cy = noise(vec4(vPosition.z*colorFrequency, vPosition.x*colorFrequency, vPosition.y*colorFrequency, time*colorVelocity));\n\n            if(n<0.5){\n                vColor = vec4(0.0);\n            }else {\n                vColor.xyz = hsv2rgb(vec3(cx, cy*0.25+0.75, 1.0));\n                vColor.w = 1.0;\n            }\n\n            // POSITION\n            float displacementAmplitude = 0.1;\n            float displacementFrequency = 0.1;\n            float displacementVelocity = 2.0;\n            vec4 displacement = displacementAmplitude * vec4(\n                gx-0.5,\n                gy-0.5,\n                gz-0.5,\n                0.0\n            );\n            vPosition += displacement;\n        }\n\n            mat3 vNormalMatrix = transpose(inverse(mat3(uModelMatrix)));\n        vNormal = normalize(vNormalMatrix * aVertexNormal.xyz);\n        gl_Position = viewProjectionMatrix * vPosition;\n        vTextureCoordinates = tTextureCoordinates;\n    }\n}",l="#version 300 es\nprecision highp float;\nprecision highp int;\n\nuniform int uDrawMode;\nuniform sampler2D uSampler[2];\nuniform sampler2D uAudioSampler;\nuniform float uEffectAmount;\n\nuniform bool uEnableLight;\nuniform float uTime;\nuniform float uTimeShift;\nuniform float uAnimationVelocity;\nuniform float uAudioLevel;\nuniform vec3 uLightDirection;\nuniform vec3 uCameraPosition;\nuniform vec2 uCanvasSize;\n\nin vec3 vNormal;\nin vec2 vTextureCoordinates;\nin vec4 vColor;\nin vec4 vPosition;\n\nout vec4 fragColor;\n\n//#COMMON\n//#PERLIN\n//#HSL2RGB\n\nvec4 alphaBlend(vec4 color){\n    return vec4(color.x * color.w, color.y * color.w, color.z * color.w, color.w);\n}\n\nvec3 getPositionAtCoords(vec2 pos, float t) {\n    float height = noise(vec3(pos, t));\n    return vec3(pos, height);\n}\n\nvec3 getNormalAtPosition(vec2 position, float textureNoiseFrequency) {\n    float textureNoiseVelocity = 1.0;\n    vec2 d = 1.0/uCanvasSize;\n\n    vec3 p = getPositionAtCoords(textureNoiseFrequency*position, uTime*textureNoiseVelocity);\n    vec3 a = getPositionAtCoords(textureNoiseFrequency*position+ vec2(0.0, d.y), uTime*textureNoiseVelocity);\n    vec3 b = getPositionAtCoords(textureNoiseFrequency*position+ vec2(d.x, 0.0), uTime*textureNoiseVelocity);\n    vec3 n = normalize(cross(b-p,a-p));\n    return n;\n}\n\nfloat toGrayScale(vec3 color){\n    return max(color.x, max(color.y, color.z));\n}\n\n\nvec3 getPositionAtTexture(vec2 pos) {\n    vec4 color = texture(uSampler[1], pos);\n    float height = toGrayScale(color.xyz);\n    return vec3(pos, height);\n}\n\nvec3 getNormalAtTexture(vec2 pos) {\n    vec2 d = 1.0/uCanvasSize;\n    vec3 p = getPositionAtTexture(pos);\n    vec3 a = getPositionAtTexture(pos+ vec2(0.0, d.y));\n    vec3 b = getPositionAtTexture(pos+ vec2(d.x, 0.0));\n    vec3 n = normalize(cross(b-p,a-p));\n    return n;\n}\n\nvoid main(void) {\n    vec4 color = vec4(1.0, 1.0, 1.0, 1.0);\n    vec2 textureCoordinates = vTextureCoordinates;\n    bool skipEffect = false;\n\n    if (uDrawMode == DRAW_MODE_2D_BLUR) {\n        vec4 maskColor = texture(uSampler[1], textureCoordinates);\n        if (maskColor.x > 0.0) {\n            vec4 sum = vec4(0.0);\n            vec2 delta = 4.0/uCanvasSize;\n            int count = 0;\n            int size = 4;\n            for (int i=-size; i <= size; ++i) {\n                for (int j=-size; j <= size; ++j) {\n                    sum += texture(uSampler[0], textureCoordinates+delta*vec2(i, j));\n                    ++count;\n                }\n            }\n            color = (sum / float(count))*uEffectAmount+(1.0 - uEffectAmount)*texture(uSampler[0], textureCoordinates);\n            skipEffect=true;\n        } else {\n            color.w = 0.0;\n        }\n        fragColor = alphaBlend(color);\n        return;\n    } else if (uDrawMode == DRAW_MODE_3D_TORUS) {\n        color = vColor;\n    } else if (uDrawMode == DRAW_MODE_3D_EDGES) {\n        color = texture(uSampler[0], textureCoordinates);\n    } else if(uDrawMode == DRAW_MODE_2D_WATER){\n        vec3 normal = getNormalAtPosition(textureCoordinates, 48.0)-0.5;\n\n        vec2 dist = (vec2(0.5)-textureCoordinates);\n        float len = length(dist);\n        float p2c = 2.0*len / sqrt(2.0);\n        p2c*= p2c;\n        p2c*= p2c;\n\n        color = texture(uSampler[0], textureCoordinates+normal.xy*p2c*uEffectAmount);\n        color.xyz += p2c*uEffectAmount*0.5;\n        skipEffect = true;\n    } else if(uDrawMode == DRAW_MODE_2D_NORMAL){\n        vec3 normal = getNormalAtTexture(textureCoordinates);\n        vec2 delta = 32.0/uCanvasSize;\n\n        vec4 height = texture(uSampler[1], textureCoordinates);\n        float superficialRefraction = 1.0 - toGrayScale(height.xyz);\n\n\n        color = texture(uSampler[0], textureCoordinates+normal.xy*delta*uEffectAmount*superficialRefraction);\n\n        //color = texture(uSampler[1], textureCoordinates);\n\n        skipEffect = true;\n    } else if(uDrawMode == DRAW_MODE_2D_SHIFT){\n        float pixelShift = 8.0;\n        vec2 shift = uEffectAmount*pixelShift/uCanvasSize;\n\n        vec4 t1 = texture(uSampler[0], textureCoordinates+shift*vec2(-0.5,-0.5));\n        vec4 t2 = texture(uSampler[0], textureCoordinates+shift*vec2(1.0, 0.0));\n        vec4 t3 = texture(uSampler[0], textureCoordinates+shift*vec2(0.0, 1.0));\n\n        color.xyz = vec3(t1.x, t2.y, t3.z);\n        color.w = 1.0;\n        skipEffect = true;\n    } else if(uDrawMode == DRAW_MODE_2D_LENS){\n        vec2 dist = (vec2(0.5)-textureCoordinates);\n        float len = length(dist);\n        float p2c = 2.0*len / sqrt(2.0);\n        p2c*= p2c;\n        p2c*= p2c;\n\n        color.xyz = texture(uSampler[0], textureCoordinates+dist*p2c*uEffectAmount).xyz;\n        color.w = 1.0;\n        skipEffect = true;\n    } else if(uDrawMode == DRAW_MODE_2D_RADIAL){\n        vec2 delta = 4.0/uCanvasSize;\n\n        vec2 dist = (vec2(0.5)-textureCoordinates);\n        vec2 norm = normalize(dist);\n\n        float len = length(dist);\n        float p2c = 2.0*len / sqrt(2.0);\n        p2c*= p2c;\n        p2c*= p2c;\n\n        int maxIters= 32;\n        int iters = clamp(int( float(maxIters)*p2c*uEffectAmount ), 1, maxIters);\n        vec4 sum = vec4(0.0);\n        for(int i=0; i < iters; ++i){\n            sum += texture(uSampler[0], textureCoordinates+norm*delta*float(i));\n        }\n        sum /= float(iters);\n        color = sum;\n        skipEffect = true;\n    } else if (uDrawMode == DRAW_MODE_3D_SPHERICAL_GRID) {\n        if(vColor.w < 0.95){\n            color = vec4(0.0);\n        }else {\n            color = texture(uSampler[0], textureCoordinates)*vColor;\n        }\n    } else if (uDrawMode == DRAW_MODE_3D_HEXA_GRID) {\n        if(vColor.w < 0.95){\n            color = vec4(0.0);\n        }else {\n            color = texture(uSampler[0], textureCoordinates)*vColor;\n        }\n    } else {\n        color = texture(uSampler[0], textureCoordinates)*vColor;\n    }\n\n    vec3 normal = normalize(vNormal);\n    if (uEnableLight) {\n        float dotFactor = dot(normal, -uLightDirection);\n        color = color*vec4(dotFactor, dotFactor, dotFactor, 1.0);\n    }\n\n    if (uDrawMode == DRAW_MODE_2D_MIX){\n        color *= 0.5;\n        color.xyz += 0.3;\n    }\n    else if (uDrawMode == DRAW_MODE_3D_NO_EDGES_MASK || uDrawMode == DRAW_MODE_3D_EDGES) {\n        vec3 vertexToCam = normalize(vPosition.xyz-uCameraPosition);\n        float edgeDot = abs(dot(vertexToCam, normal));\n        float edgeFactor = 0.3;\n        if (uDrawMode == DRAW_MODE_3D_EDGES) {\n            color = edgeDot < edgeFactor ? vColor: vec4(0.0);\n        }else {\n            color = edgeDot < edgeFactor ? vec4(0.0) : vec4(1.0);\n        }\n    }\n\n    if (uDrawMode == DRAW_MODE_3D_SKY || uDrawMode == DRAW_MODE_3D_BILLBOARD || uDrawMode == DRAW_MODE_3D_MANDALA) {\n        color.xyz *= vColor.xyz;\n    }\n    if(!skipEffect) {\n        color.w *= uEffectAmount;\n    }\n    fragColor = alphaBlend(color);\n\n}",s="//\tClassic Perlin 3D Noise\n//\tby Stefan Gustavson\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec4 fade(vec4 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec2 fade(vec2 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat cnoise(vec2 P){\n  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\n  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\n  Pi = mod(Pi, 289.0); // To avoid truncation effects in permutation\n  vec4 ix = Pi.xzxz;\n  vec4 iy = Pi.yyww;\n  vec4 fx = Pf.xzxz;\n  vec4 fy = Pf.yyww;\n  vec4 i = permute(permute(ix) + iy);\n  vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; // 1/41 = 0.024...\n  vec4 gy = abs(gx) - 0.5;\n  vec4 tx = floor(gx + 0.5);\n  gx = gx - tx;\n  vec2 g00 = vec2(gx.x,gy.x);\n  vec2 g10 = vec2(gx.y,gy.y);\n  vec2 g01 = vec2(gx.z,gy.z);\n  vec2 g11 = vec2(gx.w,gy.w);\n  vec4 norm = 1.79284291400159 - 0.85373472095314 *\n  vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\n  g00 *= norm.x;\n  g01 *= norm.y;\n  g10 *= norm.z;\n  g11 *= norm.w;\n  float n00 = dot(g00, vec2(fx.x, fy.x));\n  float n10 = dot(g10, vec2(fx.y, fy.y));\n  float n01 = dot(g01, vec2(fx.z, fy.z));\n  float n11 = dot(g11, vec2(fx.w, fy.w));\n  vec2 fade_xy = fade(Pf.xy);\n  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\n  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\n  return 2.3 * n_xy;\n}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\nfloat cnoise(vec4 P){\n  vec4 Pi0 = floor(P); // Integer part for indexing\n  vec4 Pi1 = Pi0 + 1.0; // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec4 Pf0 = fract(P); // Fractional part for interpolation\n  vec4 Pf1 = Pf0 - 1.0; // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = vec4(Pi0.zzzz);\n  vec4 iz1 = vec4(Pi1.zzzz);\n  vec4 iw0 = vec4(Pi0.wwww);\n  vec4 iw1 = vec4(Pi1.wwww);\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n  vec4 ixy00 = permute(ixy0 + iw0);\n  vec4 ixy01 = permute(ixy0 + iw1);\n  vec4 ixy10 = permute(ixy1 + iw0);\n  vec4 ixy11 = permute(ixy1 + iw1);\n\n  vec4 gx00 = ixy00 / 7.0;\n  vec4 gy00 = floor(gx00) / 7.0;\n  vec4 gz00 = floor(gy00) / 6.0;\n  gx00 = fract(gx00) - 0.5;\n  gy00 = fract(gy00) - 0.5;\n  gz00 = fract(gz00) - 0.5;\n  vec4 gw00 = vec4(0.75) - abs(gx00) - abs(gy00) - abs(gz00);\n  vec4 sw00 = step(gw00, vec4(0.0));\n  gx00 -= sw00 * (step(0.0, gx00) - 0.5);\n  gy00 -= sw00 * (step(0.0, gy00) - 0.5);\n\n  vec4 gx01 = ixy01 / 7.0;\n  vec4 gy01 = floor(gx01) / 7.0;\n  vec4 gz01 = floor(gy01) / 6.0;\n  gx01 = fract(gx01) - 0.5;\n  gy01 = fract(gy01) - 0.5;\n  gz01 = fract(gz01) - 0.5;\n  vec4 gw01 = vec4(0.75) - abs(gx01) - abs(gy01) - abs(gz01);\n  vec4 sw01 = step(gw01, vec4(0.0));\n  gx01 -= sw01 * (step(0.0, gx01) - 0.5);\n  gy01 -= sw01 * (step(0.0, gy01) - 0.5);\n\n  vec4 gx10 = ixy10 / 7.0;\n  vec4 gy10 = floor(gx10) / 7.0;\n  vec4 gz10 = floor(gy10) / 6.0;\n  gx10 = fract(gx10) - 0.5;\n  gy10 = fract(gy10) - 0.5;\n  gz10 = fract(gz10) - 0.5;\n  vec4 gw10 = vec4(0.75) - abs(gx10) - abs(gy10) - abs(gz10);\n  vec4 sw10 = step(gw10, vec4(0.0));\n  gx10 -= sw10 * (step(0.0, gx10) - 0.5);\n  gy10 -= sw10 * (step(0.0, gy10) - 0.5);\n\n  vec4 gx11 = ixy11 / 7.0;\n  vec4 gy11 = floor(gx11) / 7.0;\n  vec4 gz11 = floor(gy11) / 6.0;\n  gx11 = fract(gx11) - 0.5;\n  gy11 = fract(gy11) - 0.5;\n  gz11 = fract(gz11) - 0.5;\n  vec4 gw11 = vec4(0.75) - abs(gx11) - abs(gy11) - abs(gz11);\n  vec4 sw11 = step(gw11, vec4(0.0));\n  gx11 -= sw11 * (step(0.0, gx11) - 0.5);\n  gy11 -= sw11 * (step(0.0, gy11) - 0.5);\n\n  vec4 g0000 = vec4(gx00.x,gy00.x,gz00.x,gw00.x);\n  vec4 g1000 = vec4(gx00.y,gy00.y,gz00.y,gw00.y);\n  vec4 g0100 = vec4(gx00.z,gy00.z,gz00.z,gw00.z);\n  vec4 g1100 = vec4(gx00.w,gy00.w,gz00.w,gw00.w);\n  vec4 g0010 = vec4(gx10.x,gy10.x,gz10.x,gw10.x);\n  vec4 g1010 = vec4(gx10.y,gy10.y,gz10.y,gw10.y);\n  vec4 g0110 = vec4(gx10.z,gy10.z,gz10.z,gw10.z);\n  vec4 g1110 = vec4(gx10.w,gy10.w,gz10.w,gw10.w);\n  vec4 g0001 = vec4(gx01.x,gy01.x,gz01.x,gw01.x);\n  vec4 g1001 = vec4(gx01.y,gy01.y,gz01.y,gw01.y);\n  vec4 g0101 = vec4(gx01.z,gy01.z,gz01.z,gw01.z);\n  vec4 g1101 = vec4(gx01.w,gy01.w,gz01.w,gw01.w);\n  vec4 g0011 = vec4(gx11.x,gy11.x,gz11.x,gw11.x);\n  vec4 g1011 = vec4(gx11.y,gy11.y,gz11.y,gw11.y);\n  vec4 g0111 = vec4(gx11.z,gy11.z,gz11.z,gw11.z);\n  vec4 g1111 = vec4(gx11.w,gy11.w,gz11.w,gw11.w);\n\n  vec4 norm00 = taylorInvSqrt(vec4(dot(g0000, g0000), dot(g0100, g0100), dot(g1000, g1000), dot(g1100, g1100)));\n  g0000 *= norm00.x;\n  g0100 *= norm00.y;\n  g1000 *= norm00.z;\n  g1100 *= norm00.w;\n\n  vec4 norm01 = taylorInvSqrt(vec4(dot(g0001, g0001), dot(g0101, g0101), dot(g1001, g1001), dot(g1101, g1101)));\n  g0001 *= norm01.x;\n  g0101 *= norm01.y;\n  g1001 *= norm01.z;\n  g1101 *= norm01.w;\n\n  vec4 norm10 = taylorInvSqrt(vec4(dot(g0010, g0010), dot(g0110, g0110), dot(g1010, g1010), dot(g1110, g1110)));\n  g0010 *= norm10.x;\n  g0110 *= norm10.y;\n  g1010 *= norm10.z;\n  g1110 *= norm10.w;\n\n  vec4 norm11 = taylorInvSqrt(vec4(dot(g0011, g0011), dot(g0111, g0111), dot(g1011, g1011), dot(g1111, g1111)));\n  g0011 *= norm11.x;\n  g0111 *= norm11.y;\n  g1011 *= norm11.z;\n  g1111 *= norm11.w;\n\n  float n0000 = dot(g0000, Pf0);\n  float n1000 = dot(g1000, vec4(Pf1.x, Pf0.yzw));\n  float n0100 = dot(g0100, vec4(Pf0.x, Pf1.y, Pf0.zw));\n  float n1100 = dot(g1100, vec4(Pf1.xy, Pf0.zw));\n  float n0010 = dot(g0010, vec4(Pf0.xy, Pf1.z, Pf0.w));\n  float n1010 = dot(g1010, vec4(Pf1.x, Pf0.y, Pf1.z, Pf0.w));\n  float n0110 = dot(g0110, vec4(Pf0.x, Pf1.yz, Pf0.w));\n  float n1110 = dot(g1110, vec4(Pf1.xyz, Pf0.w));\n  float n0001 = dot(g0001, vec4(Pf0.xyz, Pf1.w));\n  float n1001 = dot(g1001, vec4(Pf1.x, Pf0.yz, Pf1.w));\n  float n0101 = dot(g0101, vec4(Pf0.x, Pf1.y, Pf0.z, Pf1.w));\n  float n1101 = dot(g1101, vec4(Pf1.xy, Pf0.z, Pf1.w));\n  float n0011 = dot(g0011, vec4(Pf0.xy, Pf1.zw));\n  float n1011 = dot(g1011, vec4(Pf1.x, Pf0.y, Pf1.zw));\n  float n0111 = dot(g0111, vec4(Pf0.x, Pf1.yzw));\n  float n1111 = dot(g1111, Pf1);\n\n  vec4 fade_xyzw = fade(Pf0);\n  vec4 n_0w = mix(vec4(n0000, n1000, n0100, n1100), vec4(n0001, n1001, n0101, n1101), fade_xyzw.w);\n  vec4 n_1w = mix(vec4(n0010, n1010, n0110, n1110), vec4(n0011, n1011, n0111, n1111), fade_xyzw.w);\n  vec4 n_zw = mix(n_0w, n_1w, fade_xyzw.z);\n  vec2 n_yzw = mix(n_zw.xy, n_zw.zw, fade_xyzw.y);\n  float n_xyzw = mix(n_yzw.x, n_yzw.y, fade_xyzw.x);\n  return 2.2 * n_xyzw;\n}\n\n#define PERLIN_ITER 2\n/*\nfloat noise(vec4 p){\n    float f = 1.0;\n    float sum = 0.0;\n    for(int i =0; i < PERLIN_ITER; ++i) {\n      f *= 0.5;\n      sum += f * cnoise(p);\n      p *= 2.0;\n    }\n    sum += f * cnoise(p);\n    return sum+0.5;\n}\n\nfloat noise(vec3 p){\n  float f = 1.0;\n  float sum = 0.0;\n  for(int i =0; i < PERLIN_ITER; ++i) {\n    f *= 0.5;\n    sum += f * cnoise(p);\n    p *= 2.0;\n  }\n  sum += f * cnoise(p);\n  return sum+0.5;\n}\n\nfloat noise(vec2 p){\n  float f = 1.0;\n  float sum = 0.0;\n  for(int i =0; i < PERLIN_ITER; ++i) {\n    f *= 0.5;\n    sum += f * cnoise(p);\n    p *= 2.0;\n  }\n  sum += f * cnoise(p);\n  return sum+0.5;\n}\n*/\n\nfloat noise(vec4 p){\n  return cnoise(p);\n}\n\nfloat noise(vec3 p){\n  return cnoise(p);\n}\n\nfloat noise(vec2 p){\n  return cnoise(p);\n}",m="float hue2rgb(float f1, float f2, float hue) {\n    if (hue < 0.0)\n    hue += 1.0;\n    else if (hue > 1.0)\n    hue -= 1.0;\n    float res;\n    if ((6.0 * hue) < 1.0)\n    res = f1 + (f2 - f1) * 6.0 * hue;\n    else if ((2.0 * hue) < 1.0)\n    res = f2;\n    else if ((3.0 * hue) < 2.0)\n    res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\n    else\n    res = f1;\n    return res;\n}\n\nvec3 hsl2rgb(vec3 hsl) {\n    vec3 rgb;\n\n    if (hsl.y == 0.0) {\n        rgb = vec3(hsl.z); // Luminance\n    } else {\n        float f2;\n\n        if (hsl.z < 0.5)\n        f2 = hsl.z * (1.0 + hsl.y);\n        else\n        f2 = hsl.z + hsl.y - hsl.y * hsl.z;\n\n        float f1 = 2.0 * hsl.z - f2;\n\n        rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));\n        rgb.g = hue2rgb(f1, f2, hsl.x);\n        rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));\n    }\n    return rgb;\n}\n\nvec3 hsl2rgb(float h, float s, float l) {\n    return hsl2rgb(vec3(h, s, l));\n}\n\nvec3 hsv2rgb(vec3 c)\n{\n    vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n    vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n    return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\nvec3 hsv2rgb(float h, float s, float l) {\n    return hsv2rgb(vec3(h, s, l));\n}",d="#define PI 3.1415926535897932384626433832795\n// 2D MODES\n#define DRAW_MODE_2D_NORMAL -9\n#define DRAW_MODE_2D_WATER -8\n#define DRAW_MODE_2D_SHIFT -7\n#define DRAW_MODE_2D_RADIAL -6\n#define DRAW_MODE_2D_LENS -5\n#define DRAW_MODE_2D_BLUR -4\n#define DRAW_MODE_2D_MIX -3\n#define DRAW_MODE_2D -2\n// 3D MODES\n#define DRAW_MODE_3D_MASK -1\n#define DRAW_MODE_3D_DEFAULT 0\n#define DRAW_MODE_3D_SKY 1\n#define DRAW_MODE_3D_CYLINDER 2\n#define DRAW_MODE_3D_EDGES 3\n#define DRAW_MODE_3D_NO_EDGES_MASK 4\n#define DRAW_MODE_3D_BILLBOARD 5\n#define DRAW_MODE_3D_TORUS 6\n#define DRAW_MODE_3D_MANDALA 7\n#define DRAW_MODE_3D_CUBE 8\n#define DRAW_MODE_3D_SPHERICAL_GRID 9\n#define DRAW_MODE_3D_HEXA_GRID 10\n#define DRAW_MODE_3D_PYRAMID 11",v=(t("25f0"),t("cfc3"),t("84c3"),t("44b4")),g=t("20e7"),x={TRANSPARENT:g["c"].fromValues(0,0,0,0),WHITE:g["c"].fromValues(1,1,1,1),BLACK:g["c"].fromValues(0,0,0,1),initShaderProgram:function(e,n,t){var o=this.loadShader(e,e.VERTEX_SHADER,n),r=this.loadShader(e,e.FRAGMENT_SHADER,t),i=e.createProgram();return e.attachShader(i,o),e.attachShader(i,r),e.linkProgram(i),e.getProgramParameter(i,e.LINK_STATUS)?i:(alert("Unable to initialize the shader program: "+e.getProgramInfoLog(i)),null)},loadShader:function(e,n,t){var o=e.createShader(n);return e.shaderSource(o,t),e.compileShader(o),e.getShaderParameter(o,e.COMPILE_STATUS)?o:(alert("An error occurred compiling the shaders: "+e.getShaderInfoLog(o)),e.deleteShader(o),null)},createState:function(e,n,t){return{time:0,delta:0,vrInitialized:!1,vrToggle:!1,vrSession:null,vrSpace:null,animation:null,cleanDrawback:e,drawCallback:n,updateCallback:t,vrSupported:!1,map:{},tick:function(e){e*=.001,this.delta=e-this.time,this.time=e},log:""}},loop:function(e,n){var t=this;function o(e){}function r(t){return t.addEventListener("end",o),t.updateRenderState({baseLayer:new XRWebGLLayer(t,e)}),t.requestReferenceSpace("local").then((function(e){n.vrSession=t,console.log(e),n.vrSpace=e,n.animation&&cancelAnimationFrame(n.animation),n.animation=t.requestAnimationFrame(i)})),console.log(t),t}function i(o,a){n.vrToggle&&(n.vrToggle=!1,n.vrInitialized||(n.vrInitialized=!0,new v["a"],navigator.xr&&navigator.xr.isSessionSupported("immersive-vr").then((function(e){n.vrSupported=e,navigator.xr.requestSession("immersive-vr").then(r)}))));var c=null,f=null;if(n.vrInitialized&&a?(f=a.session,n.animation=f.requestAnimationFrame(i),n.vrSpace&&a&&(c=a.getViewerPose(n.vrSpace))):n.animation=requestAnimationFrame(i),n.tick(o),n.updateCallback(e,n),n.vrInitialized&&a){if(c){var u=f?f.renderState.baseLayer:null;for(var l in n.cleanDrawback(e,u.framebuffer,t.TRANSPARENT),c.views){var s=c.views[l],m=u.getViewport(s);m.width>0&&m.height>0&&n.drawCallback(e,m,n,s.transform.inverse.matrix,s.projectionMatrix,u.framebuffer,l+1)}}}else{var d={width:e.canvas.width,height:e.canvas.height,x:0,y:0};d.width&&d.height&&(n.cleanDrawback(e,null,t.TRANSPARENT),n.drawCallback(e,d,n,null,null,null,0))}}n.animation=requestAnimationFrame(i)},getProgramInfo:function(e,n){return{program:n,time:0,attribLocations:{vertexPosition:e.getAttribLocation(n,"aVertexPosition"),vertexNormal:e.getAttribLocation(n,"aVertexNormal"),textureCoordinates:e.getAttribLocation(n,"aTextureCoordinates")},uniformLocations:{projectionMatrix:e.getUniformLocation(n,"uProjectionMatrix"),viewMatrix:e.getUniformLocation(n,"uViewMatrix"),modelMatrix:e.getUniformLocation(n,"uModelMatrix"),orthoMatrix:e.getUniformLocation(n,"uOrthoMatrix"),sampler:[e.getUniformLocation(n,"uSampler[0]"),e.getUniformLocation(n,"uSampler[1]")],enableLight:e.getUniformLocation(n,"uEnableLight"),drawMode:e.getUniformLocation(n,"uDrawMode"),drawVariant:e.getUniformLocation(n,"uDrawVariant"),time:e.getUniformLocation(n,"uTime"),timeShift:e.getUniformLocation(n,"uTimeShift"),animationVelocity:e.getUniformLocation(n,"uAnimationVelocity"),lightDirection:e.getUniformLocation(n,"uLightDirection"),cameraPosition:e.getUniformLocation(n,"uCameraPosition"),canvasSize:e.getUniformLocation(n,"uCanvasSize"),audioSampler:e.getUniformLocation(n,"uAudioSampler"),audioLevel:e.getUniformLocation(n,"uAudioLevel"),effectAmount:e.getUniformLocation(n,"uEffectAmount")}}},createArrayBuffers:function(e,n,t,o,r,i){var a=r.length,c=e.createBuffer(),f=e.createBuffer(),u=e.createBuffer(),l=e.createBuffer();return e.bindBuffer(e.ARRAY_BUFFER,c),e.bufferData(e.ARRAY_BUFFER,new Float32Array(n),e.STATIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,f),e.bufferData(e.ARRAY_BUFFER,new Float32Array(t),e.STATIC_DRAW),e.bindBuffer(e.ARRAY_BUFFER,l),e.bufferData(e.ARRAY_BUFFER,new Float32Array(o),e.STATIC_DRAW),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,u),e.bufferData(e.ELEMENT_ARRAY_BUFFER,new Uint16Array(r),e.STATIC_DRAW),{ic:a,vb:c,nb:f,tb:l,ib:u,im:i}},createBillboard:function(e){var n=[1,-1,0,1,1,0,-1,1,0,-1,-1,0],t=[0,0,1,0,0,1,0,0,1,0,0,1],o=[1,1,1,0,0,0,0,1],r=[0,1,2,0,2,3];return this.createArrayBuffers(e,n,t,o,r,null)},getCylinderMesh:function(e,n){for(var t=[],o=[],r=[],i=[],a=128,c=16,f=.5,u=0;u<=a;++u)for(var l=0;l<=c;++l){var s=Math.sin(2*Math.PI*l/c),m=u*f,d=Math.cos(2*Math.PI*l/c);t.push(s),t.push(m),t.push(d),o.push(s),o.push(0),o.push(d),r.push(.5*m),r.push(l/c)}for(var v=0;v<a;++v)for(var g=0;g<c;++g)i.push((v+0)*(c+1)+(g+0)),i.push((v+0)*(c+1)+(g+1)),i.push((v+1)*(c+1)+(g+1)),i.push((v+0)*(c+1)+(g+0)),i.push((v+1)*(c+1)+(g+1)),i.push((v+1)*(c+1)+(g+0));return this.createArrayBuffers(e,t,o,r,i,n)},getMesh:function(e,n){var t=n.geometry;if(!t||!t.attributes)return null;var o=t.attributes.position.array,r=t.attributes.normal.array,i=t.attributes.uv.array,a=t.index.array,c=n.material.map?n.material.map.image:null;return o&&r&&i&&a&&o.length&&r.length&&i.length&&a.length||console.error("Model error"),this.createArrayBuffers(e,o,r,i,a,c?this.loadImage(e,c):null)},getModel:function(e,n){var t,o=[],r=Object(f["a"])(n.scene.children);try{for(r.s();!(t=r.n()).done;){var i=t.value,a=this.getMesh(e,i);null!=a&&o.push(a)}}catch(c){r.e(c)}finally{r.f()}return o},enableAttribs:function(e,n){e.enableVertexAttribArray(n.attribLocations.vertexPosition),e.enableVertexAttribArray(n.attribLocations.vertexNormal),e.enableVertexAttribArray(n.attribLocations.textureCoordinates)},disableAttribs:function(e,n){e.disableVertexAttribArray(n.attribLocations.vertexPosition),e.disableVertexAttribArray(n.attribLocations.vertexNormal),e.disableVertexAttribArray(n.attribLocations.textureCoordinates)},bindTexture:function(e,n,t,o){e.uniform1i(n,t),e.activeTexture(e.TEXTURE0+t),e.bindTexture(e.TEXTURE_2D,o)},drawMesh:function(e,n,t,o,r,i){e.bindBuffer(e.ARRAY_BUFFER,t.vb),e.vertexAttribPointer(n.attribLocations.vertexPosition,3,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,t.nb),e.vertexAttribPointer(n.attribLocations.vertexNormal,3,e.FLOAT,!1,0,0),e.bindBuffer(e.ARRAY_BUFFER,t.tb),e.vertexAttribPointer(n.attribLocations.textureCoordinates,2,e.FLOAT,!1,0,0),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,t.ib),r||(r=t.im),r||(r=0),i||(i=r),r&&this.bindTexture(e,n.uniformLocations.sampler[0],0,r),i&&this.bindTexture(e,n.uniformLocations.sampler[1],1,i),e.drawElements(o,t.ic,e.UNSIGNED_SHORT,0)},enableVr:function(e){e.vrInit=!0},isPowerOf2:function(e){return 0===(e&e-1)},generateMipmap:function(e,n){this.isPowerOf2(n.width)&&this.isPowerOf2(n.height)?(e.generateMipmap(e.TEXTURE_2D),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.REPEAT),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.REPEAT)):(e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR))},initializeTexture:function(e,n){e.bindTexture(e.TEXTURE_2D,n);var t=new Uint8Array([0]);e.texImage2D(e.TEXTURE_2D,0,e.LUMINANCE,1,1,0,e.LUMINANCE,e.UNSIGNED_BYTE,t)},loadAudio:function(e,n,t,o){e.bindTexture(e.TEXTURE_2D,n);var r=0,i=e.LUMINANCE,a=1,c=0,f=e.LUMINANCE,u=e.UNSIGNED_BYTE;e.texImage2D(e.TEXTURE_2D,r,i,t,a,c,f,u,o),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR)},loadImage:function(e,n){var t=e.createTexture();this.initializeTexture(e,t);var o=0,r=e.RGBA,i=e.RGBA,a=e.UNSIGNED_BYTE;return e.bindTexture(e.TEXTURE_2D,t),e.texImage2D(e.TEXTURE_2D,o,r,i,a,n),this.generateMipmap(e,n),t},loadTexture:function(e,n){var t=e.createTexture();this.initializeTexture(e,t);var o=0,r=e.RGBA,i=e.RGBA,a=e.UNSIGNED_BYTE,c=new Image,f=this;return c.onload=function(){e.bindTexture(e.TEXTURE_2D,t),e.texImage2D(e.TEXTURE_2D,o,r,i,a,c),f.generateMipmap(e,c)},c.src=n,t},TEMP_TO:g["b"].create(),TEMP_UP:g["b"].create(),TEMP_RIGHT:g["b"].create(),getBillboardMatrix:function(e,n,t,o){var r=g["b"].subtract(g["b"].set(this.TEMP_TO,0,0,0),t,n),i=g["b"].normalize(r,r),a=g["b"].cross(g["b"].set(this.TEMP_RIGHT,0,0,0),o,i),c=g["b"].cross(g["b"].set(this.TEMP_UP,0,0,0),i,a);return g["a"].set(e,a[0],a[1],a[2],0,c[0],c[1],c[2],0,i[0],i[1],i[2],0,n[0],n[1],n[2],1)},createFramebuffer:function(e,n,t,o){var r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,o,n,t,0,o,e.UNSIGNED_BYTE,null),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.LINEAR);var i=e.createRenderbuffer();e.bindRenderbuffer(e.RENDERBUFFER,i),e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,n,t);var a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,i);var c=e.checkFramebufferStatus(e.FRAMEBUFFER);return e.FRAMEBUFFER_COMPLETE!==c&&console.error("ERROR",c.toString()),e.bindFramebuffer(e.FRAMEBUFFER,null),e.bindTexture(e.TEXTURE_2D,null),e.bindRenderbuffer(e.RENDERBUFFER,null),{texture:r,render:i,frame:a,width:n,height:t}},deleteFramebuffer:function(e,n){n.frame&&e.deleteFramebuffer(n.frame),n.texture&&e.deleteTexture(n.texture),n.render&&e.deleteRenderbuffer(n.render)},getFramebufferTexture:function(e){return e.getFramebufferAttachmentParameter(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME)},toggleVR:function(e,n){n.vrToggle=!0},copyBuffer:function(e,n,t){e.bindFramebuffer(e.DRAW_FRAMEBUFFER,t.frame),e.bindFramebuffer(e.READ_FRAMEBUFFER,n.frame),e.blitFramebuffer(0,0,n.width,n.height,0,0,t.width,t.height,e.COLOR_BUFFER_BIT,e.NEAREST),e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null)}},y={initializeArray:function(e){for(var n=0;n<e.length;++n)e[n]=0},myNoise3d:function(e,n,t,o,r){var i=e.simplex3(n/r,t/r,o/r);return.5*(i+1)},myNoise3dx:function(e,n,t,o,r){for(var i=r,a=1,c=0,f=0;f<7;++f)a*=.5,c+=a*this.myNoise3d(e,n,t,o,i),i*=.5;return c+=a*this.myNoise3d(e,n,t,o,i),c},max:function(e){for(var n=0,t=0;t<e.length;++t)n=Math.max(n,e[t]);return n}},h=t("412d"),E=t.n(h),b=t("bd2e"),A=t.n(b),_=!1,M=-9,T=-8,p=-7,R=-6,L=-4,w=-3,P=-2,F=-1,D=0,z=1,S=2,C=3,U=4,N=5,I=6,O=7,B=8,q=9,V=10,G=11,W={name:"VrMusic",data:function(){return{canvasWidth:window.innerWidth,canvasHeight:window.innerHeight,state:null,gl:null,source:null,isPlaying:!1,audioContext:null,analyser:null,freqArray:null,dataArray:null,fftSize:512,audioLevel:0,softAudioLevel:0,timeShift:0,hidden:!1}},methods:{enableVr:function(){x.toggleVR(this.gl,this.state)},enableMic:function(){function e(e){this.audioContext=new AudioContext,this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize,this.source=this.audioContext.createMediaStreamSource(e),this.source.connect(this.analyser),this.isPlaying=!0}this.audioContext||(navigator.getUserMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia,navigator.mediaDevices.getUserMedia({audio:!0,video:!1}).then(e.bind(this)))},hideTable:function(){this.hidden=!0},pickFile:function(){this.$refs.file.click()},enableMusic:function(e){this.audioContext=new AudioContext,this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=this.fftSize;var n=e.target.files[0];if(n){var t=new FileReader;t.readAsArrayBuffer(n),t.onload=function(e){var n=e.target.result;this.audioContext.decodeAudioData(n,function(e){this.source=this.audioContext.createBufferSource(),this.source.buffer=e,this.source.loop=!0,this.source.start(0),this.source.connect(this.analyser),this.analyser.connect(this.audioContext.destination)}.bind(this))}.bind(this)}}},mounted:function(){var e=document.querySelector("#glcanvas"),n=e.getContext("webgl2",{xrCompatible:!0});this.gl=n,e.addEventListener("contextmenu",(function(e){e.preventDefault()})),window.addEventListener("resize",function(){this.canvasWidth=window.innerWidth,this.canvasHeight=window.innerHeight,console.log(this)}.bind(this));var t=l.replace("//#PERLIN",s).replace("//#COMMON",d).replace("//#HSL2RGB",m),o=u.replace("//#PERLIN",s).replace("//#COMMON",d).replace("//#HSL2RGB",m),r=x.initShaderProgram(n,o,t);n.useProgram(r);var i=x.getProgramInfo(n,r),a=g["b"].fromValues(-1,-1,-1);g["b"].normalize(a,a);var c=g["a"].ortho(g["a"].create(),-1,1,-1,1,-1,1);n.uniformMatrix4fv(i.uniformLocations.orthoMatrix,!1,c),n.enable(n.BLEND),n.blendFunc(n.ONE,n.ONE_MINUS_SRC_ALPHA);var v=x.loadTexture(n,"textures/pixel.png"),h=x.loadTexture(n,"textures/pattern.png"),b=x.getCylinderMesh(n,h),W=x.loadTexture(n,"textures/flare.png"),H=x.loadTexture(n,"textures/mandala.png"),k=x.loadTexture(n,"textures/mandala_mask.png"),X=x.loadTexture(n,"textures/hexa_texture.png"),j=x.loadTexture(n,"textures/hexa_mask.png"),Y=x.createBillboard(n),K=n.createTexture();this.freqArray=new Uint8Array(this.fftSize),this.dataArray=new Uint8Array(this.fftSize),y.initializeArray(this.freqArray),y.initializeArray(this.dataArray),x.initializeTexture(n,K),E.a.noise.seed(Math.random());var $=null,J=null,Q=null,Z=null,ee=null,ne=null,te=null,oe=null,re=new A.a;re.load("models/ganesha.gltf",(function(e){J=x.getModel(n,e)})),re.load("models/space.gltf",(function(e){Q=x.getModel(n,e)})),re.load("models/mandala.gltf",(function(e){$=x.getModel(n,e)})),re.load("models/torus.gltf",(function(e){Z=x.getModel(n,e)})),re.load("models/cube.gltf",(function(e){ee=x.getModel(n,e)})),re.load("models/sphere.gltf",(function(e){ne=x.getModel(n,e)})),re.load("models/hexa.gltf",(function(e){te=x.getModel(n,e)})),re.load("models/pyramid.gltf",(function(e){oe=x.getModel(n,e)}));var ie=g["b"].create(),ae=g["b"].create(),ce=g["b"].create(),fe=g["b"].create(),ue=g["b"].create(),le=g["b"].create(),se=g["a"].create(),me=g["a"].create(),de=g["a"].create(),ve=g["b"].create(),ge=g["b"].fromValues(0,0,-6);function xe(e,n,t){return e<n?n:e>t?t:e}function ye(e,n,t){return e<n?0:e>=t?1:xe((e-n)/(t-n),0,1)}function he(e,n){if(this.audioContext&&this.analyser){this.analyser.getByteTimeDomainData(this.dataArray),x.loadAudio(e,K,this.fftSize,this.dataArray),x.bindTexture(e,i.uniformLocations.audioSampler,2,K),this.audioLevel=2*(y.max(this.dataArray)/255-.5);var t=.25,o=xe(n.delta/t,0,1);this.softAudioLevel=(1-o)*this.softAudioLevel+o*this.audioLevel}}function Ee(e,n,t){e.bindFramebuffer(e.FRAMEBUFFER,n),e.clearColor(t[0],t[1],t[2],t[3]),e.enable(e.DEPTH_TEST),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT)}function be(e,n,t,o,r,a){return o&&o.width===n&&o.height===t||(null!=o&&x.deleteFramebuffer(e,o),o=x.createFramebuffer(e,n,t,a)),e.bindFramebuffer(e.FRAMEBUFFER,o.frame),e.clearColor(r[0],r[1],r[2],r[3]),e.enable(e.DEPTH_TEST),e.clear(e.COLOR_BUFFER_BIT|e.DEPTH_BUFFER_BIT),x.bindTexture(e,i.uniformLocations.sampler[0],0,v),x.bindTexture(e,i.uniformLocations.sampler[1],1,v),x.bindTexture(e,i.uniformLocations.audioSampler,2,K),o}function Ae(e,n,t,o,r,c,u){e.viewport(0,0,n.width,n.height),x.enableAttribs(e,i);var l=t.map||{},s=be(e,n.width,n.height,l.drawFrameBuffer,x.TRANSPARENT,e.RGBA),m=be(e,n.width,n.height,l.maskFrameBuffer,x.BLACK,e.RGBA),d=be(e,n.width,n.height,l.normalMaskFrameBuffer,x.BLACK,e.RGBA),v=be(e,n.width,n.height,l.alphaFrameBuffer,x.TRANSPARENT,e.RGBA),h=be(e,n.width,n.height,l.temporaryBuffer,x.TRANSPARENT,e.RGBA);t.map={drawFrameBuffer:s,maskFrameBuffer:m,alphaFrameBuffer:v,temporaryBuffer:h,normalMaskFrameBuffer:d},this.timeShift+=t.delta*this.softAudioLevel,e.uniform1f(i.uniformLocations.time,t.time),e.uniform1f(i.uniformLocations.timeShift,this.timeShift),e.uniform1f(i.uniformLocations.audioLevel,this.audioLevel),e.uniform3fv(i.uniformLocations.lightDirection,a),e.uniform2f(i.uniformLocations.canvasSize,n.width,n.height);var A=8,re=16,xe=.5,he=ye(y.myNoise3dx(E.a.noise,t.time,0,0,A),.3,.6),Ee=ye(y.myNoise3dx(E.a.noise,0,t.time,0,A),.4,.6),Ae=ye(y.myNoise3dx(E.a.noise,0,0,t.time,A),.5,.7),_e=ye(y.myNoise3dx(E.a.noise,t.time,t.time,0,A),.4,.6),Me=ye(y.myNoise3dx(E.a.noise,t.time,0,t.time,A),.4,.6),Te=ye(y.myNoise3dx(E.a.noise,0,t.time,t.time,A),.4,.6),pe=ye(y.myNoise3dx(E.a.noise,t.time,t.time,t.time,A),.4,.5),Re=ye(y.myNoise3dx(E.a.noise,t.time+1024,t.time,t.time,re),.6,.8),Le=ye(y.myNoise3dx(E.a.noise,t.time,t.time+1024,t.time,re),.6,1),we=ye(y.myNoise3dx(E.a.noise,t.time,t.time,t.time+1024,re),.6,1),Pe=ye(y.myNoise3dx(E.a.noise,t.time+1024,0,0,A),.5,.7),Fe=ye(y.myNoise3dx(E.a.noise,0,t.time+1024,0,A),.5,.7),De=ye(y.myNoise3dx(E.a.noise,0,0,t.time+1024,A),.5,.7);_&&(Re=0,Le=0,we=0,Fe=1);var ze=0;if(null==o){o=g["a"].create();var Se=g["b"].set(ce,0,0,-1),Ce=g["b"].set(ie,0,1,0),Ue=g["b"].set(ae,0,0,0);g["a"].lookAt(o,Ue,Se,Ce)}null==r&&(r=g["a"].identity(de),g["a"].perspective(r,90*Math.PI/180,e.canvas.clientWidth/e.canvas.clientHeight,.1,1e3)),e.uniformMatrix4fv(i.uniformLocations.viewMatrix,!1,o),e.uniformMatrix4fv(i.uniformLocations.projectionMatrix,!1,r);var Ne=g["a"].invert(se,o);if(g["b"].set(ve,Ne[12],Ne[13],Ne[14]),e.uniform3fv(i.uniformLocations.cameraPosition,ve),Q){e.bindFramebuffer(e.FRAMEBUFFER,s.frame),e.uniform1f(i.uniformLocations.effectAmount,1);var Ie=g["a"].identity(me);g["a"].scale(Ie,Ie,g["b"].set(ue,400,400,400)),e.uniform1i(i.uniformLocations.enableLight,0),e.uniform1i(i.uniformLocations.drawMode,z),e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,Ie),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE);var Oe,Be=Object(f["a"])(Q);try{for(Be.s();!(Oe=Be.n()).done;){var qe=Oe.value;x.drawMesh(e,i,qe,e.TRIANGLES)}}catch(Pt){Be.e(Pt)}finally{Be.f()}}if(Z&&_e){e.bindFramebuffer(e.FRAMEBUFFER,s.frame),e.uniform1f(i.uniformLocations.effectAmount,_e);var Ve=g["b"].set(fe,0,0,0),Ge=g["b"].set(ue,32,8,32),We=g["a"].identity(me);g["b"].add(Ve,Ve,ge),g["a"].translate(We,We,Ve),g["a"].scale(We,We,Ge),e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,We),e.uniform1i(i.uniformLocations.enableLight,0),e.uniform1i(i.uniformLocations.drawMode,I),e.enable(e.DEPTH_TEST),e.enable(e.CULL_FACE);var He,ke=Object(f["a"])(Z);try{for(ke.s();!(He=ke.n()).done;){var Xe=He.value;x.drawMesh(e,i,Xe,e.TRIANGLES)}}catch(Pt){ke.e(Pt)}finally{ke.f()}}if(ee&&Ae){e.bindFramebuffer(e.FRAMEBUFFER,s.frame),e.uniform1f(i.uniformLocations.effectAmount,Ae),e.uniform1i(i.uniformLocations.enableLight,0),e.uniform1i(i.uniformLocations.drawMode,B),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE);for(var je=1,Ye=64,Ke=-je;Ke<=je;++Ke)for(var $e=-je;$e<=je;++$e)for(var Je=-je;Je<=je;++Je)if(Math.abs(Ke)===je||Math.abs($e)===je||Math.abs(Je)===je){var Qe=this.softAudioLevel,Ze=g["b"].set(fe,Ke,$e,Je),en=g["b"].set(le,0,0,0),nn=g["b"].set(ue,1,1,1),tn=g["a"].identity(me);g["b"].normalize(en,Ze),g["b"].scale(Ze,en,Ye*(1-Qe)),g["b"].add(Ze,Ze,ge),g["a"].translate(tn,tn,Ze),g["a"].scale(tn,tn,nn),g["a"].rotate(tn,tn,Qe*Math.PI*2,en),e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,tn);var on,rn=Object(f["a"])(ee);try{for(rn.s();!(on=rn.n()).done;){var an=on.value;x.drawMesh(e,i,an,e.TRIANGLES)}}catch(Pt){rn.e(Pt)}finally{rn.f()}}}if(oe&&De){e.bindFramebuffer(e.FRAMEBUFFER,s.frame),e.uniform1f(i.uniformLocations.effectAmount,De),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE),e.uniform1i(i.uniformLocations.enableLight,0),e.uniform1i(i.uniformLocations.drawMode,G);var cn=32;ze=0;for(var fn=Math.PI/3;fn<2*Math.PI-.001;fn+=Math.PI/3){var un=g["b"].set(fe,-cn*Math.sin(fn),0,-cn*Math.cos(fn)),ln=g["a"].identity(me),sn=g["b"].set(ue,4,4,4);g["b"].add(un,un,ge),g["a"].translate(ln,ln,un),g["a"].scale(ln,ln,sn),g["a"].rotateY(ln,ln,-this.timeShift),e.uniform1f(i.uniformLocations.drawVariant,4*++ze),e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,ln);var mn,dn=Object(f["a"])(oe);try{for(dn.s();!(mn=dn.n()).done;){var vn=mn.value;x.drawMesh(e,i,vn,e.TRIANGLES)}}catch(Pt){dn.e(Pt)}finally{dn.f()}}}if(ne&&Pe){e.bindFramebuffer(e.FRAMEBUFFER,s.frame),e.uniform1f(i.uniformLocations.effectAmount,Pe),e.uniform1i(i.uniformLocations.enableLight,0),e.uniform1i(i.uniformLocations.drawMode,q),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE);var gn=g["b"].set(ue,4,4,4),xn=g["a"].identity(me);g["a"].scale(xn,xn,gn),e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,xn);var yn,hn=Object(f["a"])(ne);try{for(hn.s();!(yn=hn.n()).done;){var En=yn.value;x.drawMesh(e,i,En,e.TRIANGLES)}}catch(Pt){hn.e(Pt)}finally{hn.f()}}if(te&&Fe){e.uniform1f(i.uniformLocations.effectAmount,Fe),e.uniform1i(i.uniformLocations.enableLight,0),e.uniform1i(i.uniformLocations.drawMode,V),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE);var bn=g["b"].set(ue,2,2,2),An=g["a"].identity(me);g["a"].scale(An,An,bn),e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,An),e.bindFramebuffer(e.FRAMEBUFFER,d.frame);var _n,Mn=Object(f["a"])(te);try{for(Mn.s();!(_n=Mn.n()).done;){var Tn=_n.value;x.drawMesh(e,i,Tn,e.TRIANGLES,j)}}catch(Pt){Mn.e(Pt)}finally{Mn.f()}}if(Ee){e.bindFramebuffer(e.FRAMEBUFFER,s.frame),e.uniform1f(i.uniformLocations.effectAmount,Ee),e.enable(e.DEPTH_TEST),e.enable(e.CULL_FACE),e.uniform1i(i.uniformLocations.enableLight,0),e.uniform1f(i.uniformLocations.animationVelocity,2),e.uniform1i(i.uniformLocations.drawMode,S);var pn=20;ze=0;for(var Rn=Math.PI/3;Rn<2*Math.PI-.001;Rn+=2*Math.PI/3){var Ln=g["b"].set(fe,-pn*Math.sin(Rn),-128,-pn*Math.cos(Rn)),wn=g["a"].identity(me),Pn=g["b"].set(ue,4,4,4);g["b"].add(Ln,Ln,ge),g["a"].translate(wn,wn,Ln),g["a"].scale(wn,wn,Pn),e.uniform1f(i.uniformLocations.drawVariant,4*++ze),e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,wn),x.drawMesh(e,i,b,e.TRIANGLES)}}if(Te){e.bindFramebuffer(e.FRAMEBUFFER,s.frame),e.uniform1f(i.uniformLocations.effectAmount,Te);var Fn=g["b"].set(ie,0,1,0);e.uniform1i(i.uniformLocations.enableLight,0),e.uniform1i(i.uniformLocations.drawMode,N),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE),ze=0;for(var Dn=0;Dn<2*Math.PI;Dn+=Math.PI/8){var zn=24,Sn=g["b"].set(fe,zn*Math.cos(Dn),24,zn*Math.sin(Dn)),Cn=g["b"].set(ue,2,2,2),Un=g["a"].identity(me);g["b"].add(Sn,Sn,ge),Un=x.getBillboardMatrix(Un,Sn,ve,Fn),g["a"].scale(Un,Un,Cn),e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,Un),e.uniform1f(i.uniformLocations.drawVariant,32*++ze),x.drawMesh(e,i,Y,e.TRIANGLES,W)}}if($&&he){e.bindFramebuffer(e.FRAMEBUFFER,m.frame),e.uniform1f(i.uniformLocations.effectAmount,1);var Nn=g["a"].identity(me),In=g["b"].set(fe,0,-2.2,0),On=g["b"].set(ue,8,8,8);g["b"].add(In,In,ge),g["a"].translate(Nn,Nn,In),g["a"].scale(Nn,Nn,On),g["a"].rotateY(Nn,Nn,-this.timeShift*xe),e.uniform1i(i.uniformLocations.enableLight,0),e.uniform1i(i.uniformLocations.drawMode,F),e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,Nn),e.enable(e.DEPTH_TEST),e.disable(e.CULL_FACE);var Bn,qn=Object(f["a"])($);try{for(qn.s();!(Bn=qn.n()).done;){var Vn=Bn.value;x.drawMesh(e,i,Vn,e.TRIANGLES,k)}}catch(Pt){qn.e(Pt)}finally{qn.f()}}if(J&&he){e.bindFramebuffer(e.FRAMEBUFFER,m.frame),e.uniform1f(i.uniformLocations.effectAmount,1);var Gn=g["a"].identity(me),Wn=g["b"].set(fe,0,0,0);g["b"].add(Wn,Wn,ge),g["a"].translate(Gn,Gn,Wn),g["a"].rotateY(Gn,Gn,Math.PI/2-this.timeShift*xe),e.enable(e.DEPTH_TEST),e.enable(e.CULL_FACE),e.uniform1i(i.uniformLocations.enableLight,0),e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,Gn),e.uniform1i(i.uniformLocations.drawMode,U);var Hn,kn=Object(f["a"])(J);try{for(kn.s();!(Hn=kn.n()).done;){var Xn=Hn.value;x.drawMesh(e,i,Xn,e.TRIANGLES)}}catch(Pt){kn.e(Pt)}finally{kn.f()}}if($&&Me){var jn=g["b"].set(fe,0,-2.2,0),Yn=g["a"].identity(me),Kn=g["b"].set(ue,8,8,8);g["b"].add(jn,jn,ge),g["a"].translate(Yn,Yn,jn),g["a"].scale(Yn,Yn,Kn),g["a"].rotateY(Yn,Yn,-this.timeShift*xe),e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,Yn),e.enable(e.DEPTH_TEST),e.disable(e.CULL_FACE),e.bindFramebuffer(e.FRAMEBUFFER,s.frame),e.uniform1f(i.uniformLocations.effectAmount,Me),e.uniform1i(i.uniformLocations.enableLight,0),e.uniform1i(i.uniformLocations.drawMode,O);var $n,Jn=Object(f["a"])($);try{for(Jn.s();!($n=Jn.n()).done;){var Qn=$n.value;x.drawMesh(e,i,Qn,e.TRIANGLES,H)}}catch(Pt){Jn.e(Pt)}finally{Jn.f()}}if(he){e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE);var Zn=g["a"].identity(me);e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,Zn),e.uniform1i(i.uniformLocations.enableLight,0),e.bindFramebuffer(e.FRAMEBUFFER,h.frame),e.uniform1f(i.uniformLocations.effectAmount,1),e.uniform1i(i.uniformLocations.drawMode,P),x.drawMesh(e,i,Y,e.TRIANGLES,s.texture),e.bindFramebuffer(e.FRAMEBUFFER,s.frame),e.uniform1f(i.uniformLocations.effectAmount,he),e.uniform1i(i.uniformLocations.drawMode,L),x.drawMesh(e,i,Y,e.TRIANGLES,h.texture,m.texture)}if(J){var et=g["b"].set(fe,0,0,0);g["b"].add(et,et,ge);var nt=g["a"].identity(me);g["a"].translate(nt,nt,et),g["a"].rotateY(nt,nt,Math.PI/2-this.timeShift*xe),e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,nt),e.enable(e.DEPTH_TEST),e.enable(e.CULL_FACE),e.uniform1i(i.uniformLocations.enableLight,1),e.bindFramebuffer(e.FRAMEBUFFER,v.frame),e.uniform1f(i.uniformLocations.effectAmount,1),e.uniform1i(i.uniformLocations.drawMode,D);var tt,ot=Object(f["a"])(J);try{for(ot.s();!(tt=ot.n()).done;){var rt=tt.value;x.drawMesh(e,i,rt,e.TRIANGLES)}}catch(Pt){ot.e(Pt)}finally{ot.f()}}if(pe){var it=g["a"].identity(me);e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,it),e.uniform1i(i.uniformLocations.enableLight,0),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE),e.bindFramebuffer(e.FRAMEBUFFER,s.frame),e.uniform1f(i.uniformLocations.effectAmount,pe),e.uniform1i(i.uniformLocations.drawMode,w),x.drawMesh(e,i,Y,e.TRIANGLES,v.texture)}if(J){var at=g["b"].set(fe,0,0,0);g["b"].add(at,at,ge);var ct=g["a"].identity(me);g["a"].translate(ct,ct,at),g["a"].rotateY(ct,ct,Math.PI/2-this.timeShift*xe),e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,ct),e.enable(e.DEPTH_TEST),e.enable(e.CULL_FACE),e.uniform1i(i.uniformLocations.enableLight,1),e.bindFramebuffer(e.FRAMEBUFFER,s.frame),e.uniform1f(i.uniformLocations.effectAmount,1),e.uniform1i(i.uniformLocations.drawMode,C);var ft,ut=Object(f["a"])(J);try{for(ut.s();!(ft=ut.n()).done;){var lt=ft.value;x.drawMesh(e,i,lt,e.TRIANGLES)}}catch(Pt){ut.e(Pt)}finally{ut.f()}}if(Fe){e.uniform1f(i.uniformLocations.effectAmount,1),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE);var st=g["a"].identity(me);e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,st),e.uniform1i(i.uniformLocations.enableLight,0),x.copyBuffer(e,s,h),e.bindFramebuffer(e.FRAMEBUFFER,s.frame),e.uniform1f(i.uniformLocations.effectAmount,1),e.uniform1i(i.uniformLocations.drawMode,M),x.drawMesh(e,i,Y,e.TRIANGLES,h.texture,d.texture)}if(te&&Fe){e.uniform1f(i.uniformLocations.effectAmount,Fe),e.uniform1i(i.uniformLocations.enableLight,0),e.uniform1i(i.uniformLocations.drawMode,V),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE);var mt=g["b"].set(ue,2,2,2),dt=g["a"].identity(me);g["a"].scale(dt,dt,mt),e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,dt),e.bindFramebuffer(e.FRAMEBUFFER,s.frame);var vt,gt=Object(f["a"])(te);try{for(gt.s();!(vt=gt.n()).done;){var xt=vt.value;x.drawMesh(e,i,xt,e.TRIANGLES,X)}}catch(Pt){gt.e(Pt)}finally{gt.f()}}if(we){e.uniform1f(i.uniformLocations.effectAmount,1),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE);var yt=g["a"].identity(me);e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,yt),e.uniform1i(i.uniformLocations.enableLight,0),x.copyBuffer(e,s,h),e.bindFramebuffer(e.FRAMEBUFFER,s.frame),e.uniform1f(i.uniformLocations.effectAmount,we),e.uniform1i(i.uniformLocations.drawMode,R),x.drawMesh(e,i,Y,e.TRIANGLES,h.texture)}if(Le){e.uniform1f(i.uniformLocations.effectAmount,1),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE);var ht=g["a"].identity(me);e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,ht),e.uniform1i(i.uniformLocations.enableLight,0),x.copyBuffer(e,s,h),e.bindFramebuffer(e.FRAMEBUFFER,s.frame),e.uniform1f(i.uniformLocations.effectAmount,Le),e.uniform1i(i.uniformLocations.drawMode,T),x.drawMesh(e,i,Y,e.TRIANGLES,h.texture)}if(Re){e.uniform1f(i.uniformLocations.effectAmount,1),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE);var Et=g["a"].identity(me);e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,Et),e.uniform1i(i.uniformLocations.enableLight,0),x.copyBuffer(e,s,h),e.bindFramebuffer(e.FRAMEBUFFER,s.frame),e.uniform1f(i.uniformLocations.effectAmount,Re),e.uniform1i(i.uniformLocations.drawMode,p),x.drawMesh(e,i,Y,e.TRIANGLES,h.texture)}e.viewport(n.x,n.y,n.width,n.height);var bt=g["a"].identity(me);if(e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,bt),e.uniform1i(i.uniformLocations.enableLight,0),e.disable(e.DEPTH_TEST),e.disable(e.CULL_FACE),e.bindFramebuffer(e.FRAMEBUFFER,c),e.uniform1f(i.uniformLocations.effectAmount,1),e.uniform1i(i.uniformLocations.drawMode,P),x.drawMesh(e,i,Y,e.TRIANGLES,s.texture),_&&Y){e.bindFramebuffer(e.FRAMEBUFFER,c),e.uniform1f(i.uniformLocations.effectAmount,1),e.uniform1i(i.uniformLocations.enableLight,0),e.uniform1i(i.uniformLocations.drawMode,P),e.enable(e.DEPTH_TEST),e.disable(e.CULL_FACE);var At=[K,m.texture,v.texture,d.texture],_t=.1,Mt=g["a"].identity(me),Tt=g["b"].set(fe,-1-_t,1-_t,0),pt=g["b"].set(ue,_t,_t,1);g["a"].translate(Mt,Mt,Tt),g["a"].scale(Mt,Mt,pt),Tt=g["b"].set(fe,2,0,0);for(var Rt=0,Lt=At;Rt<Lt.length;Rt++){var wt=Lt[Rt];g["a"].translate(Mt,Mt,Tt),e.uniformMatrix4fv(i.uniformLocations.modelMatrix,!1,Mt),x.drawMesh(e,i,Y,e.TRIANGLES,wt)}}}this.state=x.createState(Ee.bind(this),Ae.bind(this),he.bind(this)),x.loop(this.gl,this.state)}},H=W,k=(t("e969"),t("2877")),X=Object(k["a"])(H,a,c,!1,null,"0d895a92",null),j=X.exports,Y={name:"App",components:{WebGl:j}},K=Y,$=(t("034f"),Object(k["a"])(K,r,i,!1,null,null,null)),J=$.exports;o["a"].config.productionTip=!1,new o["a"]({render:function(e){return e(J)}}).$mount("#app")},"85ec":function(e,n,t){},b847:function(e,n,t){},e969:function(e,n,t){"use strict";var o=t("b847"),r=t.n(o);r.a}});
//# sourceMappingURL=app.c785b53e.js.map